{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"19ijH9TAKV4y69TUZRz4RNdIMGBd7C6Cb","timestamp":1698854412395},{"file_id":"1ZW6tMQc3rYNaGqTCG7-Y_KbR_ml3b8zY","timestamp":1681152703009}],"toc_visible":true,"collapsed_sections":["0PuNV4ibm2RT"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Making public business and economy file\n","## Sandra Tilmon\n","## 11/01/2023\n","\n","\n","#### Change log:\n","Date        Change\n"],"metadata":{"id":"GUZfQbsoQH-Y"}},{"cell_type":"markdown","source":["# Setup"],"metadata":{"id":"yiWW2iv3QW-K"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","import datetime\n","import math\n","\n","import os\n","import re\n","\n","import requests\n","\n","import matplotlib\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","import geopandas as gpd\n","from shapely.geometry import Point, shape\n","# import fiona\n","import geopy\n","from geopy.extra.rate_limiter import RateLimiter\n","from geopy import geocoders\n","from geopy.geocoders import GoogleV3\n","\n","from timeit import default_timer as timer\n","\n","pd.set_option('display.max_rows', None)\n","pd.set_option('display.max_columns', None)\n","pd.set_option('display.width', None)\n","\n","%matplotlib inline"],"metadata":{"id":"4Tq7gpEVQaPr","executionInfo":{"status":"ok","timestamp":1727816010142,"user_tz":300,"elapsed":153,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","execution_count":46,"metadata":{"id":"XlLhWh5HPpOf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1727816013856,"user_tz":300,"elapsed":925,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"ffdb9ac0-186d-4a2c-ea74-198fe44436fa"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/gdrive; to attempt to forcibly remount, call drive.mount(\"/content/gdrive\", force_remount=True).\n"]}],"source":["# Mount drive\n","\n","from google.colab import drive\n","drive.mount('/content/gdrive')"]},{"cell_type":"code","source":["# Raw data sources\n","dir = '/content/gdrive/My Drive/Sociome_Folder/Data/'\n","\n","# Output curated datasets\n","curated = '/content/gdrive/My Drive/Sociome_Folder/Data Commons/Curated datasets/'"],"metadata":{"id":"cRe762enQa9v","executionInfo":{"status":"ok","timestamp":1727816014319,"user_tz":300,"elapsed":129,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":47,"outputs":[]},{"cell_type":"code","source":["# Empty list for dataframes later\n","\n","frames = []"],"metadata":{"id":"Lk4jyvDDgjy4","executionInfo":{"status":"ok","timestamp":1727816021125,"user_tz":300,"elapsed":140,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":49,"outputs":[]},{"cell_type":"markdown","source":["# GIS"],"metadata":{"id":"Ihydkv9NnAnv"}},{"cell_type":"markdown","source":["## Set CRS\n","\n","North America https://epsg.io/?q=North%20America%20%20kind%3APROJCRS"],"metadata":{"id":"i4PK2o_FmzZ2"}},{"cell_type":"code","source":["crs = {'init' :'epsg:4269'}"],"metadata":{"id":"odMMv2GInCA5"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Census tracts (shp)"],"metadata":{"id":"P6lswaJDh8w4"}},{"cell_type":"code","source":["tracts_shp = gpd.read_file(dir + \"Census Data/2010 census tracts/national_census.shp\")\n","\n","tracts_shp = gpd.GeoDataFrame(tracts_shp).set_geometry('geometry', crs=crs)\n","\n","tracts_shp = tracts_shp.drop(columns=['STATEFP10', 'COUNTYFP10','TRACTCE10',\n","'NAME10', 'NAMELSAD10', 'MTFCC10', 'FUNCSTAT10', 'ALAND10', 'AWATER10',\n","'INTPTLAT10', 'INTPTLON10'])"],"metadata":{"id":"tnVIDiv0m7z6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1725376919568,"user_tz":300,"elapsed":107900,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"8bd4464c-d586-4e17-e146-a845966a24f8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/pyproj/crs/crs.py:141: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6\n","  in_crs_string = _prepare_from_proj_string(in_crs_string)\n"]}]},{"cell_type":"code","source":["tracts = pd.read_csv(dir + \"Census Data/2010 census tracts/national_census.csv\")\n","tracts.drop(columns=['Unnamed: 0', 'STATEFP10', 'COUNTYFP10', 'ALAND10','AWATER10',\n","                     'INTPTLAT10','INTPTLON10', 'geometry'], inplace=True)\n","frames.append('tracts')"],"metadata":{"id":"g2qoG-wqrX1X","executionInfo":{"status":"ok","timestamp":1727816046283,"user_tz":300,"elapsed":22553,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":50,"outputs":[]},{"cell_type":"markdown","source":["## Functions"],"metadata":{"id":"0PuNV4ibm2RT"}},{"cell_type":"code","source":["# Lat/long coordinates to census tract\n","\n","def LatLongTract(infile, lat, long):\n","\n","  # establish lat/long point geometry\n","  geometry = [Point(xy) for xy in zip(infile[long], infile[lat])]\n","\n","  # Make a geo dataframe, set CRS\n","  gdf = gpd.GeoDataFrame(infile, geometry=geometry)\n","  gdf = gdf.set_crs(crs)\n","\n","  # Intersect lat/long points and census tract\n","  result=gpd.sjoin(gdf, tracts_shp, how='left', op='within')\n","\n","  result.drop(columns=['index_right'], inplace=True)\n","\n","  # Standardize census tract GEOID to uppercase throughout notebooks\n","  result.rename(columns={\"geoid10\" : \"GEOID10\"}, inplace=True)\n","  return(result)\n","\n","\n","\n","# One line street address to lat/long coordinates and census tract\n","\n","def AddLatLongTract(infile):\n","\n","  # Create \"oneline\" address in cleaning \"123 N Main Street Chicago, IL 60000\"\n","  # Field names vary so not bothering to include here\n","\n","  g = geocoders.GoogleV3(api_key='')\n","\n","  def Gv3_latlong (address):\n","      location = g.geocode(address)\n","      lat = location.latitude\n","      long = location.longitude\n","      # Perform additional steps to obtain census tract from coordinates\n","      # census_tract = get_census_tract_from_coordinates(latitude, longitude)\n","      return lat, long, location\n","\n","  infile[['lat', 'long', 'Location']] = infile['oneline'].apply(Gv3_latlong).apply(pd.Series)\n","\n","  # establish lat/long point geometry\n","  geometry = [Point(xy) for xy in zip(infile['long'], infile['lat'])]\n","\n","  # Make a geo dataframe, set CRS\n","  gdf = gpd.GeoDataFrame(infile, geometry=geometry)\n","  gdf = gdf.set_crs(crs)\n","\n","  # Intersect lat/long points and census tract\n","  result=gpd.sjoin(gdf, tracts_shp, how='left', op='within')\n","\n","  result.drop(columns=['index_right'], inplace=True)\n","\n","  # Standardize census tract GEOID10 to uppercase throughout notebooks\n","  result.rename(columns={\"geoid10\" : \"GEOID10\"}, inplace=True)\n","  return(result)"],"metadata":{"id":"yL8RTtxam3A7"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"ONbOoncECNPZ"}},{"cell_type":"markdown","source":["# Council on Environmental Quality (CEQ)\n","\n","https://screeningtool.geoplatform.gov/"],"metadata":{"id":"GFc_WCtECNWI"}},{"cell_type":"code","source":["screen = pd.read_csv(dir + 'Climate and economic justice tool/1.0-communities.csv')\n","screen['GEOID10'] = screen['Census tract 2010 ID']\n","\n","# Keep only variables that contain new information\n","screen = screen[['GEOID10',\n","             'DOT Travel Barriers Score (percentile)',\n","             'Greater than or equal to the 90th percentile for DOT transit barriers and is low income?',\n","\n","             'Expected agricultural loss rate (Natural Hazards Risk Index)',\n","             'Expected agricultural loss rate (Natural Hazards Risk Index) (percentile)',\n","             'Greater than or equal to the 90th percentile for expected agriculture loss rate and is low income?',\n","\n","                 'Energy burden',\n","                 'Energy burden (percentile)',\n","                  'Greater than or equal to the 90th percentile for energy burden and is low income?'\n","             ]]\n","\n","# Shorter names\n","newnames = {\n","    'GEOID': 'GEOID10',\n","    'DOT Travel Barriers Score (percentile)' : 'DOT_travel_barr_pctile',\n","    'Greater than or equal to the 90th percentile for DOT transit barriers and is low income?': 'DOT_travel_barr_ge90pct_lowinc',\n","\n","    'Expected agricultural loss rate (Natural Hazards Risk Index)': 'Agri_loss_rate',\n","    'Expected agricultural loss rate (Natural Hazards Risk Index) (percentile)': 'Agri_loss_rate_pctile',\n","    'Greater than or equal to the 90th percentile for expected agriculture loss rate and is low income?': 'Agri_loss_ge90pct_lowinc',\n","\n","    'Energy burden': 'Energy_burden',\n","    'Energy burden (percentile)': 'Energy_burden_pct',\n","    'Greater than or equal to the 90th percentile for energy burden and is low income?': 'Energy_burden_ge90pct_lowinc'\n","}\n","\n","screen.rename(columns=newnames, inplace=True)\n","\n","# Round to two decimals\n","columns_two = ['DOT_travel_barr_pctile', 'DOT_travel_barr_ge90pct_lowinc',\n","               'Agri_loss_rate','Agri_loss_rate_pctile', 'Agri_loss_ge90pct_lowinc']\n","screen[columns_two] = screen[columns_two].round(2)"],"metadata":{"id":"o9K82PeGCSHf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1727816048657,"user_tz":300,"elapsed":2375,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"34748fa3-f868-4aff-b829-badd2c276fbf"},"execution_count":51,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-51-48f0929c6cb0>:1: DtypeWarning: Columns (18,26,70,72,85,131) have mixed types. Specify dtype option on import or set low_memory=False.\n","  screen = pd.read_csv(dir + 'Climate and economic justice tool/1.0-communities.csv')\n"]}]},{"cell_type":"code","source":["frames.append('screen')"],"metadata":{"id":"mRA33q9oCWot","executionInfo":{"status":"ok","timestamp":1727816048657,"user_tz":300,"elapsed":2,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":52,"outputs":[]},{"cell_type":"markdown","source":["# HUD\n","Housing and Urban Development"],"metadata":{"id":"eQC5OHL_Drhk"}},{"cell_type":"markdown","source":["## CDBG: Community development block grants - reload\n","\n","https://hudgis-hud.opendata.arcgis.com/datasets/community-development-block-grant-activity-by-tract/explore?showTable=true\n","\n","Asset Acquisition - activity related to acquisition, including disposition, clearance and demolition, and clean-up of contaminated Sites/brownfields.\n","\n","Economic Development - activity related to economic development, including commercial or industrial rehab, commercial or industrial land acquisition, commercial or industrial construction, commercial or industrial infrastructure development, direct assistance to businesses, and micro-enterprise assistance.\n","\n","Housing - activity related to housing, including multifamily rehab, housing services, code enforcement, operation and repair of foreclosed property and public housing modernization.\n","\n","Public Improvements - activity related to public improvements, including senior centers, youth centers, parks, street improvements, water/sewer improvements, child care centers, fire stations, health centers, non-residential historic preservation, etc.\n","\n","Public Services - activity related to public services, including senior services, legal services, youth services, employment training, health services, homebuyer counseling, food banks, etc.\n","\n","Other - activity related to urban renewal completion, non-profit organization capacity building, and assistance to institutions of higher education.\n","\n","\n","https://www.hud.gov/program_offices/comm_planning/cdbg\n","\n","https://www.hudexchange.info/programs/cdbg/cdbg-reports-program-data-and-income-limits/\n","\n","\n"],"metadata":{"id":"ySBX2F-4DtFM"}},{"cell_type":"code","source":["raw = pd.read_csv(dir + 'HUD/CDBG activity/Community_Development_Block_Grant_Activity_by_Tract.csv')\n","raw['GEOID10'] = raw['GEOID'].astype(str).str[:-2]\n","\n","cols = ['ED_COUNT', 'ED_FUNDING_AMT', 'TOTAL_COUNT', 'TOTAL_AMT']\n","\n","CDBG = raw.groupby(['GEOID10'])[cols].sum()\n","\n","# Add 'CDBG_' prefix to column names\n","new_column_names = ['CDBG_' + col for col in cols]\n","\n","# Rename the columns\n","CDBG.columns = new_column_names\n","\n","CDBG.reset_index(inplace=True)\n","\n","frames.append('CDBG')"],"metadata":{"id":"lXeTLBzvP6BG","executionInfo":{"status":"ok","timestamp":1727816075403,"user_tz":300,"elapsed":1116,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":53,"outputs":[]},{"cell_type":"markdown","source":["## Difficult development areas - reload\n","\n","https://www.huduser.gov/portal/datasets/qct.html\n","\n","BASED ON ACS VARIABLES.\n","\n","---\n","\n"],"metadata":{"id":"XLpzyYmjDzWu"}},{"cell_type":"code","source":["raw = pd.read_excel(dir + 'HUD/Difficult development areas/qct_data_2020.xlsx')\n","raw.head()\n","\n","raw = raw[['tract_id', 'qct']]\n","HUD_qct = raw.rename(columns={'tract_id':'GEOID10', 'qct':'HUDQualCenTract'})"],"metadata":{"id":"1mXuW6j8D1O6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Export and reload"],"metadata":{"id":"qh6ahFqGRZvO"}},{"cell_type":"code","source":["# Export tract summary\n","with open(dir + 'HUD/Difficult development areas/HUD_qct_2020.csv', 'w') as f:\n","  HUD_qct.to_csv(f)"],"metadata":{"id":"czO-e4tSRZvO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Reload tract summary\n","\n","HUD_qct = pd.read_csv(dir + 'HUD/Difficult development areas/HUD_qct_2020.csv')\n","HUD_qct.drop(columns=['Unnamed: 0'],  inplace=True)\n","frames.append('HUD_qct')"],"metadata":{"id":"cz28LlhoRZvO","executionInfo":{"status":"ok","timestamp":1727816081213,"user_tz":300,"elapsed":123,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":54,"outputs":[]},{"cell_type":"markdown","source":["## Empowerment zones - reload\n","\n","https://hudgis-hud.opendata.arcgis.com/maps/empowerment-zones-and-enterprise-communities"],"metadata":{"id":"3GJGHff5D11W"}},{"cell_type":"code","source":["empower = pd.read_csv(dir + 'HUD/Empowerment zones/Empowerment_Zones_and_Enterprise_Communities.csv')\n","empower['GEOID10'] = empower['FIPS'].astype(str).str[:-2]\n","\n","empower['HUDEmpowerZone'] = empower['TYPE'].apply(lambda x: 1 if x ==\"Empowerment Zone\" else 0)\n","empower['HUDRenewalComm'] = empower['TYPE'].apply(lambda x: 1 if x ==\"Renewal Community\" else 0)\n","empower['HUDEnterpriseComm'] = empower['TYPE'].apply(lambda x: 1 if x ==\"Enterprise Community\" else 0)\n","empower['HUDEnterpriseZone'] = empower['TYPE'].apply(lambda x: 1 if x ==\"Enterprise Zone\" else 0)\n","\n","empower = empower[['GEOID10', 'HUDEmpowerZone', 'HUDRenewalComm', 'HUDEnterpriseComm',\n","                   'HUDEnterpriseZone']]"],"metadata":{"id":"6tdZDjFiD3Gm"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Export and reload"],"metadata":{"id":"9BEk8p8SRap_"}},{"cell_type":"code","source":["# Export\n","with open(dir + 'HUD/Empowerment zones/EmpowerZones.csv', 'w') as f:\n","  empower.to_csv(f)"],"metadata":{"id":"OUQ1ee75Rap_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Reload\n","\n","empower = pd.read_csv(dir + 'HUD/Empowerment zones/EmpowerZones.csv')\n","empower.drop(columns=['Unnamed: 0'],  inplace=True)\n","frames.append('empower')"],"metadata":{"id":"1ObEhIjhRap_","executionInfo":{"status":"ok","timestamp":1727816084179,"user_tz":300,"elapsed":149,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":55,"outputs":[]},{"cell_type":"markdown","source":["## Jobs proximity index - HUD\n","\n","https://hudgis-hud.opendata.arcgis.com/datasets/HUD::jobs-proximity-index/about\n","\n","Index source data: Longitudinal Employer-Household Dynamics (LEHD) data 2017"],"metadata":{"id":"jxK67P5RFUEL"}},{"cell_type":"code","source":["raw = pd.read_csv(dir + 'HUD/Jobs proximity index/Jobs_Proximity_Index_2020.csv')\n","raw['GEOID10'] = raw['GEOID'].astype(str).str[:-1]"],"metadata":{"id":"hi9VoycwFVgg"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Summarize by tract"],"metadata":{"id":"kjea7WJARblv"}},{"cell_type":"code","source":["JPIdx = raw.groupby('GEOID10')['jobs_idx'].mean().round(2).reset_index()"],"metadata":{"id":"UrZs4HWoRblw"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Export and reload"],"metadata":{"id":"XMbe7CJ-Rblw"}},{"cell_type":"code","source":["# Export tract summary\n","with open(dir + 'HUD/Jobs proximity index/JobsIDX.csv', 'w') as f:\n","  JPIdx.to_csv(f)"],"metadata":{"id":"dT3LZ9VzRblw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Reload tract summary\n","\n","JPIdx = pd.read_csv(dir + 'HUD/Jobs proximity index/JobsIDX.csv')\n","JPIdx.drop(columns=['Unnamed: 0'],  inplace=True)\n","frames.append('JPIdx')"],"metadata":{"id":"57IkR-jSRblw","executionInfo":{"status":"ok","timestamp":1727816086560,"user_tz":300,"elapsed":132,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":56,"outputs":[]},{"cell_type":"markdown","source":["## Labor market engagement index - reload\n","\n","https://hudgis-hud.opendata.arcgis.com/maps/labor-market-engagement-index\n","\n","INDEX SOURCE IS ACS 2011-2015"],"metadata":{"id":"au85POBMFYpT"}},{"cell_type":"code","source":["raw = pd.read_csv(dir + 'HUD/Labor market engagement index/Labor_Market_Engagement_Index.csv')\n","raw.head()\n","\n","LMEIdx = raw[['GEOID', 'LBR_IDX']]\n","LMEIdx = LMEIdx.rename(columns={'GEOID': 'GEOID10'})"],"metadata":{"id":"qA9udXH2FaIM"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Export and reload"],"metadata":{"id":"q74qD--QRckd"}},{"cell_type":"code","source":["# Export tract\n","with open(dir + 'HUD/Labor market engagement index/LMEIdx.csv', 'w') as f:\n","  LMEIdx.to_csv(f)"],"metadata":{"id":"a3IKtQwdRckd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Reload tract summary\n","\n","LMEIdx = pd.read_csv(dir + 'HUD/Labor market engagement index/LMEIdx.csv')\n","LMEIdx.drop(columns=['Unnamed: 0'],  inplace=True)\n","frames.append('LMEIdx')"],"metadata":{"id":"xfgYn5GKRckd","executionInfo":{"status":"ok","timestamp":1727816088875,"user_tz":300,"elapsed":106,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":57,"outputs":[]},{"cell_type":"markdown","source":["## Location affordability index -- reload\n","\n","Methods and data dictionary\n","\n","https://files.hudexchange.info/resources/documents/Location-Affordability-Index-Version-3-Data-and-Methodology.pdf"],"metadata":{"id":"XVr5tQRf4aj-"}},{"cell_type":"code","source":["LAI = pd.read_csv(dir + 'HUD/Location affordability index/Location_Affordability_Index_v.3.csv')\n","\n","LAI = LAI.rename(columns={'GEOID': 'GEOID10'})\n","\n","LAI = LAI[['GEOID10',\n","           'pct_transit_j2w_renters',  'pct_transit_j2w_owners', 'pct_transit_j2w',\n","           'autos_per_hh', 'autos_per_hh_renters', 'autos_per_hh_owner', 'autos_per_hh',\n","           'commuters_per_hh_renters', 'commuters_per_hh_owners', 'commuters_per_hh',\n","           'median_commute',\n","           'job_density_simple', 'retail_density_simple', 'job_gravity', 'retail_gravity']]"],"metadata":{"id":"aiLeNTMi4dDk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724266604766,"user_tz":300,"elapsed":12359,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"962827b3-0356-4631-9fa8-957a07b38282"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-52-a58213a721ba>:1: DtypeWarning: Columns (48) have mixed types. Specify dtype option on import or set low_memory=False.\n","  LAI = pd.read_csv(dir + 'HUD/Location affordability index/Location_Affordability_Index_v.3.csv')\n"]}]},{"cell_type":"markdown","source":["### Export and reload"],"metadata":{"id":"7cEQJZEN8Igu"}},{"cell_type":"code","source":["# Export tract\n","with open(dir + 'HUD/Location affordability index/LMAIdx.csv', 'w') as f:\n","  LAI.to_csv(f)"],"metadata":{"id":"OsqryG7e8Jzw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Reload tract summary\n","\n","LAI = pd.read_csv(dir + 'HUD/Location affordability index/LMAIdx.csv')\n","LAI.drop(columns=['Unnamed: 0'],  inplace=True)\n","frames.append('LAI')"],"metadata":{"id":"E2gs0AbN8J7I","executionInfo":{"status":"ok","timestamp":1727816091265,"user_tz":300,"elapsed":277,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":58,"outputs":[]},{"cell_type":"markdown","source":["## Low transportation cost index -- reload\n","\n","https://hudgis-hud.opendata.arcgis.com/datasets/HUD::low-transportation-cost-index/explore?location=15.235443%2C0.315564%2C2.51"],"metadata":{"id":"N6YfkLy_Fl-a"}},{"cell_type":"code","source":["raw = pd.read_csv(dir + 'HUD/Low transportation cost index/Low_Transportation_Cost_Index.csv')\n","raw.head()\n","\n","LTransIdx = raw[['GEOID', 'TCOST_IDX']]\n","LTransIdx = LTransIdx.rename(columns={'GEOID': 'GEOID10'})"],"metadata":{"id":"Gr9ydfgnFyd6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Export and reload"],"metadata":{"id":"36p6CCTJRdRM"}},{"cell_type":"code","source":["# Export tract summary\n","with open(dir + 'HUD/Low transportation cost index/LowTransIndex.csv', 'w') as f:\n","   LTransIdx.to_csv(f)"],"metadata":{"id":"XYXHCOlTRdRM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Reload tract summary\n","\n","LTransIdx = pd.read_csv(dir + 'HUD/Low transportation cost index/LowTransIndex.csv')\n","LTransIdx.drop(columns=['Unnamed: 0'],  inplace=True)\n","frames.append('LTransIdx')"],"metadata":{"id":"H4etwp5wRdRM","executionInfo":{"status":"ok","timestamp":1727816093597,"user_tz":300,"elapsed":117,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":59,"outputs":[]},{"cell_type":"markdown","source":["# RAFI\n","\n","https://grocerygapatlas.rafiusa.org/"],"metadata":{"id":"dpepqlf9dqeW"}},{"cell_type":"code","source":["raw = pd.read_csv(dir + 'RAFI/Grocery gap atlas/full_tract.csv')\n","raw['GEOID10'] = raw['GEOID'].astype(str).str[:-2]\n","\n","rafi = raw[['GEOID10', 'gravity_2023',\n"," 'gravity_2023_percentile',\n"," 'gravity_2023_state_percentile',\n"," 'gravity_2023_county_percentile',\n"," 'hhi_2023',\n"," 'hhi_2023_percentile',\n"," 'hhi_2023_state_percentile',\n"," 'hhi_2023_county_percentile',\n","           'gravity_2000',\n"," 'gravity_2010',\n"," 'gravity_2020',\n"," 'gravity_ds_2000',\n"," 'gravity_ds_2010',\n"," 'gravity_ds_2020',\n"," 'hhi_ds_2000',\n"," 'hhi_ds_2010',\n"," 'hhi_ds_2020',\n"," 'hhi_2000',\n"," 'hhi_2010',\n"," 'hhi_2020']]\n","\n","frames.append('rafi')"],"metadata":{"id":"bQDnfu4CdzII","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1727816376863,"user_tz":300,"elapsed":1865,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"8b316db2-a3ba-4319-f85b-a1c126b5e3a3"},"execution_count":63,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-63-fdc1e1ed594b>:1: DtypeWarning: Columns (13,45) have mixed types. Specify dtype option on import or set low_memory=False.\n","  raw = pd.read_csv(dir + 'RAFI/Grocery gap atlas/full_tract.csv')\n"]}]},{"cell_type":"markdown","source":["# Merge economy data"],"metadata":{"id":"xL5YrwxwmhS9"}},{"cell_type":"code","source":["frames"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5LbkT_kleStV","executionInfo":{"status":"ok","timestamp":1727816381763,"user_tz":300,"elapsed":142,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"35fdce9a-149d-4e28-fc90-42c060967b57"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['tracts',\n"," 'screen',\n"," 'CDBG',\n"," 'HUD_qct',\n"," 'empower',\n"," 'JPIdx',\n"," 'LMEIdx',\n"," 'LAI',\n"," 'LTransIdx',\n"," 'rafi']"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["# Convert 'GEOID10' in all DataFrames to uppercase and numeric\n","for df_name in frames:\n","  # Convert 'GEOID10' to uppercase and numeric\n","  globals()[df_name]['GEOID10'] = globals()[df_name]['GEOID10'].astype(str).str.upper()\n","  # tractsdf['GEOID10'] = tractsdf['GEOID10'].astype(str).str.upper()\n","  globals()[df_name]['GEOID10'] = pd.to_numeric(globals()[df_name]['GEOID10'], errors='coerce')"],"metadata":{"id":"X_0p-umlfa4q","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1727816410918,"user_tz":300,"elapsed":877,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"00c18371-e143-4788-b55c-ac4f92fbe04b"},"execution_count":67,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-67-2758c2d0408a>:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  globals()[df_name]['GEOID10'] = globals()[df_name]['GEOID10'].astype(str).str.upper()\n","<ipython-input-67-2758c2d0408a>:6: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  globals()[df_name]['GEOID10'] = pd.to_numeric(globals()[df_name]['GEOID10'], errors='coerce')\n"]}]},{"cell_type":"code","source":["# Merge all DataFrames on 'GEOID10'\n","\n","merged_df = tracts\n","\n","for df_name in frames:\n","    if df_name != 'tracts':\n","        merged_df = pd.merge(merged_df, globals()[df_name], on='GEOID10', how='left')"],"metadata":{"id":"M4E5offNfa7z","executionInfo":{"status":"ok","timestamp":1727816412899,"user_tz":300,"elapsed":376,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":68,"outputs":[]},{"cell_type":"markdown","source":["## Export and reload"],"metadata":{"id":"E-a0XRe_TU15"}},{"cell_type":"code","source":["frames"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OuLtQSmQB4Ts","executionInfo":{"status":"ok","timestamp":1727816414468,"user_tz":300,"elapsed":129,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"a2aef785-76fe-4037-cbc7-0ab0ef9430c9"},"execution_count":69,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['tracts',\n"," 'screen',\n"," 'CDBG',\n"," 'HUD_qct',\n"," 'empower',\n"," 'JPIdx',\n"," 'LMEIdx',\n"," 'LAI',\n"," 'LTransIdx',\n"," 'rafi']"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["with open(curated +  '00050_Business_economy_transportation_national.csv', 'w') as f:\n","  merged_df.to_csv(f)"],"metadata":{"id":"zQe9ClHIccUO","executionInfo":{"status":"ok","timestamp":1727816424591,"user_tz":300,"elapsed":4350,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":70,"outputs":[]},{"cell_type":"code","source":["# Reload\n","\n","biz = pd.read_csv(curated +  '00050_Business_economy_transportation_national.csv')\n","biz.drop(columns=['Unnamed: 0', 'autos_per_hh.1'], inplace=True)\n","biz.rename(columns={'geometry_y':'geometry'}, inplace=True)"],"metadata":{"id":"zKOVzxG1cj1F","executionInfo":{"status":"ok","timestamp":1727816425070,"user_tz":300,"elapsed":481,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":71,"outputs":[]},{"cell_type":"code","source":["biz.columns.to_list()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VVr7RqRhBlHt","executionInfo":{"status":"ok","timestamp":1727816425070,"user_tz":300,"elapsed":3,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"873be0c7-a77e-432f-8fd4-cb592abef362"},"execution_count":72,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['GEOID10',\n"," 'DOT_travel_barr_pctile',\n"," 'DOT_travel_barr_ge90pct_lowinc',\n"," 'Agri_loss_rate',\n"," 'Agri_loss_rate_pctile',\n"," 'Agri_loss_ge90pct_lowinc',\n"," 'Energy_burden',\n"," 'Energy_burden_pct',\n"," 'Energy_burden_ge90pct_lowinc',\n"," 'CDBG_ED_COUNT',\n"," 'CDBG_ED_FUNDING_AMT',\n"," 'CDBG_TOTAL_COUNT',\n"," 'CDBG_TOTAL_AMT',\n"," 'HUDQualCenTract',\n"," 'HUDEmpowerZone',\n"," 'HUDRenewalComm',\n"," 'HUDEnterpriseComm',\n"," 'HUDEnterpriseZone',\n"," 'jobs_idx',\n"," 'LBR_IDX',\n"," 'pct_transit_j2w_renters',\n"," 'pct_transit_j2w_owners',\n"," 'pct_transit_j2w',\n"," 'autos_per_hh',\n"," 'autos_per_hh_renters',\n"," 'autos_per_hh_owner',\n"," 'commuters_per_hh_renters',\n"," 'commuters_per_hh_owners',\n"," 'commuters_per_hh',\n"," 'median_commute',\n"," 'job_density_simple',\n"," 'retail_density_simple',\n"," 'job_gravity',\n"," 'retail_gravity',\n"," 'TCOST_IDX',\n"," 'gravity_2023',\n"," 'gravity_2023_percentile',\n"," 'gravity_2023_state_percentile',\n"," 'gravity_2023_county_percentile',\n"," 'hhi_2023',\n"," 'hhi_2023_percentile',\n"," 'hhi_2023_state_percentile',\n"," 'hhi_2023_county_percentile',\n"," 'gravity_2000',\n"," 'gravity_2010',\n"," 'gravity_2020',\n"," 'gravity_ds_2000',\n"," 'gravity_ds_2010',\n"," 'gravity_ds_2020',\n"," 'hhi_ds_2000',\n"," 'hhi_ds_2010',\n"," 'hhi_ds_2020',\n"," 'hhi_2000',\n"," 'hhi_2010',\n"," 'hhi_2020']"]},"metadata":{},"execution_count":72}]},{"cell_type":"markdown","source":["# Data check"],"metadata":{"id":"7S_2OsKHlZ7Q"}},{"cell_type":"markdown","source":["## Identify constants"],"metadata":{"id":"v-zeLPj7leiz"}},{"cell_type":"code","source":["constant_columns = [col for col in biz.columns if biz[col].nunique() == 1]\n","\n","constant_columns"],"metadata":{"id":"Vi5LTv79lgK8"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Identify duplicated information across variables"],"metadata":{"id":"MFqhwB1Algqx"}},{"cell_type":"code","source":["from itertools import combinations\n","\n","# Get all pairs of columns\n","column_pairs = combinations(biz.columns, 2)\n","\n","# Find pairs of columns that are identical\n","identical_pairs = [(col1, col2) for col1, col2 in column_pairs if biz[col1].equals(biz[col2])]\n","\n","# Display the identical pairs\n","identical_pairs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LTH9tFUmljvV","executionInfo":{"status":"ok","timestamp":1724874012808,"user_tz":300,"elapsed":9100,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"4d5e1aff-75ae-4d7f-e8b5-0cd309e1fb6b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[]"]},"metadata":{},"execution_count":103}]},{"cell_type":"markdown","source":["## Duplicated tract rows?"],"metadata":{"id":"IsXucqx2PDTd"}},{"cell_type":"code","source":["len(biz['GEOID10'])-len(biz['GEOID10'].drop_duplicates())"],"metadata":{"id":"_snV4IEcPGkh"},"execution_count":null,"outputs":[]}]}