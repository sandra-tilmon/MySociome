{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Making behavioral/psychological file\n","## Sandra Tilmon\n","## 11/29/2023\n","\n","\n","#### Change log:\n","\n","Date        Change\n","\n","\n","\n"],"metadata":{"id":"X0RV1pdtetXC"}},{"cell_type":"markdown","source":["**NHANES is not available publicly at the census tract level.**"],"metadata":{"id":"GIfWJGI9nZvm"}},{"cell_type":"markdown","source":["# Setup"],"metadata":{"id":"LPlKJft0cceI"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","import math\n","import matplotlib\n","import matplotlib.pyplot as plt\n","import scipy.stats\n","\n","import seaborn as sns\n","\n","import os\n","import re\n","from functools import reduce\n","import requests\n","\n","import geopandas as gpd\n","from shapely.geometry import shape, Point\n","import geopy\n","from geopy.extra.rate_limiter import RateLimiter\n","from geopy import geocoders\n","from geopy.geocoders import GoogleV3\n","\n","from timeit import default_timer as timer\n","\n","pd.set_option('display.max_rows', None)\n","pd.set_option('display.max_columns', None)\n","pd.set_option('display.width', None)\n","\n","# No scientific notation\n","pd.options.display.float_format = '{:.2f}'.format\n","\n","%matplotlib inline"],"metadata":{"id":"BC42LjIWcdS_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Mount drive\n","\n","from google.colab import drive\n","drive.mount('/content/gdrive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PyFTCjfqcdVS","executionInfo":{"status":"ok","timestamp":1736518619860,"user_tz":360,"elapsed":20779,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"7b6041bd-2b57-469b-f909-2e7cd95c2d61"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"code","source":["# Raw data sources\n","dir = '/content/gdrive/My Drive/Sociome_Folder/Data/'\n","\n","# Output curated datasets\n","curated = '/content/gdrive/My Drive/Sociome_Folder/Data Commons/Curated datasets/'"],"metadata":{"id":"UjEdnl9VcdX5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Empty list to collect dataframe names\n","\n","frames = []"],"metadata":{"id":"vIwwtI4Mcjph"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# CDC"],"metadata":{"id":"MX-ktTDGckEV"}},{"cell_type":"markdown","source":["## BRFSS\n","\n","Accessed from 500 Cities a.k.a. Places\n","\n","https://data.cdc.gov/500-Cities-Places/500-Cities-Census-Tract-level-Data-GIS-Friendly-Fo/k86t-wghb\n","\n","https://data.cdc.gov/500-Cities-Places/500-Cities-Local-Data-for-Better-Health-2019-relea/6vp6-wxuq\n","\n","https://www.cdc.gov/places/index.html\n","\n","data dict https://chronicdata.cdc.gov/500-Cities-Places/500-Cities-Census-Tract-level-Data-GIS-Friendly-Fo/k86t-wghb/about_data\n","\n","\n","Accessed 12/14/2023\n"],"metadata":{"id":"hfLabdHHclEI"}},{"cell_type":"code","source":["BRFSS = pd.read_csv(dir + 'CDC/Places/PLACES__Local_Data_for_Better_Health__Census_Tract_Data_2022_release.csv', dtype='string')"],"metadata":{"id":"b-S0sKL_cmkt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Keep only behavioral/psychological measures\n","\n","BRFSS2 = BRFSS[\n","    (BRFSS['Category'] == 'Health Risk Behaviors') |\n","     (BRFSS['Category'] == 'Health Status')\n","     ]\n","\n","BRFSS2 = BRFSS2[['LocationID', 'MeasureId', 'Data_Value', 'Data_Value_Unit']]"],"metadata":{"id":"5t97Vj1Yeqqq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["BRFSS2.Data_Value_Unit.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":146},"id":"D-cfRcOFktEe","executionInfo":{"status":"ok","timestamp":1736518708651,"user_tz":360,"elapsed":170,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"28b40d09-319d-475f-dbe7-498a81e6d890"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Data_Value_Unit\n","%    506359\n","Name: count, dtype: Int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Data_Value_Unit</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>%</th>\n","      <td>506359</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> Int64</label>"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["# Pivot the DataFrame\n","BRFSS3 = BRFSS2.pivot(index='LocationID', columns='MeasureId', values=[]'Data_Value').reset_index()\n","BRFSS3 = BRFSS3.reset_index()\n","BRFSS3.drop(columns=['index'], inplace=True)\n","BRFSS3 = BRFSS3.rename(columns={'LocationID': 'GEOID10'})"],"metadata":{"id":"YpDOj2iMiszx"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Export and reload"],"metadata":{"id":"jioJ8TQ0jbB3"}},{"cell_type":"code","source":["with open(curated +  '00040_Behavioral_psychological_national.csv', 'w') as f:\n","  BRFSS3.to_csv(f)"],"metadata":{"id":"UqsBD-KMjci-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Reload\n","\n","behav = pd.read_csv(curated +  '00040_Behavioral_psychological_national.csv')\n","behav = behav[behav.columns.drop(list(behav.filter(regex='Unnamed')))]"],"metadata":{"id":"59sWvJ8yjpbc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["behav.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Rh06ROELAyW5","executionInfo":{"status":"ok","timestamp":1727113965425,"user_tz":300,"elapsed":187,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"2cb0b454-f798-4dda-f355-fdda5600505c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      GEOID10  BINGE  CSMOKING  GHLTH   LPA  MHLTH  PHLTH  SLEEP\n","0  1001020100  15.80     19.30  17.30 26.40  16.40  11.30  36.90\n","1  1001020200  14.10     21.90  21.60 32.10  17.30  12.10  43.40\n","2  1001020300  15.50     20.10  18.50 28.20  17.00  11.60  38.10\n","3  1001020400  15.20     14.80  14.20 23.00  14.00   9.80  33.40\n","4  1001020500  16.40     15.70  13.40 22.20  15.20   9.10  35.70"],"text/html":["\n","  <div id=\"df-38c4c0c7-2873-4a8d-a344-ffdb02035836\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>GEOID10</th>\n","      <th>BINGE</th>\n","      <th>CSMOKING</th>\n","      <th>GHLTH</th>\n","      <th>LPA</th>\n","      <th>MHLTH</th>\n","      <th>PHLTH</th>\n","      <th>SLEEP</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1001020100</td>\n","      <td>15.80</td>\n","      <td>19.30</td>\n","      <td>17.30</td>\n","      <td>26.40</td>\n","      <td>16.40</td>\n","      <td>11.30</td>\n","      <td>36.90</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1001020200</td>\n","      <td>14.10</td>\n","      <td>21.90</td>\n","      <td>21.60</td>\n","      <td>32.10</td>\n","      <td>17.30</td>\n","      <td>12.10</td>\n","      <td>43.40</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1001020300</td>\n","      <td>15.50</td>\n","      <td>20.10</td>\n","      <td>18.50</td>\n","      <td>28.20</td>\n","      <td>17.00</td>\n","      <td>11.60</td>\n","      <td>38.10</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1001020400</td>\n","      <td>15.20</td>\n","      <td>14.80</td>\n","      <td>14.20</td>\n","      <td>23.00</td>\n","      <td>14.00</td>\n","      <td>9.80</td>\n","      <td>33.40</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1001020500</td>\n","      <td>16.40</td>\n","      <td>15.70</td>\n","      <td>13.40</td>\n","      <td>22.20</td>\n","      <td>15.20</td>\n","      <td>9.10</td>\n","      <td>35.70</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-38c4c0c7-2873-4a8d-a344-ffdb02035836')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-38c4c0c7-2873-4a8d-a344-ffdb02035836 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-38c4c0c7-2873-4a8d-a344-ffdb02035836');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d7ba825c-1194-44c2-bc70-7acbfa2c6230\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d7ba825c-1194-44c2-bc70-7acbfa2c6230')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d7ba825c-1194-44c2-bc70-7acbfa2c6230 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"behav","summary":"{\n  \"name\": \"behav\",\n  \"rows\": 72337,\n  \"fields\": [\n    {\n      \"column\": \"GEOID10\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15818163413,\n        \"min\": 1001020100,\n        \"max\": 56045951300,\n        \"num_unique_values\": 72337,\n        \"samples\": [\n          27131070100,\n          17183010100,\n          20125950500\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BINGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.246268315751873,\n        \"min\": 2.7,\n        \"max\": 36.6,\n        \"num_unique_values\": 295,\n        \"samples\": [\n          29.4,\n          4.5,\n          11.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CSMOKING\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.011652452501571,\n        \"min\": 3.0,\n        \"max\": 52.1,\n        \"num_unique_values\": 405,\n        \"samples\": [\n          19.2,\n          31.7,\n          43.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GHLTH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.629141700328279,\n        \"min\": 2.8,\n        \"max\": 53.6,\n        \"num_unique_values\": 439,\n        \"samples\": [\n          43.7,\n          17.4,\n          6.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LPA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.745948301165196,\n        \"min\": 7.8,\n        \"max\": 63.7,\n        \"num_unique_values\": 462,\n        \"samples\": [\n          20.0,\n          23.7,\n          28.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MHLTH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7898100543761646,\n        \"min\": 6.1,\n        \"max\": 33.0,\n        \"num_unique_values\": 234,\n        \"samples\": [\n          13.7,\n          29.8,\n          21.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PHLTH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.2082823064684374,\n        \"min\": 2.3,\n        \"max\": 31.3,\n        \"num_unique_values\": 241,\n        \"samples\": [\n          9.7,\n          14.5,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SLEEP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.831033753383129,\n        \"min\": 19.8,\n        \"max\": 54.4,\n        \"num_unique_values\": 328,\n        \"samples\": [\n          25.8,\n          50.3,\n          25.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["# Data check"],"metadata":{"id":"7S_2OsKHlZ7Q"}},{"cell_type":"markdown","source":["## Identify constants"],"metadata":{"id":"v-zeLPj7leiz"}},{"cell_type":"code","source":["constant_columns = [col for col in behav.columns if behav[col].nunique() == 1]\n","\n","constant_columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vi5LTv79lgK8","executionInfo":{"status":"ok","timestamp":1724874003594,"user_tz":300,"elapsed":3176,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"60f0cd1e-3bbc-4353-b319-9057d58e68f3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Aband_mine_ge1']"]},"metadata":{},"execution_count":102}]},{"cell_type":"markdown","source":["## Identify duplicated information across variables"],"metadata":{"id":"MFqhwB1Algqx"}},{"cell_type":"code","source":["from itertools import combinations\n","\n","# Get all pairs of columns\n","column_pairs = combinations(behav.columns, 2)\n","\n","# Find pairs of columns that are identical\n","identical_pairs = [(col1, col2) for col1, col2 in column_pairs if behav[col1].equals(behav[col2])]\n","\n","# Display the identical pairs\n","identical_pairs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LTH9tFUmljvV","executionInfo":{"status":"ok","timestamp":1724874012808,"user_tz":300,"elapsed":9100,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"4d5e1aff-75ae-4d7f-e8b5-0cd309e1fb6b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[]"]},"metadata":{},"execution_count":103}]},{"cell_type":"markdown","source":["## Duplicated tract rows?"],"metadata":{"id":"IsXucqx2PDTd"}},{"cell_type":"code","source":["len(behav['GEOID10'])-len(behav['GEOID10'].drop_duplicates())"],"metadata":{"id":"_snV4IEcPGkh"},"execution_count":null,"outputs":[]}]}