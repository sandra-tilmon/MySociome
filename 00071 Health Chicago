{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"11BA8n7CPc5RXzJowPAE4hkYzHe_I3IpT","timestamp":1699059672637},{"file_id":"1ZW6tMQc3rYNaGqTCG7-Y_KbR_ml3b8zY","timestamp":1699058261056}],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Making health file for Chicago\n","## Sandra Tilmon\n","## 11/03/2023\n","\n","#### Change log:\n","Date        Change\n"],"metadata":{"id":"GUZfQbsoQH-Y"}},{"cell_type":"markdown","source":["# Setup"],"metadata":{"id":"yiWW2iv3QW-K"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","import datetime\n","import math\n","\n","import os\n","import re\n","\n","import ast\n","import json\n","from functools import reduce\n","import requests\n","\n","import matplotlib\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","import geopandas as gpd\n","from shapely import geometry\n","from shapely.geometry import Point, shape\n","from geopy import geocoders\n","from geopy.geocoders import GoogleV3\n","\n","from timeit import default_timer as timer\n","\n","pd.set_option('display.max_rows', None)\n","pd.set_option('display.max_columns', None)\n","pd.set_option('display.width', None)\n","\n","pd.options.display.float_format = '{:.2f}'.format\n","\n","%matplotlib inline"],"metadata":{"id":"4Tq7gpEVQaPr","executionInfo":{"status":"ok","timestamp":1727192515735,"user_tz":300,"elapsed":5291,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","execution_count":2,"metadata":{"id":"XlLhWh5HPpOf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1727192539676,"user_tz":300,"elapsed":23943,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"f95d0d82-433b-4128-d0f4-8779e742db0c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}],"source":["# Mount drive\n","\n","from google.colab import drive\n","drive.mount('/content/gdrive')"]},{"cell_type":"code","source":["# Raw data sources\n","dir = '/content/gdrive/My Drive/Sociome_Folder/Data/'\n","\n","# Output curated datasets\n","curated = '/content/gdrive/My Drive/Sociome_Folder/Data Commons/Curated datasets/'"],"metadata":{"id":"cRe762enQa9v","executionInfo":{"status":"ok","timestamp":1727192539676,"user_tz":300,"elapsed":3,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["# Empty dataset for later merging\n","\n","frames = []"],"metadata":{"id":"_rYd3WfFg8P7","executionInfo":{"status":"ok","timestamp":1727192539947,"user_tz":300,"elapsed":273,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":["# GIS"],"metadata":{"id":"P6lswaJDh8w4"}},{"cell_type":"markdown","source":["## Set CRS"],"metadata":{"id":"lPRXHExXnYeW"}},{"cell_type":"code","source":["crs = {'init' :'epsg:3435'}"],"metadata":{"id":"HeWpj6OJnaYC"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Census tracts"],"metadata":{"id":"6TA6YOsNeTNs"}},{"cell_type":"code","source":["# Census tracts\n","\n","r = requests.get(\"https://data.cityofchicago.org/resource/74p9-q2aq.json\")\n","r.raise_for_status()\n","\n","data = r.json()\n","for d in data:\n","    d['the_geom'] = shape(d['the_geom'])\n","\n","tracts_shp = gpd.GeoDataFrame(data).set_geometry('the_geom', crs=crs)\n","\n","tracts_shp = tracts_shp.drop(columns=['statefp10', 'countyfp10', 'tractce10',\t'name10', 'namelsad10',\n","                                      'notes', 'commarea_n'])"],"metadata":{"id":"87U_7A42DZUt","executionInfo":{"status":"ok","timestamp":1726778902693,"user_tz":300,"elapsed":2003,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"e1c6f3c5-4785-43c5-c8ad-137bd1fb2401"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/pyproj/crs/crs.py:141: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6\n","  in_crs_string = _prepare_from_proj_string(in_crs_string)\n"]}]},{"cell_type":"markdown","source":["## List of tracts to frames"],"metadata":{"id":"LfCJCR3ehQV3"}},{"cell_type":"code","source":["# Reload dataframe\n","\n","tractsdf = pd.read_csv(dir + \"1 Chicago datamart/tracts.csv\")\n","\n","frames.append('tractsdf')"],"metadata":{"id":"CAwpHU4khNxR","executionInfo":{"status":"ok","timestamp":1727192543586,"user_tz":300,"elapsed":3641,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":["## Functions"],"metadata":{"id":"8Zl3lJ09m616"}},{"cell_type":"code","source":["# Lat/long coordinates to census tract\n","\n","def LatLongTract(infile, lat, long):\n","\n","  # establish lat/long point geometry\n","  geometry = [Point(xy) for xy in zip(infile[long], infile[lat])]\n","\n","  # Make a geo dataframe, set CRS\n","  gdf = gpd.GeoDataFrame(infile, geometry=geometry)\n","  gdf = gdf.set_crs(crs)\n","\n","  # Intersect lat/long points and census tract\n","  result=gpd.sjoin(gdf, tracts_shp, how='left', op='within')\n","\n","  result.drop(columns=['index_right'], inplace=True)\n","\n","  # Standardize census tract GEOID to uppercase throughout notebooks\n","  result.rename(columns={\"geoid10\" : \"GEOID10\"}, inplace=True)\n","  return(result)\n","\n","\n","\n","# One line street address to lat/long coordinates and census tract\n","\n","def AddLatLongTract(infile):\n","\n","  # Create \"oneline\" address in cleaning \"123 N Main Street Chicago, IL 60000\"\n","  # Field names vary so not bothering to include here\n","\n","  g = geocoders.GoogleV3(api_key='')\n","\n","  def Gv3_latlong (address):\n","      location = g.geocode(address)\n","      lat = location.latitude\n","      long = location.longitude\n","      # Perform additional steps to obtain census tract from coordinates\n","      # census_tract = get_census_tract_from_coordinates(latitude, longitude)\n","      return lat, long, location\n","\n","  infile[['lat', 'long', 'Location']] = infile['oneline'].apply(Gv3_latlong).apply(pd.Series)\n","\n","  # establish lat/long point geometry\n","  geometry = [Point(xy) for xy in zip(infile['long'], infile['lat'])]\n","\n","  # Make a geo dataframe, set CRS\n","  gdf = gpd.GeoDataFrame(infile, geometry=geometry)\n","  gdf = gdf.set_crs(crs)\n","\n","  # Intersect lat/long points and census tract\n","  result=gpd.sjoin(gdf, tracts_shp, how='left', op='within')\n","\n","  result.drop(columns=['index_right'], inplace=True)\n","\n","  # Standardize census tract GEOID10 to uppercase throughout notebooks\n","  result.rename(columns={\"geoid10\" : \"GEOID10\"}, inplace=True)\n","  return(result)"],"metadata":{"id":"GwaJyGCfm7-g"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Import and limit national file"],"metadata":{"id":"ZQr5MO_iDOX3"}},{"cell_type":"code","source":["# Reload\n","natl = pd.read_csv(curated + \"00070_Health_national.csv\", low_memory=False)\n","\n","natl = pd.merge(tractsdf, natl, on='GEOID10', how='left')\n","\n","frames.append('natl')"],"metadata":{"id":"iECwGNJVDQJW","executionInfo":{"status":"ok","timestamp":1727192556184,"user_tz":300,"elapsed":3131,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":["# HRSA"],"metadata":{"id":"M7-uL8mXAeyF"}},{"cell_type":"markdown","source":["## FQHCS -- reload\n","\n","Downloaded Cook County\n","\n","https://data.hrsa.gov/data/reports/datagrid?gridName=FQHCs"],"metadata":{"id":"6F7BZ0dYe1ia"}},{"cell_type":"code","source":["fqhc = pd.read_excel(dir + 'HRSA/CookCoFQHCs raw.xlsx')\n","\n","fqhc['oneline'] = fqhc['Street'] + ' ' + fqhc['City'] + ', ' + fqhc['State'] + ' ' + fqhc['Zip9']\n","\n","fqhc2 = fqhc[fqhc['Category'].str.contains('Service', case=False)]\n","\n","# Limit to Chicago\n","fqhc2 = fqhc2[fqhc2['City']=='Chicago']"],"metadata":{"id":"wOi0qiOFe0u4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### GIS\n","\n","def AddLatLongTract(infile):"],"metadata":{"id":"XILoqR-xp5OD"}},{"cell_type":"code","source":["fqhc3 = AddLatLongTract(fqhc2)"],"metadata":{"id":"DgE2ptf9p6bW"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Summarize to tract"],"metadata":{"id":"EZyHUWKKq1UG"}},{"cell_type":"code","source":["fqhc_tract = fqhc3.groupby('GEOID10').agg(FQHCcount = ('GEOID10', 'size')).reset_index()"],"metadata":{"id":"dJ_wQfGMq1FK"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Export and reload"],"metadata":{"id":"VusTKkLPqyk4"}},{"cell_type":"code","source":["# Export line listing\n","with open(dir + 'HRSA/FQHC_ChicagoLine.csv', 'w') as f:\n","  fqhc3.to_csv(f)\n","\n","# Export tract summary\n","with open(dir + 'HRSA/FQHC_Chicago_tract.csv', 'w') as f:\n","  fqhc_tract.to_csv(f)"],"metadata":{"id":"cgeFPf0urN5B"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Reload tract summary\n","fqhc = pd.read_csv(dir + 'HRSA/FQHC_Chicago_tract.csv', dtype='string')\n","fqhc.drop(columns=['Unnamed: 0'], inplace=True)\n","\n","frames.append('fqhc')"],"metadata":{"id":"x6OJyvpSrOI4","executionInfo":{"status":"ok","timestamp":1727192563921,"user_tz":300,"elapsed":849,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":["# Chicago data portal"],"metadata":{"id":"xLJddUSOH4oj"}},{"cell_type":"markdown","source":["## Primary care\n","\n","Chicago data portal"],"metadata":{"id":"S3m_JsIP2K2U"}},{"cell_type":"code","source":["primary_api = 'https://data.cityofchicago.org/resource/cjg8-dbka.json'\n","primary = pd.read_json(primary_api)"],"metadata":{"id":"5M2MptRmx3yK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["filtered_columns = [col for col in primary.columns if 'computed' not in col]\n","primary = primary[filtered_columns]"],"metadata":{"id":"Vc-6rX87ptkB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Extracting latitude, longitude, and address details\n","primary['latitude'] = primary['location_1'].apply(lambda x: x.get('latitude'))\n","primary['longitude'] = primary['location_1'].apply(lambda x: x.get('longitude'))\n","primary['address'] = primary['location_1'].apply(lambda x: json.loads(x.get('human_address')).get('address'))\n","\n","primary['zip'] = primary['location_1'].apply(lambda x: json.loads(x.get('human_address')).get('zip'))\n","\n","# City and state are empty\n","primary['city'] = primary['location_1'].apply(lambda x: json.loads(x.get('human_address')).get('city'))\n","primary['state'] = primary['location_1'].apply(lambda x: json.loads(x.get('human_address')).get('state'))\n","\n","primary['oneline'] = primary['address'] + ' Chicago, IL' + ' ' + primary['zip']"],"metadata":{"id":"UN5tpeMguSo3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### GIS\n","\n","def LatLongTract(infile, lat, long):"],"metadata":{"id":"IXSqml3nvYHi"}},{"cell_type":"code","source":["primary2 = LatLongTract(primary, 'latitude', 'longitude')"],"metadata":{"id":"w2dtbVIxvaF7"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Summarize to tract"],"metadata":{"id":"NArtVmYZwKQ3"}},{"cell_type":"code","source":["prim_tract = primary2.groupby('GEOID10').agg(Primarycount = ('GEOID10', 'size')).reset_index()"],"metadata":{"id":"IZM4ODyVwLtb"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Export and reload"],"metadata":{"id":"Djr3f0bhv2dT"}},{"cell_type":"code","source":["# Export line listing\n","with open(dir + '1 Chicago datamart/PrimaryCare_Line.csv', 'w') as f:\n","  primary2.to_csv(f)\n","\n","# Export tract summary\n","with open(dir + '1 Chicago datamart/PrimaryCare__tract.csv', 'w') as f:\n","  prim_tract.to_csv(f)"],"metadata":{"id":"_Z4X8pVvv3cm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Reload tract summary\n","primary = pd.read_csv(dir + '1 Chicago datamart/PrimaryCare__tract.csv', dtype='string')\n","primary.drop(columns=['Unnamed: 0'], inplace=True)\n","\n","frames.append('primary')"],"metadata":{"id":"oQnwZjsOv6nS","executionInfo":{"status":"ok","timestamp":1727192572756,"user_tz":300,"elapsed":1155,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":9,"outputs":[]},{"cell_type":"markdown","source":["# Merge data"],"metadata":{"id":"xL5YrwxwmhS9"}},{"cell_type":"code","source":["frames"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0cgqQp_csy6p","executionInfo":{"status":"ok","timestamp":1727192578832,"user_tz":300,"elapsed":182,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"8493c50b-df14-4d77-b184-81434235b48d"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['tractsdf', 'natl', 'fqhc', 'primary']"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["# Convert 'GEOID10' in all DataFrames to uppercase and numeric\n","for df_name in frames:\n","  # Convert 'GEOID10' to uppercase and numeric\n","  globals()[df_name]['GEOID10'] = globals()[df_name]['GEOID10'].astype(str).str.upper()\n","  # tractsdf['GEOID10'] = tractsdf['GEOID10'].astype(str).str.upper()\n","  globals()[df_name]['GEOID10'] = pd.to_numeric(globals()[df_name]['GEOID10'], errors='coerce')"],"metadata":{"id":"9q85MG6ajpeE","executionInfo":{"status":"ok","timestamp":1727192580731,"user_tz":300,"elapsed":266,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["# Merge all DataFrames on 'GEOID10'\n","\n","merged_df = tractsdf.copy()\n","\n","for df_name in frames:\n","    if df_name != 'tractsdf':\n","        merged_df = pd.merge(merged_df, globals()[df_name], on='GEOID10', how='outer')"],"metadata":{"id":"WqfVjYk1mjHP","executionInfo":{"status":"ok","timestamp":1727192581789,"user_tz":300,"elapsed":202,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["merged_df=merged_df[merged_df.columns.drop(list(merged_df.filter(regex='Unnamed')))]"],"metadata":{"id":"F7ORPhZTFFFb","executionInfo":{"status":"ok","timestamp":1727192584398,"user_tz":300,"elapsed":178,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":13,"outputs":[]},{"cell_type":"markdown","source":["# Export and reload final analytic file (census tract)"],"metadata":{"id":"rparaz6bgDi5"}},{"cell_type":"code","source":["with open(curated +  '00071_Health_Chicago.csv', 'w') as f:\n","  merged_df.to_csv(f)"],"metadata":{"id":"yxbNkItTb7Md","executionInfo":{"status":"ok","timestamp":1727192589102,"user_tz":300,"elapsed":1047,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["health = pd.read_csv(curated +  '00071_Health_Chicago.csv')\n","health=health[health.columns.drop(list(health.filter(regex='Unnamed')))]\n","print(health.shape)\n","health.head()"],"metadata":{"id":"mC4eLXzvOWks","executionInfo":{"status":"ok","timestamp":1727192590495,"user_tz":300,"elapsed":182,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"colab":{"base_uri":"https://localhost:8080/","height":260},"outputId":"3c94bfff-41c9-46c4-f213-bb51b93a84f3"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["(801, 48)\n"]},{"output_type":"execute_result","data":{"text/plain":["       GEOID10  ACCESS2  ARTHRITIS  BPHIGH  BPMED  CANCER  CASTHMA  CERVICAL  CHD  CHECKUP  \\\n","0  17031842400    14.20      29.00   47.10  78.80    6.80    11.90     83.30 7.50    83.90   \n","1  17031840300    24.90      17.30   26.30  66.70    3.90     8.50     74.00 4.70    71.40   \n","2  17031841100    17.90      22.10   36.10  77.70    4.40     7.20     55.70 7.10    75.80   \n","3  17031841200    25.10      14.30   22.60  61.50    3.30     8.70     78.20 3.80    70.50   \n","4  17031839000     7.90      12.30   18.80  60.30    3.60     8.60     80.50 2.60    71.00   \n","\n","   CHOLSCREEN  COLON_SCREEN  COPD  COREM  COREW  DENTAL  DIABETES  GHLTH  HIGHCHOL  KIDNEY  \\\n","0       91.30         69.70  7.20  34.30  30.10   53.90     17.50  22.00     31.50    4.60   \n","1       81.60         58.00  4.80  36.70  32.30   53.60     10.70  17.80     28.20    2.50   \n","2       82.50         52.50  6.70  32.30  26.60   44.20     16.80  21.70     35.40    3.30   \n","3       82.90         59.40  3.60  34.80  31.60   56.60      9.40  16.70     24.60    2.40   \n","4       83.60         71.10  2.60  46.70  41.10   71.10      4.90   7.00     20.90    1.50   \n","\n","   MAMMOUSE  OBESITY  PHLTH  STROKE  TEETHLOST  Life Expectancy  HospCount  TotalBeds  \\\n","0     83.00    39.80  11.90    5.70      20.30              NaN        NaN        NaN   \n","1     77.00    29.30   9.60    2.40      15.20              NaN        NaN        NaN   \n","2     72.50    18.30  10.60    4.30      18.40              NaN        NaN        NaN   \n","3     79.60    31.80   8.80    1.90      12.40              NaN        NaN        NaN   \n","4     81.70    22.30   5.00    1.40       6.40              NaN        NaN        NaN   \n","\n","   TYPE_CHILDREN  TYPE_CHRONIC DISEASE  TYPE_CRITICAL ACCESS  TYPE_GENERAL ACUTE CARE  \\\n","0            NaN                   NaN                   NaN                      NaN   \n","1            NaN                   NaN                   NaN                      NaN   \n","2            NaN                   NaN                   NaN                      NaN   \n","3            NaN                   NaN                   NaN                      NaN   \n","4            NaN                   NaN                   NaN                      NaN   \n","\n","   TYPE_LONG TERM CARE  TYPE_MILITARY  TYPE_PSYCHIATRIC  TYPE_REHABILITATION  TYPE_SPECIAL  \\\n","0                  NaN            NaN               NaN                  NaN           NaN   \n","1                  NaN            NaN               NaN                  NaN           NaN   \n","2                  NaN            NaN               NaN                  NaN           NaN   \n","3                  NaN            NaN               NaN                  NaN           NaN   \n","4                  NaN            NaN               NaN                  NaN           NaN   \n","\n","   TYPE_WOMEN  OWNER_GOVERNMENT - DISTRICT/AUTHORITY  OWNER_GOVERNMENT - FEDERAL  \\\n","0         NaN                                    NaN                         NaN   \n","1         NaN                                    NaN                         NaN   \n","2         NaN                                    NaN                         NaN   \n","3         NaN                                    NaN                         NaN   \n","4         NaN                                    NaN                         NaN   \n","\n","   OWNER_GOVERNMENT - LOCAL  OWNER_GOVERNMENT - STATE  OWNER_NON-PROFIT  OWNER_NOT AVAILABLE  \\\n","0                       NaN                       NaN               NaN                  NaN   \n","1                       NaN                       NaN               NaN                  NaN   \n","2                       NaN                       NaN               NaN                  NaN   \n","3                       NaN                       NaN               NaN                  NaN   \n","4                       NaN                       NaN               NaN                  NaN   \n","\n","   OWNER_PROPRIETARY  RxCount  FQHCcount  Primarycount  \n","0                NaN     2.00        NaN           NaN  \n","1                NaN      NaN       1.00          1.00  \n","2                NaN     3.00        NaN           NaN  \n","3                NaN      NaN        NaN           NaN  \n","4                NaN     2.00        NaN           NaN  "],"text/html":["\n","  <div id=\"df-8e888958-5324-43cd-af83-f2bcaed27182\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>GEOID10</th>\n","      <th>ACCESS2</th>\n","      <th>ARTHRITIS</th>\n","      <th>BPHIGH</th>\n","      <th>BPMED</th>\n","      <th>CANCER</th>\n","      <th>CASTHMA</th>\n","      <th>CERVICAL</th>\n","      <th>CHD</th>\n","      <th>CHECKUP</th>\n","      <th>CHOLSCREEN</th>\n","      <th>COLON_SCREEN</th>\n","      <th>COPD</th>\n","      <th>COREM</th>\n","      <th>COREW</th>\n","      <th>DENTAL</th>\n","      <th>DIABETES</th>\n","      <th>GHLTH</th>\n","      <th>HIGHCHOL</th>\n","      <th>KIDNEY</th>\n","      <th>MAMMOUSE</th>\n","      <th>OBESITY</th>\n","      <th>PHLTH</th>\n","      <th>STROKE</th>\n","      <th>TEETHLOST</th>\n","      <th>Life Expectancy</th>\n","      <th>HospCount</th>\n","      <th>TotalBeds</th>\n","      <th>TYPE_CHILDREN</th>\n","      <th>TYPE_CHRONIC DISEASE</th>\n","      <th>TYPE_CRITICAL ACCESS</th>\n","      <th>TYPE_GENERAL ACUTE CARE</th>\n","      <th>TYPE_LONG TERM CARE</th>\n","      <th>TYPE_MILITARY</th>\n","      <th>TYPE_PSYCHIATRIC</th>\n","      <th>TYPE_REHABILITATION</th>\n","      <th>TYPE_SPECIAL</th>\n","      <th>TYPE_WOMEN</th>\n","      <th>OWNER_GOVERNMENT - DISTRICT/AUTHORITY</th>\n","      <th>OWNER_GOVERNMENT - FEDERAL</th>\n","      <th>OWNER_GOVERNMENT - LOCAL</th>\n","      <th>OWNER_GOVERNMENT - STATE</th>\n","      <th>OWNER_NON-PROFIT</th>\n","      <th>OWNER_NOT AVAILABLE</th>\n","      <th>OWNER_PROPRIETARY</th>\n","      <th>RxCount</th>\n","      <th>FQHCcount</th>\n","      <th>Primarycount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>17031842400</td>\n","      <td>14.20</td>\n","      <td>29.00</td>\n","      <td>47.10</td>\n","      <td>78.80</td>\n","      <td>6.80</td>\n","      <td>11.90</td>\n","      <td>83.30</td>\n","      <td>7.50</td>\n","      <td>83.90</td>\n","      <td>91.30</td>\n","      <td>69.70</td>\n","      <td>7.20</td>\n","      <td>34.30</td>\n","      <td>30.10</td>\n","      <td>53.90</td>\n","      <td>17.50</td>\n","      <td>22.00</td>\n","      <td>31.50</td>\n","      <td>4.60</td>\n","      <td>83.00</td>\n","      <td>39.80</td>\n","      <td>11.90</td>\n","      <td>5.70</td>\n","      <td>20.30</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>17031840300</td>\n","      <td>24.90</td>\n","      <td>17.30</td>\n","      <td>26.30</td>\n","      <td>66.70</td>\n","      <td>3.90</td>\n","      <td>8.50</td>\n","      <td>74.00</td>\n","      <td>4.70</td>\n","      <td>71.40</td>\n","      <td>81.60</td>\n","      <td>58.00</td>\n","      <td>4.80</td>\n","      <td>36.70</td>\n","      <td>32.30</td>\n","      <td>53.60</td>\n","      <td>10.70</td>\n","      <td>17.80</td>\n","      <td>28.20</td>\n","      <td>2.50</td>\n","      <td>77.00</td>\n","      <td>29.30</td>\n","      <td>9.60</td>\n","      <td>2.40</td>\n","      <td>15.20</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.00</td>\n","      <td>1.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>17031841100</td>\n","      <td>17.90</td>\n","      <td>22.10</td>\n","      <td>36.10</td>\n","      <td>77.70</td>\n","      <td>4.40</td>\n","      <td>7.20</td>\n","      <td>55.70</td>\n","      <td>7.10</td>\n","      <td>75.80</td>\n","      <td>82.50</td>\n","      <td>52.50</td>\n","      <td>6.70</td>\n","      <td>32.30</td>\n","      <td>26.60</td>\n","      <td>44.20</td>\n","      <td>16.80</td>\n","      <td>21.70</td>\n","      <td>35.40</td>\n","      <td>3.30</td>\n","      <td>72.50</td>\n","      <td>18.30</td>\n","      <td>10.60</td>\n","      <td>4.30</td>\n","      <td>18.40</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>17031841200</td>\n","      <td>25.10</td>\n","      <td>14.30</td>\n","      <td>22.60</td>\n","      <td>61.50</td>\n","      <td>3.30</td>\n","      <td>8.70</td>\n","      <td>78.20</td>\n","      <td>3.80</td>\n","      <td>70.50</td>\n","      <td>82.90</td>\n","      <td>59.40</td>\n","      <td>3.60</td>\n","      <td>34.80</td>\n","      <td>31.60</td>\n","      <td>56.60</td>\n","      <td>9.40</td>\n","      <td>16.70</td>\n","      <td>24.60</td>\n","      <td>2.40</td>\n","      <td>79.60</td>\n","      <td>31.80</td>\n","      <td>8.80</td>\n","      <td>1.90</td>\n","      <td>12.40</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>17031839000</td>\n","      <td>7.90</td>\n","      <td>12.30</td>\n","      <td>18.80</td>\n","      <td>60.30</td>\n","      <td>3.60</td>\n","      <td>8.60</td>\n","      <td>80.50</td>\n","      <td>2.60</td>\n","      <td>71.00</td>\n","      <td>83.60</td>\n","      <td>71.10</td>\n","      <td>2.60</td>\n","      <td>46.70</td>\n","      <td>41.10</td>\n","      <td>71.10</td>\n","      <td>4.90</td>\n","      <td>7.00</td>\n","      <td>20.90</td>\n","      <td>1.50</td>\n","      <td>81.70</td>\n","      <td>22.30</td>\n","      <td>5.00</td>\n","      <td>1.40</td>\n","      <td>6.40</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e888958-5324-43cd-af83-f2bcaed27182')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8e888958-5324-43cd-af83-f2bcaed27182 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8e888958-5324-43cd-af83-f2bcaed27182');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f69342a2-764f-4569-8a2f-043a36e40021\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f69342a2-764f-4569-8a2f-043a36e40021')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f69342a2-764f-4569-8a2f-043a36e40021 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"health"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["health.columns.to_list()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L0FW0IPjFMpk","executionInfo":{"status":"ok","timestamp":1727192599312,"user_tz":300,"elapsed":357,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"031844db-0bb7-4fe0-d3d9-8fb6b804cffb"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['GEOID10',\n"," 'ACCESS2',\n"," 'ARTHRITIS',\n"," 'BPHIGH',\n"," 'BPMED',\n"," 'CANCER',\n"," 'CASTHMA',\n"," 'CERVICAL',\n"," 'CHD',\n"," 'CHECKUP',\n"," 'CHOLSCREEN',\n"," 'COLON_SCREEN',\n"," 'COPD',\n"," 'COREM',\n"," 'COREW',\n"," 'DENTAL',\n"," 'DIABETES',\n"," 'GHLTH',\n"," 'HIGHCHOL',\n"," 'KIDNEY',\n"," 'MAMMOUSE',\n"," 'OBESITY',\n"," 'PHLTH',\n"," 'STROKE',\n"," 'TEETHLOST',\n"," 'Life Expectancy',\n"," 'HospCount',\n"," 'TotalBeds',\n"," 'TYPE_CHILDREN',\n"," 'TYPE_CHRONIC DISEASE',\n"," 'TYPE_CRITICAL ACCESS',\n"," 'TYPE_GENERAL ACUTE CARE',\n"," 'TYPE_LONG TERM CARE',\n"," 'TYPE_MILITARY',\n"," 'TYPE_PSYCHIATRIC',\n"," 'TYPE_REHABILITATION',\n"," 'TYPE_SPECIAL',\n"," 'TYPE_WOMEN',\n"," 'OWNER_GOVERNMENT - DISTRICT/AUTHORITY',\n"," 'OWNER_GOVERNMENT - FEDERAL',\n"," 'OWNER_GOVERNMENT - LOCAL',\n"," 'OWNER_GOVERNMENT - STATE',\n"," 'OWNER_NON-PROFIT',\n"," 'OWNER_NOT AVAILABLE',\n"," 'OWNER_PROPRIETARY',\n"," 'RxCount',\n"," 'FQHCcount',\n"," 'Primarycount']"]},"metadata":{},"execution_count":16}]}]}