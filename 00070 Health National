{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"11BA8n7CPc5RXzJowPAE4hkYzHe_I3IpT","timestamp":1699059672637},{"file_id":"1ZW6tMQc3rYNaGqTCG7-Y_KbR_ml3b8zY","timestamp":1699058261056}],"collapsed_sections":["8Zl3lJ09m616"],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Making health file\n","## Sandra Tilmon\n","## 11/03/2023\n","\n","#### Change log:\n","Date        Change\n","\n","\n","** Future work **\n","\n","* Nursing homes: https://services1.arcgis.com/Hp6G80Pky0om7QvQ/arcgis/rest/services/NursingHomes/FeatureServer/0"],"metadata":{"id":"GUZfQbsoQH-Y"}},{"cell_type":"markdown","source":["# Setup"],"metadata":{"id":"yiWW2iv3QW-K"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","import datetime\n","import math\n","\n","import os\n","import re\n","\n","import ast\n","import json\n","from functools import reduce\n","import requests\n","\n","import matplotlib\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","import geopandas as gpd\n","from shapely import geometry\n","from shapely.geometry import Point, shape\n","from geopy import geocoders\n","from geopy.geocoders import GoogleV3\n","\n","from timeit import default_timer as timer\n","\n","pd.set_option('display.max_rows', None)\n","pd.set_option('display.max_columns', None)\n","pd.set_option('display.width', None)\n","\n","pd.options.display.float_format = '{:.2f}'.format\n","\n","%matplotlib inline"],"metadata":{"id":"4Tq7gpEVQaPr","executionInfo":{"status":"ok","timestamp":1727188664743,"user_tz":300,"elapsed":4811,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","execution_count":2,"metadata":{"id":"XlLhWh5HPpOf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1727188697779,"user_tz":300,"elapsed":20478,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"9ba01ee8-203a-4720-d819-83f466bc3b3a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}],"source":["# Mount drive\n","\n","from google.colab import drive\n","drive.mount('/content/gdrive')"]},{"cell_type":"code","source":["# Raw data sources\n","dir = '/content/gdrive/My Drive/Sociome_Folder/Data/'\n","\n","# Output curated datasets\n","curated = '/content/gdrive/My Drive/Sociome_Folder/Data Commons/Curated datasets/'"],"metadata":{"id":"cRe762enQa9v","executionInfo":{"status":"ok","timestamp":1727188697779,"user_tz":300,"elapsed":2,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["# Empty dataset for later merging\n","\n","frames = []"],"metadata":{"id":"_rYd3WfFg8P7","executionInfo":{"status":"ok","timestamp":1727188702283,"user_tz":300,"elapsed":2,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":["# GIS"],"metadata":{"id":"P6lswaJDh8w4"}},{"cell_type":"markdown","source":["## Set CRS\n","\n","North America https://epsg.io/?q=North%20America%20%20kind%3APROJCRS"],"metadata":{"id":"lPRXHExXnYeW"}},{"cell_type":"code","source":["crs = {'init' :'epsg:4269'}"],"metadata":{"id":"HeWpj6OJnaYC","executionInfo":{"status":"ok","timestamp":1727188704006,"user_tz":300,"elapsed":178,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":["## Census tracts"],"metadata":{"id":"6TA6YOsNeTNs"}},{"cell_type":"code","source":["# Census tracts\n","\n","tracts_shp = gpd.read_file(dir + \"Census Data/2010 census tracts/national_census.shp\")\n","\n","tracts_shp = gpd.GeoDataFrame(tracts_shp).set_geometry('geometry', crs=crs)\n","\n","tracts_shp = tracts_shp.drop(columns=['TRACTCE10',\t'STATEFP10', 'COUNTYFP10',\n","                                      'ALAND10', 'AWATER10',\n","                                      'INTPTLAT10', 'INTPTLON10', 'NAME10', 'NAMELSAD10', 'MTFCC10', 'FUNCSTAT10']\n","                             )\n","\n","tracts = pd.DataFrame(tracts_shp)"],"metadata":{"id":"87U_7A42DZUt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tracts = pd.read_csv(dir + \"Census Data/2010 census tracts/national_census.csv\")\n","tracts.drop(columns=['Unnamed: 0', 'STATEFP10', 'COUNTYFP10', 'ALAND10','AWATER10',\n","                     'INTPTLAT10','INTPTLON10', 'geometry'], inplace=True)\n","\n","frames.append('tracts')"],"metadata":{"id":"FQtSym5qL7wt","executionInfo":{"status":"ok","timestamp":1727188745778,"user_tz":300,"elapsed":40486,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":["## Functions"],"metadata":{"id":"8Zl3lJ09m616"}},{"cell_type":"code","source":["# Lat/long coordinates to census tract\n","\n","def LatLongTract(infile, lat, long):\n","\n","  # establish lat/long point geometry\n","  geometry = [Point(xy) for xy in zip(infile[long], infile[lat])]\n","\n","  # Make a geo dataframe, set CRS\n","  gdf = gpd.GeoDataFrame(infile, geometry=geometry)\n","  gdf = gdf.set_crs(crs)\n","\n","  # Intersect lat/long points and census tract\n","  result=gpd.sjoin(gdf, tracts_shp, how='left', op='within')\n","\n","  result.drop(columns=['index_right'], inplace=True)\n","\n","  # Standardize census tract GEOID to uppercase throughout notebooks\n","  result.rename(columns={\"geoid10\" : \"GEOID10\"}, inplace=True)\n","  return(result)\n","\n","\n","\n","# One line street address to lat/long coordinates and census tract\n","\n","def AddLatLongTract(infile):\n","\n","  # Create \"oneline\" address in cleaning \"123 N Main Street Chicago, IL 60000\"\n","  # Field names vary so not bothering to include this editing here\n","\n","  g = geocoders.GoogleV3(api_key='')\n","\n","  def Gv3_latlong (address):\n","      location = g.geocode(address)\n","      lat = location.latitude\n","      long = location.longitude\n","      # Perform additional steps to obtain census tract from coordinates\n","      # census_tract = get_census_tract_from_coordinates(latitude, longitude)\n","      return lat, long, location\n","\n","  infile[['lat', 'long', 'Location']] = infile['oneline'].apply(Gv3_latlong).apply(pd.Series)\n","\n","  # establish lat/long point geometry\n","  geometry = [Point(xy) for xy in zip(infile['long'], infile['lat'])]\n","\n","  # Make a geo dataframe, set CRS\n","  gdf = gpd.GeoDataFrame(infile, geometry=geometry)\n","  gdf = gdf.set_crs(crs)\n","\n","  # Intersect lat/long points and census tract\n","  result=gpd.sjoin(gdf, tracts_shp, how='left', op='within')\n","\n","  result.drop(columns=['index_right'], inplace=True)\n","\n","  # Standardize census tract GEOID10 to uppercase throughout notebooks\n","  result.rename(columns={\"geoid10\" : \"GEOID10\"}, inplace=True)\n","  return(result)"],"metadata":{"id":"GwaJyGCfm7-g"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# CDC"],"metadata":{"id":"6HeJM82aO3d0"}},{"cell_type":"markdown","source":["## BRFSS - reload\n","\n","Accessed from 500 Cities a.k.a. Places\n","\n","https://data.cdc.gov/500-Cities-Places/500-Cities-Census-Tract-level-Data-GIS-Friendly-Fo/k86t-wghb\n","\n","https://data.cdc.gov/500-Cities-Places/500-Cities-Local-Data-for-Better-Health-2019-relea/6vp6-wxuq\n","\n","https://www.cdc.gov/places/index.html\n","\n","data dict https://chronicdata.cdc.gov/500-Cities-Places/500-Cities-Census-Tract-level-Data-GIS-Friendly-Fo/k86t-wghb/about_data"],"metadata":{"id":"DQfquDZdO4rJ"}},{"cell_type":"code","source":["BRFSS = pd.read_csv(dir +\n","                    'CDC/Places/PLACES__Local_Data_for_Better_Health__Census_Tract_Data_2022_release.csv',\n","                    dtype='string')\n","\n","BRFSS = BRFSS[['LocationID', 'MeasureId', 'Data_Value']]"],"metadata":{"id":"nImWEJjnO59w","executionInfo":{"status":"ok","timestamp":1727189141458,"user_tz":300,"elapsed":610,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["# Pivot the DataFrame\n","BRFSS2 = BRFSS.pivot(index='LocationID', columns='MeasureId', values='Data_Value').reset_index()\n","BRFSS2 = BRFSS2.reset_index()\n","BRFSS2.drop(columns=['index'], inplace=True)\n","BRFSS2 = BRFSS2.rename(columns={'LocationID': 'GEOID10'})"],"metadata":{"id":"D93bvxah6xML","executionInfo":{"status":"ok","timestamp":1727189778731,"user_tz":300,"elapsed":1581,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["# Drop behavioral\n","\n","BRFSS2.drop(columns=['BINGE', 'CSMOKING', 'DEPRESSION', 'LPA', 'MHLTH', 'SLEEP'], inplace=True)"],"metadata":{"id":"YL_QcrUui_Ac","executionInfo":{"status":"ok","timestamp":1727190079198,"user_tz":300,"elapsed":258,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["BRFSS2.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"GhWKJajwjAyx","executionInfo":{"status":"ok","timestamp":1727190081267,"user_tz":300,"elapsed":251,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"e8a86c32-bb3c-412f-ca9d-917612d771e6"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MeasureId      GEOID10 ACCESS2 ARTHRITIS BPHIGH BPMED CANCER CASTHMA CERVICAL  CHD CHECKUP  \\\n","0          01001020100    15.0      29.1   38.8  76.0    6.2     9.8     83.5  6.6    74.1   \n","1          01001020200    19.9      28.2   43.6  75.8    5.0    10.9     84.6  5.9    76.5   \n","2          01001020300    16.7      29.3   39.6  76.0    6.2    10.1     82.6  6.7    74.3   \n","3          01001020400    12.5      30.6   39.2  78.9    8.0     8.8     85.9  7.1    75.5   \n","4          01001020500    12.8      25.3   34.6  73.2    5.8     9.2     86.0  5.2    73.5   \n","\n","MeasureId CHOLSCREEN COLON_SCREEN COPD COREM COREW DENTAL DIABETES GHLTH HIGHCHOL KIDNEY MAMMOUSE  \\\n","0               86.6         70.8  8.1  44.0  42.8   63.4     10.7  17.3     35.6    2.9     76.8   \n","1               87.3         70.9  7.6  37.5  37.4   55.6     13.4  21.6     32.7    3.1     81.0   \n","2               85.9         70.8  8.3  42.4  40.5   61.1     11.3  18.5     35.0    3.0     76.9   \n","3               89.6         75.5  7.2  49.8  46.3   70.3     10.2  14.2     37.7    2.9     75.5   \n","4               87.6         72.7  5.9  47.3  44.1   68.4      8.7  13.4     32.7    2.4     77.8   \n","\n","MeasureId OBESITY PHLTH STROKE TEETHLOST  \n","0            37.0  11.3    3.1      14.6  \n","1            43.9  12.1    3.7      19.4  \n","2            37.9  11.6    3.3      16.2  \n","3            33.2   9.8    3.0      10.9  \n","4            34.8   9.1    2.4      11.1  "],"text/html":["\n","  <div id=\"df-c44e6eb6-8b6c-4112-a3ca-c1b04307c266\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>MeasureId</th>\n","      <th>GEOID10</th>\n","      <th>ACCESS2</th>\n","      <th>ARTHRITIS</th>\n","      <th>BPHIGH</th>\n","      <th>BPMED</th>\n","      <th>CANCER</th>\n","      <th>CASTHMA</th>\n","      <th>CERVICAL</th>\n","      <th>CHD</th>\n","      <th>CHECKUP</th>\n","      <th>CHOLSCREEN</th>\n","      <th>COLON_SCREEN</th>\n","      <th>COPD</th>\n","      <th>COREM</th>\n","      <th>COREW</th>\n","      <th>DENTAL</th>\n","      <th>DIABETES</th>\n","      <th>GHLTH</th>\n","      <th>HIGHCHOL</th>\n","      <th>KIDNEY</th>\n","      <th>MAMMOUSE</th>\n","      <th>OBESITY</th>\n","      <th>PHLTH</th>\n","      <th>STROKE</th>\n","      <th>TEETHLOST</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>01001020100</td>\n","      <td>15.0</td>\n","      <td>29.1</td>\n","      <td>38.8</td>\n","      <td>76.0</td>\n","      <td>6.2</td>\n","      <td>9.8</td>\n","      <td>83.5</td>\n","      <td>6.6</td>\n","      <td>74.1</td>\n","      <td>86.6</td>\n","      <td>70.8</td>\n","      <td>8.1</td>\n","      <td>44.0</td>\n","      <td>42.8</td>\n","      <td>63.4</td>\n","      <td>10.7</td>\n","      <td>17.3</td>\n","      <td>35.6</td>\n","      <td>2.9</td>\n","      <td>76.8</td>\n","      <td>37.0</td>\n","      <td>11.3</td>\n","      <td>3.1</td>\n","      <td>14.6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>01001020200</td>\n","      <td>19.9</td>\n","      <td>28.2</td>\n","      <td>43.6</td>\n","      <td>75.8</td>\n","      <td>5.0</td>\n","      <td>10.9</td>\n","      <td>84.6</td>\n","      <td>5.9</td>\n","      <td>76.5</td>\n","      <td>87.3</td>\n","      <td>70.9</td>\n","      <td>7.6</td>\n","      <td>37.5</td>\n","      <td>37.4</td>\n","      <td>55.6</td>\n","      <td>13.4</td>\n","      <td>21.6</td>\n","      <td>32.7</td>\n","      <td>3.1</td>\n","      <td>81.0</td>\n","      <td>43.9</td>\n","      <td>12.1</td>\n","      <td>3.7</td>\n","      <td>19.4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>01001020300</td>\n","      <td>16.7</td>\n","      <td>29.3</td>\n","      <td>39.6</td>\n","      <td>76.0</td>\n","      <td>6.2</td>\n","      <td>10.1</td>\n","      <td>82.6</td>\n","      <td>6.7</td>\n","      <td>74.3</td>\n","      <td>85.9</td>\n","      <td>70.8</td>\n","      <td>8.3</td>\n","      <td>42.4</td>\n","      <td>40.5</td>\n","      <td>61.1</td>\n","      <td>11.3</td>\n","      <td>18.5</td>\n","      <td>35.0</td>\n","      <td>3.0</td>\n","      <td>76.9</td>\n","      <td>37.9</td>\n","      <td>11.6</td>\n","      <td>3.3</td>\n","      <td>16.2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>01001020400</td>\n","      <td>12.5</td>\n","      <td>30.6</td>\n","      <td>39.2</td>\n","      <td>78.9</td>\n","      <td>8.0</td>\n","      <td>8.8</td>\n","      <td>85.9</td>\n","      <td>7.1</td>\n","      <td>75.5</td>\n","      <td>89.6</td>\n","      <td>75.5</td>\n","      <td>7.2</td>\n","      <td>49.8</td>\n","      <td>46.3</td>\n","      <td>70.3</td>\n","      <td>10.2</td>\n","      <td>14.2</td>\n","      <td>37.7</td>\n","      <td>2.9</td>\n","      <td>75.5</td>\n","      <td>33.2</td>\n","      <td>9.8</td>\n","      <td>3.0</td>\n","      <td>10.9</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>01001020500</td>\n","      <td>12.8</td>\n","      <td>25.3</td>\n","      <td>34.6</td>\n","      <td>73.2</td>\n","      <td>5.8</td>\n","      <td>9.2</td>\n","      <td>86.0</td>\n","      <td>5.2</td>\n","      <td>73.5</td>\n","      <td>87.6</td>\n","      <td>72.7</td>\n","      <td>5.9</td>\n","      <td>47.3</td>\n","      <td>44.1</td>\n","      <td>68.4</td>\n","      <td>8.7</td>\n","      <td>13.4</td>\n","      <td>32.7</td>\n","      <td>2.4</td>\n","      <td>77.8</td>\n","      <td>34.8</td>\n","      <td>9.1</td>\n","      <td>2.4</td>\n","      <td>11.1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c44e6eb6-8b6c-4112-a3ca-c1b04307c266')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c44e6eb6-8b6c-4112-a3ca-c1b04307c266 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c44e6eb6-8b6c-4112-a3ca-c1b04307c266');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-43f37805-1ac3-4fa0-9303-1a7c652f45e9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-43f37805-1ac3-4fa0-9303-1a7c652f45e9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-43f37805-1ac3-4fa0-9303-1a7c652f45e9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"BRFSS2"}},"metadata":{},"execution_count":46}]},{"cell_type":"markdown","source":["### Export and reload"],"metadata":{"id":"CnNzMcuzW63a"}},{"cell_type":"code","source":["with open(dir + 'CDC/Places/brfss_pivoted.csv', 'w') as f:\n","  BRFSS2.to_csv(f)"],"metadata":{"id":"ImrkPjJwW8qN","executionInfo":{"status":"ok","timestamp":1727190086543,"user_tz":300,"elapsed":742,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":47,"outputs":[]},{"cell_type":"code","source":["# Reload\n","\n","BRFSS = pd.read_csv(dir + 'CDC/Places/brfss_pivoted.csv')\n","BRFSS.drop(columns=['Unnamed: 0'], inplace=True)\n","\n","# frames.append('BRFSS')"],"metadata":{"id":"fF3Tz2n3W8xW","executionInfo":{"status":"ok","timestamp":1727190088943,"user_tz":300,"elapsed":342,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":48,"outputs":[]},{"cell_type":"markdown","source":["## Life expectancy at birth - reload"],"metadata":{"id":"eyOKgp08QTwS"}},{"cell_type":"code","source":["life = pd.read_csv(dir +\n","                   'CDC/Small area life expectancy/U.S._Life_Expectancy_at_Birth_by_State_and_Census_Tract_-_2010-2015.csv')\n","\n","\n","life['Census Tract Number'] = pd.to_numeric(life['Census Tract Number'], errors='coerce')\n","\n","# Fill NaNs with 0\n","life['Census Tract Number'] = life['Census Tract Number'].fillna(0).astype(int).astype(str)\n","\n","# Function to pad with 0\n","def format_tract_number(number):\n","    # Pad with leading zeros to ensure length is 6\n","    return number.zfill(6)\n","\n","# Apply the function\n","life['tract'] = life['Census Tract Number'].apply(format_tract_number)\n","life['tract'] = life['tract'].astype(str)\n","\n","life['County_nm'] = life['County'].str.split(' County').str[0]"],"metadata":{"id":"M-NxRyNHQfnX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ref = pd.read_csv(dir + 'GIS and shapefiles/fips_codes_states_counties_tigris.csv')\n","ref.rename(columns={'state_name': 'State', 'county_name': 'County_nm'}, inplace=True)\n","\n","life = pd.merge(life, ref, on=['State', 'County_nm'])"],"metadata":{"id":"5xWF2wSh5Z7i"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Pad\n","\n","life['state_fips'] = life['state_fips'].astype(str)\n","life['county_fips'] = life['county_fips'].astype(str)\n","\n","life['state_fips'] = life['state_fips'].str.zfill(2)\n","life['county_fips'] = life['county_fips'].str.zfill(3)\n","\n","life['tract'] = life['tract'].astype(str)"],"metadata":{"id":"t8k0osZC711T"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["life['state_fips'] = life['state_fips'].astype(str)\n","life['county_fips'] = life['county_fips'].astype(str)\n","life['tract'] = life['tract'].astype(str)\n","\n","life['GEOID10'] = life['state_fips'] + life['county_fips'] + life['tract']"],"metadata":{"id":"_dI5o7rBxR9Y"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Export and reload"],"metadata":{"id":"hH_egtKh9OFW"}},{"cell_type":"code","source":["life.to_csv(dir +\n","                   'CDC/Small area life expectancy/U.S._Life_Expectancy_at_Birth_by_State_and_Census_Tract_-_2010-2015_geoid10.csv')\n"],"metadata":{"id":"tKe1f1268iPx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Reload\n","\n","life = pd.read_csv(dir +\n","                   'CDC/Small area life expectancy/U.S._Life_Expectancy_at_Birth_by_State_and_Census_Tract_-_2010-2015_geoid10.csv')\n","\n","life = life[['GEOID10', 'Life Expectancy']]\n","\n","frames.append('life')"],"metadata":{"id":"dtzQDBB48rpm","executionInfo":{"status":"ok","timestamp":1727188748413,"user_tz":300,"elapsed":1468,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":9,"outputs":[]},{"cell_type":"markdown","source":["# HIFLD"],"metadata":{"id":"An3gVbHWDHEP"}},{"cell_type":"markdown","source":["## Hospitals (HIFLD)\n","\n","https://hifld-geoplatform.opendata.arcgis.com/datasets/hospitals\n","\n","https://hifld-geoplatform.opendata.arcgis.com/datasets/geoplatform::hospitals/about"],"metadata":{"id":"bX7Rv9tlDOTY"}},{"cell_type":"code","source":["hosp = pd.read_csv(dir + 'Homeland infrastructure/HIFLD Hospitals/Hospitals.csv', dtype='string')\n","\n","hosp = hosp[['LATITUDE', 'LONGITUDE', 'NAME', 'ADDRESS', 'CITY', 'STATE', 'ZIP', 'TYPE', 'POPULATION',\n","             'OWNER', 'BEDS', 'TRAUMA', 'HELIPAD']]"],"metadata":{"id":"ObOhx5djDPbf","executionInfo":{"status":"ok","timestamp":1727190417850,"user_tz":300,"elapsed":835,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":60,"outputs":[]},{"cell_type":"markdown","source":["### GIS -- geocoding function"],"metadata":{"id":"bjvCUI-gYcJx"}},{"cell_type":"code","source":["# def LatLongTract(infile, lat, long):\n","\n","hosp2 = LatLongTract(hosp, 'LATITUDE', 'LONGITUDE')"],"metadata":{"id":"vUmNjAySYdcS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1722349412809,"user_tz":300,"elapsed":1432,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"228d5f42-c164-4aa8-fad9-90d7f5314550"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/pyproj/crs/crs.py:141: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6\n","  in_crs_string = _prepare_from_proj_string(in_crs_string)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/interactiveshell.py:3553: FutureWarning: The `op` parameter is deprecated and will be removed in a future release. Please use the `predicate` parameter instead.\n","  exec(code_obj, self.user_global_ns, self.user_ns)\n"]}]},{"cell_type":"code","source":["hosp2['POPULATION'] = hosp2['POPULATION'].astype(float)\n","hosp2['BEDS'] = hosp2['BEDS'].astype(float)"],"metadata":{"id":"euJRmgmDeHc6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Summarize by tract"],"metadata":{"id":"NQudDRU-ZSix"}},{"cell_type":"code","source":["temp = hosp2.groupby(['GEOID10']).agg(\n","    HospCount=('GEOID10', 'size'),\n","    TotalPop=('POPULATION', 'sum'),\n","    TotalBeds=('BEDS', 'sum')\n","    ).reset_index()"],"metadata":{"id":"POt3ZnTLaUdJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["hosp3 = pd.read_csv(dir + 'Homeland infrastructure/HIFLD Hospitals/Hosp_natl_Tract.csv', dtype='string')\n","hosp3.drop(columns=['Unnamed: 0', 'LATITUDE', 'LONGITUDE', 'NAME', 'ADDRESS', 'CITY', 'STATE', 'ZIP', 'TYPE',\n","                    'OWNER', 'TRAUMA', 'TRACTCE10', 'NAME10', 'NAMELSAD10', 'MTFCC10', 'FUNCSTAT10', 'HELIPAD_NOT AVAILABLE',\n","                    'HELIPAD_Y','TRAUMA_ATH', 'TRAUMA_CTH', 'TRAUMA_I-RPTC', 'TRAUMA_LEVEL I', 'TRAUMA_LEVEL I ADULT',\n","                    'TRAUMA_LEVEL I ADULT, LEVEL I PEDIATRIC', 'TRAUMA_LEVEL I ADULT, LEVEL II PEDIATRIC',\n","                    'TRAUMA_LEVEL I PEDIATRIC', 'TRAUMA_LEVEL I PEDIATRIC REHAB', 'TRAUMA_LEVEL I, LEVEL I PEDIATRIC',\n","                    'TRAUMA_LEVEL I, LEVEL II PEDIATRIC', 'TRAUMA_LEVEL II', 'TRAUMA_LEVEL II / PEDIATRIC', 'TRAUMA_LEVEL II ADULT',\n","                    'TRAUMA_LEVEL II ADULT, LEVEL II PEDIATRIC', 'TRAUMA_LEVEL II PEDIATRIC', 'TRAUMA_LEVEL II REHAB',\n","                    'TRAUMA_LEVEL II, LEVEL II PEDIATRIC', 'TRAUMA_LEVEL II, LEVEL III PEDIATRIC, LEVEL II REHAB', 'TRAUMA_LEVEL III',\n","                    'TRAUMA_LEVEL III ADULT', 'TRAUMA_LEVEL IV', 'TRAUMA_LEVEL V', 'TRAUMA_NOT AVAILABLE', 'TRAUMA_PARC', 'TRAUMA_PEDIATRIC',\n","                    'TRAUMA_REGIONAL', 'TRAUMA_RTC', 'TRAUMA_RTH', 'TRAUMA_TRF', 'TRAUMA_TRH'], inplace=True)"],"metadata":{"id":"X7ny0M62kSzG","executionInfo":{"status":"ok","timestamp":1727190703942,"user_tz":300,"elapsed":171,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":63,"outputs":[]},{"cell_type":"code","source":["hosp3 = pd.DataFrame(hosp2) # remove geometry\n","hosp3.drop(columns=['geometry'], inplace=True)\n","\n","temp1 = hosp3[['GEOID10', 'TYPE']]\n","temp1 = pd.get_dummies(temp1, columns=['TYPE']).groupby('GEOID10').sum().reset_index()\n","\n","temp2 = hosp3[['GEOID10', 'OWNER']]\n","temp2 = pd.get_dummies(temp2, columns=['OWNER']).groupby('GEOID10').sum().reset_index()\n","\n","temp3 = pd.get_dummies(hosp3, columns=['HELIPAD']).groupby('GEOID10').sum().reset_index()\n","temp3.drop(columns=['POPULATION', 'BEDS', 'HELIPAD_N'], inplace=True)\n","\n","temp4 =  hosp3[['GEOID10', 'TRAUMA']]\n","temp4 = pd.get_dummies(temp4, columns=['TRAUMA']).groupby('GEOID10').sum().reset_index()"],"metadata":{"id":"ACM1jQ0XB5Gy","executionInfo":{"status":"ok","timestamp":1727190733561,"user_tz":300,"elapsed":190,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["# Merge tract summaries\n","\n","mergey = [temp, temp1, temp2, temp3, temp4]\n","\n","hosp_tract = reduce(lambda left, right: pd.merge(left, right, on='GEOID10', how='outer'), mergey)\n","\n","hosp_tract.drop(columns=['TotalPop'], inplace=True) # same as TotalBeds"],"metadata":{"id":"dIXYx1aSa0Kl"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Export and reload"],"metadata":{"id":"kDto7i65HVsT"}},{"cell_type":"code","source":["# Export line listing\n","with open(dir + 'Homeland infrastructure/HIFLD Hospitals/Hosp_natl_Line.csv', 'w') as f:\n","  hosp3.to_csv(f)\n","\n","# Export tract summary\n","with open(dir + 'Homeland infrastructure/HIFLD Hospitals/Hosp_natl_Tract.csv', 'w') as f:\n","  hosp_tract.to_csv(f)"],"metadata":{"id":"p5TSnXyqHS5j","executionInfo":{"status":"ok","timestamp":1727190872854,"user_tz":300,"elapsed":903,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":71,"outputs":[]},{"cell_type":"code","source":["# Reload tract summary\n","hosp = pd.read_csv(dir + 'Homeland infrastructure/HIFLD Hospitals/Hosp_natl_Tract.csv', dtype='string')\n","hosp.drop(columns=['Unnamed: 0'], inplace=True)\n","\n","frames.append('hosp')"],"metadata":{"id":"6JDCMNpTZdAp","executionInfo":{"status":"ok","timestamp":1727190921681,"user_tz":300,"elapsed":162,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":74,"outputs":[]},{"cell_type":"markdown","source":["## Pharmacies (RX Open via HIFLD)\n","\n","https://rxopen.org/"],"metadata":{"id":"wM1H5GDEGW_T"}},{"cell_type":"code","source":["rx = pd.read_csv(dir + 'Homeland infrastructure/RX open facilities/facility.csv', dtype='string')"],"metadata":{"id":"F2aM96JgAhlN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### To GIS -- geocoding function\n","\n","def LatLongTract(infile, lat, long):"],"metadata":{"id":"6qbakwI3IHKw"}},{"cell_type":"code","source":["# Split 'CalcLocation' column into 'latitude' and 'longitude'\n","rx[['latitude', 'longitude']] = rx['CalcLocation'].str.split(',', expand=True)"],"metadata":{"id":"0-WBL8LZyTAZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import time\n","t0 = time.time()\n","\n","rx2 = LatLongTract(rx, 'latitude', 'longitude')\n","rx2.drop(columns=['CalcLocation', 'formated_phone', 'Icon'], inplace=True)\n","line = pd.DataFrame(rx2)\n","\n","t1 = time.time()\n","total = (t1-t0)/60\n","print(total)"],"metadata":{"id":"VDOJ4gtXIIxe","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1721848644048,"user_tz":300,"elapsed":5459,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"64f78255-83cf-436f-c811-9b1859cc88c3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/pyproj/crs/crs.py:141: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6\n","  in_crs_string = _prepare_from_proj_string(in_crs_string)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/interactiveshell.py:3553: FutureWarning: The `op` parameter is deprecated and will be removed in a future release. Please use the `predicate` parameter instead.\n","  exec(code_obj, self.user_global_ns, self.user_ns)\n"]},{"output_type":"stream","name":"stdout","text":["0.0879699985186259\n"]}]},{"cell_type":"code","source":["rx_tract = line.groupby('GEOID10').size().to_frame('RxCount').reset_index()"],"metadata":{"id":"LUXnN_xByrZ1"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Export and reload"],"metadata":{"id":"1VmETRXeFw1X"}},{"cell_type":"code","source":["# Export line listing\n","with open(dir + 'Homeland infrastructure/RX open facilities/Rx_line.csv', 'w') as f:\n","  line.to_csv(f)\n","\n","# Export tract\n","with open(dir + 'Homeland infrastructure/RX open facilities/Rx_tract.csv', 'w') as f:\n","  rx_tract.to_csv(f)"],"metadata":{"id":"za-158w9Fr9H"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Reload\n","rx = pd.read_csv(dir + 'Homeland infrastructure/RX open facilities/Rx_tract.csv', dtype='string')\n","rx.drop(columns=['Unnamed: 0'], inplace=True)\n","\n","frames.append('rx')"],"metadata":{"id":"CHhv4jlQzOfq","executionInfo":{"status":"ok","timestamp":1727188750206,"user_tz":300,"elapsed":878,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":11,"outputs":[]},{"cell_type":"markdown","source":["# HRSA"],"metadata":{"id":"M7-uL8mXAeyF"}},{"cell_type":"markdown","source":["## xFQHCs currently in Chicago file only. Need to download more data.\n","\n","Downloaded Cook County only\n","\n","https://data.hrsa.gov/data/reports/datagrid?gridName=FQHCs"],"metadata":{"id":"6F7BZ0dYe1ia"}},{"cell_type":"code","source":["# Need national data\n","\n","fqhc = pd.read_excel(dir + 'HRSA/CookCoFQHCs raw.xlsx')\n","fqhc['Zip5'] = fqhc['Zip9'].str[:5]"],"metadata":{"id":"wOi0qiOFe0u4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### GIS - geocoding function\n","\n","def AddLatLongTract(infile):"],"metadata":{"id":"XILoqR-xp5OD"}},{"cell_type":"code","source":["fqhc['oneline'] = fqhc['Street'] + ' ' + fqhc['City'] + ', ' + fqhc['State'] + ' ' + fqhc['Zip5']"],"metadata":{"id":"DKYF-FKuqpAG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718657906092,"user_tz":300,"elapsed":384,"user":{"displayName":"Alicia Severiano","userId":"08178484405510010935"}},"outputId":"ba71d97a-9d9f-4b7c-c344-7f7f12858c45"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(190, 10)"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["fqhc2 = AddLatLongTract(fqhc)"],"metadata":{"id":"DgE2ptf9p6bW"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Summarize to tract"],"metadata":{"id":"EZyHUWKKq1UG"}},{"cell_type":"code","source":["fqhc_tract = fqhc2.groupby('GEOID10').agg(FQHCcount = ('GEOID10', 'size')).reset_index()"],"metadata":{"id":"dJ_wQfGMq1FK"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Export and reload"],"metadata":{"id":"VusTKkLPqyk4"}},{"cell_type":"code","source":["# Export line listing\n","with open(dir + 'HRSA/FQHC_Line.csv', 'w') as f:\n","  fqhc2.to_csv(f)\n","\n","# Export tract summary\n","with open(dir + 'HRSA/FQHC_tract.csv', 'w') as f:\n","  fqhc_tract.to_csv(f)"],"metadata":{"id":"cgeFPf0urN5B"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Reload tract summary\n","fqhc = pd.read_csv(dir + 'HRSA/FQHC_tract.csv', dtype='string')\n","fqhc.drop(columns=['Unnamed: 0'], inplace=True)\n","\n","frames.append('fqhc')"],"metadata":{"id":"x6OJyvpSrOI4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Merge data"],"metadata":{"id":"xL5YrwxwmhS9"}},{"cell_type":"code","source":["frames"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0dffa1Ld9xgm","executionInfo":{"status":"ok","timestamp":1727190931404,"user_tz":300,"elapsed":179,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"1a0e1611-85fe-424c-b7c6-ab32513df05a"},"execution_count":76,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['tracts', 'BRFSS', 'life', 'hosp', 'rx']"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":["# Convert 'GEOID10' in all DataFrames to uppercase and numeric\n","for df_name in frames:\n","  # Convert 'GEOID10' to numeric\n","  globals()[df_name]['GEOID10'] = pd.to_numeric(globals()[df_name]['GEOID10'], errors='coerce')"],"metadata":{"id":"9q85MG6ajpeE","executionInfo":{"status":"ok","timestamp":1727190932934,"user_tz":300,"elapsed":474,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":77,"outputs":[]},{"cell_type":"code","source":["# Merge all DataFrames on 'GEOID10'\n","\n","merged_df = tracts\n","\n","for df_name in frames:\n","    if df_name != 'tracts':\n","        merged_df = pd.merge(merged_df, globals()[df_name], on='GEOID10', how='left')\n","\n","print(merged_df.shape)\n","merged_df = merged_df.drop_duplicates()\n","merged_df = merged_df.drop_duplicates(subset=['GEOID10'])\n","print(merged_df.shape)"],"metadata":{"id":"WqfVjYk1mjHP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1727191011804,"user_tz":300,"elapsed":1234,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"745c1ee4-338a-4074-f81b-324892ed764b"},"execution_count":84,"outputs":[{"output_type":"stream","name":"stdout","text":["(74186, 46)\n","(74002, 46)\n"]}]},{"cell_type":"markdown","source":["# Data check"],"metadata":{"id":"7S_2OsKHlZ7Q"}},{"cell_type":"markdown","source":["## Identify constants"],"metadata":{"id":"v-zeLPj7leiz"}},{"cell_type":"code","source":["constant_columns = [col for col in merged_df.columns if merged_df[col].nunique() == 1]\n","\n","constant_columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vi5LTv79lgK8","executionInfo":{"status":"ok","timestamp":1727191017686,"user_tz":300,"elapsed":527,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"94ee0cbe-430f-44d4-a1c7-318f9b5c7b96"},"execution_count":85,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[]"]},"metadata":{},"execution_count":85}]},{"cell_type":"markdown","source":["## Identify duplicated information across variables"],"metadata":{"id":"MFqhwB1Algqx"}},{"cell_type":"code","source":["from itertools import combinations\n","\n","# Get all pairs of columns\n","column_pairs = combinations(merged_df.columns, 2)\n","\n","# Find pairs of columns that are identical\n","identical_pairs = [(col1, col2) for col1, col2 in column_pairs if merged_df[col1].equals(merged_df[col2])]\n","\n","# Display the identical pairs\n","identical_pairs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LTH9tFUmljvV","executionInfo":{"status":"ok","timestamp":1727191018881,"user_tz":300,"elapsed":427,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"d1abab69-9f5d-4e2d-d0bd-0d10262d0656"},"execution_count":86,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[]"]},"metadata":{},"execution_count":86}]},{"cell_type":"markdown","source":["## Duplicated tract rows?"],"metadata":{"id":"IsXucqx2PDTd"}},{"cell_type":"code","source":["len(merged_df['GEOID10'])-len(merged_df['GEOID10'].drop_duplicates())"],"metadata":{"id":"_snV4IEcPGkh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1727191020522,"user_tz":300,"elapsed":183,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"5d6af194-26d1-4459-ac68-6bd18d931064"},"execution_count":87,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":87}]},{"cell_type":"markdown","source":["## Export and reload final analytic file (census tract)"],"metadata":{"id":"rparaz6bgDi5"}},{"cell_type":"code","source":["with open(curated +  '00070_Health_national.csv', 'w') as f:\n","  merged_df.to_csv(f)"],"metadata":{"id":"yxbNkItTb7Md","executionInfo":{"status":"ok","timestamp":1727191025202,"user_tz":300,"elapsed":2488,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":88,"outputs":[]},{"cell_type":"code","source":["health = pd.read_csv(curated +  '00070_Health_national.csv')\n","health = health[health.columns.drop(list(health.filter(regex='Unnamed')))]"],"metadata":{"id":"mC4eLXzvOWks","executionInfo":{"status":"ok","timestamp":1727191025393,"user_tz":300,"elapsed":193,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":89,"outputs":[]},{"cell_type":"code","source":["health.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"HADyvHw2FudT","executionInfo":{"status":"ok","timestamp":1727191026996,"user_tz":300,"elapsed":550,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"e1f3ddb3-cde8-4215-d3bc-8ecc31e45a9d"},"execution_count":90,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             GEOID10  ACCESS2  ARTHRITIS   BPHIGH    BPMED   CANCER  CASTHMA  CERVICAL      CHD  \\\n","count       74002.00 72312.00   72312.00 70313.00 70313.00 72312.00 72312.00  72295.00 72312.00   \n","mean  28391241080.03    15.75      23.81    32.49    72.79     6.14    10.03     81.57     6.19   \n","std   16475848250.55     8.39       6.25     7.36     7.18     1.84     1.55      4.62     1.98   \n","min    1001020100.00     2.60       2.00     5.10     9.40     0.50     5.60     40.40     0.40   \n","25%   13039010401.25     9.90      19.40    27.60    69.60     4.90     9.00     79.20     4.80   \n","50%   28047001350.00    13.60      23.80    31.90    74.20     6.20     9.80     82.10     6.00   \n","75%   42003413950.75    19.40      28.10    36.80    77.40     7.20    10.80     84.70     7.40   \n","max   72153750602.00    64.90      53.60    72.30    92.80    20.00    20.60     91.60    34.50   \n","\n","       CHECKUP  CHOLSCREEN  COLON_SCREEN     COPD    COREM    COREW   DENTAL  DIABETES    GHLTH  \\\n","count 72312.00    70313.00      72279.00 72312.00 72168.00 72117.00 72312.00  72312.00 72312.00   \n","mean     73.82       85.58         68.54     6.83    42.23    36.64    61.74     10.81    15.82   \n","std       5.36        4.41          7.04     2.63     8.30     7.17    10.91      3.63     6.63   \n","min      49.70       48.00         33.20     0.70    14.70    11.20    18.10      0.60     2.80   \n","25%      70.40       83.40         64.60     4.90    37.10    31.90    54.40      8.40    10.90   \n","50%      74.70       86.10         69.60     6.40    42.80    36.70    63.10     10.20    14.40   \n","75%      77.60       88.50         73.50     8.40    48.00    41.70    70.10     12.60    19.30   \n","max      90.80       98.20         88.00    27.70    67.20    63.00    85.80     42.20    53.60   \n","\n","       HIGHCHOL   KIDNEY  MAMMOUSE  OBESITY    PHLTH   STROKE  TEETHLOST  Life Expectancy  \\\n","count  70313.00 72312.00  72228.00 72312.00 72312.00 72312.00   72213.00           129.00   \n","mean      31.83     2.96     75.94    33.00    10.73     3.15      14.76            79.49   \n","std        4.79     0.85      3.87     7.15     3.21     1.22       7.15             3.75   \n","min        6.20     0.50     46.70    11.50     2.30     0.20       2.50            67.20   \n","25%       29.10     2.40     73.40    28.00     8.40     2.30       9.40            77.60   \n","50%       32.10     2.80     75.90    33.00    10.30     2.90      13.40            80.00   \n","75%       35.00     3.40     78.60    37.60    12.60     3.70      18.60            82.10   \n","max       52.90    14.40     87.90    63.90    31.30    20.50      58.40            87.10   \n","\n","       HospCount  TotalBeds  TYPE_CHILDREN  TYPE_CHRONIC DISEASE  TYPE_CRITICAL ACCESS  \\\n","count    6462.00    6462.00        6462.00               6462.00               6462.00   \n","mean        1.24     112.68           0.03                  0.00                  0.20   \n","std         0.65     361.50           0.17                  0.05                  0.41   \n","min         1.00   -5434.00           0.00                  0.00                  0.00   \n","25%         1.00      25.00           0.00                  0.00                  0.00   \n","50%         1.00      76.00           0.00                  0.00                  0.00   \n","75%         1.00     209.00           0.00                  0.00                  0.00   \n","max        11.00    5525.00           3.00                  2.00                  2.00   \n","\n","       TYPE_GENERAL ACUTE CARE  TYPE_LONG TERM CARE  TYPE_MILITARY  TYPE_PSYCHIATRIC  \\\n","count                  6462.00              6462.00        6462.00           6462.00   \n","mean                      0.65                 0.06           0.04              0.15   \n","std                       0.58                 0.24           0.21              0.38   \n","min                       0.00                 0.00           0.00              0.00   \n","25%                       0.00                 0.00           0.00              0.00   \n","50%                       1.00                 0.00           0.00              0.00   \n","75%                       1.00                 0.00           0.00              0.00   \n","max                       6.00                 2.00           2.00              3.00   \n","\n","       TYPE_REHABILITATION  TYPE_SPECIAL  TYPE_WOMEN  OWNER_GOVERNMENT - DISTRICT/AUTHORITY  \\\n","count              6462.00       6462.00     6462.00                                6462.00   \n","mean                  0.07          0.03        0.00                                   0.06   \n","std                   0.27          0.19        0.05                                   0.23   \n","min                   0.00          0.00        0.00                                   0.00   \n","25%                   0.00          0.00        0.00                                   0.00   \n","50%                   0.00          0.00        0.00                                   0.00   \n","75%                   0.00          0.00        0.00                                   0.00   \n","max                   3.00          2.00        1.00                                   2.00   \n","\n","       OWNER_GOVERNMENT - FEDERAL  OWNER_GOVERNMENT - LOCAL  OWNER_GOVERNMENT - STATE  \\\n","count                     6462.00                   6462.00                   6462.00   \n","mean                         0.05                      0.08                      0.05   \n","std                          0.23                      0.28                      0.24   \n","min                          0.00                      0.00                      0.00   \n","25%                          0.00                      0.00                      0.00   \n","50%                          0.00                      0.00                      0.00   \n","75%                          0.00                      0.00                      0.00   \n","max                          2.00                      2.00                      3.00   \n","\n","       OWNER_NON-PROFIT  OWNER_NOT AVAILABLE  OWNER_PROPRIETARY  RxCount  \n","count           6462.00              6462.00            6462.00 34938.00  \n","mean               0.52                 0.10               0.38     1.83  \n","std                0.60                 0.34               0.64     1.27  \n","min                0.00                 0.00               0.00     1.00  \n","25%                0.00                 0.00               0.00     1.00  \n","50%                0.00                 0.00               0.00     1.00  \n","75%                1.00                 0.00               1.00     2.00  \n","max                7.00                 5.00               8.00    32.00  "],"text/html":["\n","  <div id=\"df-ff5c6e48-57f8-4bb0-ac68-7756a337b56d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>GEOID10</th>\n","      <th>ACCESS2</th>\n","      <th>ARTHRITIS</th>\n","      <th>BPHIGH</th>\n","      <th>BPMED</th>\n","      <th>CANCER</th>\n","      <th>CASTHMA</th>\n","      <th>CERVICAL</th>\n","      <th>CHD</th>\n","      <th>CHECKUP</th>\n","      <th>CHOLSCREEN</th>\n","      <th>COLON_SCREEN</th>\n","      <th>COPD</th>\n","      <th>COREM</th>\n","      <th>COREW</th>\n","      <th>DENTAL</th>\n","      <th>DIABETES</th>\n","      <th>GHLTH</th>\n","      <th>HIGHCHOL</th>\n","      <th>KIDNEY</th>\n","      <th>MAMMOUSE</th>\n","      <th>OBESITY</th>\n","      <th>PHLTH</th>\n","      <th>STROKE</th>\n","      <th>TEETHLOST</th>\n","      <th>Life Expectancy</th>\n","      <th>HospCount</th>\n","      <th>TotalBeds</th>\n","      <th>TYPE_CHILDREN</th>\n","      <th>TYPE_CHRONIC DISEASE</th>\n","      <th>TYPE_CRITICAL ACCESS</th>\n","      <th>TYPE_GENERAL ACUTE CARE</th>\n","      <th>TYPE_LONG TERM CARE</th>\n","      <th>TYPE_MILITARY</th>\n","      <th>TYPE_PSYCHIATRIC</th>\n","      <th>TYPE_REHABILITATION</th>\n","      <th>TYPE_SPECIAL</th>\n","      <th>TYPE_WOMEN</th>\n","      <th>OWNER_GOVERNMENT - DISTRICT/AUTHORITY</th>\n","      <th>OWNER_GOVERNMENT - FEDERAL</th>\n","      <th>OWNER_GOVERNMENT - LOCAL</th>\n","      <th>OWNER_GOVERNMENT - STATE</th>\n","      <th>OWNER_NON-PROFIT</th>\n","      <th>OWNER_NOT AVAILABLE</th>\n","      <th>OWNER_PROPRIETARY</th>\n","      <th>RxCount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>74002.00</td>\n","      <td>72312.00</td>\n","      <td>72312.00</td>\n","      <td>70313.00</td>\n","      <td>70313.00</td>\n","      <td>72312.00</td>\n","      <td>72312.00</td>\n","      <td>72295.00</td>\n","      <td>72312.00</td>\n","      <td>72312.00</td>\n","      <td>70313.00</td>\n","      <td>72279.00</td>\n","      <td>72312.00</td>\n","      <td>72168.00</td>\n","      <td>72117.00</td>\n","      <td>72312.00</td>\n","      <td>72312.00</td>\n","      <td>72312.00</td>\n","      <td>70313.00</td>\n","      <td>72312.00</td>\n","      <td>72228.00</td>\n","      <td>72312.00</td>\n","      <td>72312.00</td>\n","      <td>72312.00</td>\n","      <td>72213.00</td>\n","      <td>129.00</td>\n","      <td>6462.00</td>\n","      <td>6462.00</td>\n","      <td>6462.00</td>\n","      <td>6462.00</td>\n","      <td>6462.00</td>\n","      <td>6462.00</td>\n","      <td>6462.00</td>\n","      <td>6462.00</td>\n","      <td>6462.00</td>\n","      <td>6462.00</td>\n","      <td>6462.00</td>\n","      <td>6462.00</td>\n","      <td>6462.00</td>\n","      <td>6462.00</td>\n","      <td>6462.00</td>\n","      <td>6462.00</td>\n","      <td>6462.00</td>\n","      <td>6462.00</td>\n","      <td>6462.00</td>\n","      <td>34938.00</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>28391241080.03</td>\n","      <td>15.75</td>\n","      <td>23.81</td>\n","      <td>32.49</td>\n","      <td>72.79</td>\n","      <td>6.14</td>\n","      <td>10.03</td>\n","      <td>81.57</td>\n","      <td>6.19</td>\n","      <td>73.82</td>\n","      <td>85.58</td>\n","      <td>68.54</td>\n","      <td>6.83</td>\n","      <td>42.23</td>\n","      <td>36.64</td>\n","      <td>61.74</td>\n","      <td>10.81</td>\n","      <td>15.82</td>\n","      <td>31.83</td>\n","      <td>2.96</td>\n","      <td>75.94</td>\n","      <td>33.00</td>\n","      <td>10.73</td>\n","      <td>3.15</td>\n","      <td>14.76</td>\n","      <td>79.49</td>\n","      <td>1.24</td>\n","      <td>112.68</td>\n","      <td>0.03</td>\n","      <td>0.00</td>\n","      <td>0.20</td>\n","      <td>0.65</td>\n","      <td>0.06</td>\n","      <td>0.04</td>\n","      <td>0.15</td>\n","      <td>0.07</td>\n","      <td>0.03</td>\n","      <td>0.00</td>\n","      <td>0.06</td>\n","      <td>0.05</td>\n","      <td>0.08</td>\n","      <td>0.05</td>\n","      <td>0.52</td>\n","      <td>0.10</td>\n","      <td>0.38</td>\n","      <td>1.83</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>16475848250.55</td>\n","      <td>8.39</td>\n","      <td>6.25</td>\n","      <td>7.36</td>\n","      <td>7.18</td>\n","      <td>1.84</td>\n","      <td>1.55</td>\n","      <td>4.62</td>\n","      <td>1.98</td>\n","      <td>5.36</td>\n","      <td>4.41</td>\n","      <td>7.04</td>\n","      <td>2.63</td>\n","      <td>8.30</td>\n","      <td>7.17</td>\n","      <td>10.91</td>\n","      <td>3.63</td>\n","      <td>6.63</td>\n","      <td>4.79</td>\n","      <td>0.85</td>\n","      <td>3.87</td>\n","      <td>7.15</td>\n","      <td>3.21</td>\n","      <td>1.22</td>\n","      <td>7.15</td>\n","      <td>3.75</td>\n","      <td>0.65</td>\n","      <td>361.50</td>\n","      <td>0.17</td>\n","      <td>0.05</td>\n","      <td>0.41</td>\n","      <td>0.58</td>\n","      <td>0.24</td>\n","      <td>0.21</td>\n","      <td>0.38</td>\n","      <td>0.27</td>\n","      <td>0.19</td>\n","      <td>0.05</td>\n","      <td>0.23</td>\n","      <td>0.23</td>\n","      <td>0.28</td>\n","      <td>0.24</td>\n","      <td>0.60</td>\n","      <td>0.34</td>\n","      <td>0.64</td>\n","      <td>1.27</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1001020100.00</td>\n","      <td>2.60</td>\n","      <td>2.00</td>\n","      <td>5.10</td>\n","      <td>9.40</td>\n","      <td>0.50</td>\n","      <td>5.60</td>\n","      <td>40.40</td>\n","      <td>0.40</td>\n","      <td>49.70</td>\n","      <td>48.00</td>\n","      <td>33.20</td>\n","      <td>0.70</td>\n","      <td>14.70</td>\n","      <td>11.20</td>\n","      <td>18.10</td>\n","      <td>0.60</td>\n","      <td>2.80</td>\n","      <td>6.20</td>\n","      <td>0.50</td>\n","      <td>46.70</td>\n","      <td>11.50</td>\n","      <td>2.30</td>\n","      <td>0.20</td>\n","      <td>2.50</td>\n","      <td>67.20</td>\n","      <td>1.00</td>\n","      <td>-5434.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>1.00</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>13039010401.25</td>\n","      <td>9.90</td>\n","      <td>19.40</td>\n","      <td>27.60</td>\n","      <td>69.60</td>\n","      <td>4.90</td>\n","      <td>9.00</td>\n","      <td>79.20</td>\n","      <td>4.80</td>\n","      <td>70.40</td>\n","      <td>83.40</td>\n","      <td>64.60</td>\n","      <td>4.90</td>\n","      <td>37.10</td>\n","      <td>31.90</td>\n","      <td>54.40</td>\n","      <td>8.40</td>\n","      <td>10.90</td>\n","      <td>29.10</td>\n","      <td>2.40</td>\n","      <td>73.40</td>\n","      <td>28.00</td>\n","      <td>8.40</td>\n","      <td>2.30</td>\n","      <td>9.40</td>\n","      <td>77.60</td>\n","      <td>1.00</td>\n","      <td>25.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>1.00</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>28047001350.00</td>\n","      <td>13.60</td>\n","      <td>23.80</td>\n","      <td>31.90</td>\n","      <td>74.20</td>\n","      <td>6.20</td>\n","      <td>9.80</td>\n","      <td>82.10</td>\n","      <td>6.00</td>\n","      <td>74.70</td>\n","      <td>86.10</td>\n","      <td>69.60</td>\n","      <td>6.40</td>\n","      <td>42.80</td>\n","      <td>36.70</td>\n","      <td>63.10</td>\n","      <td>10.20</td>\n","      <td>14.40</td>\n","      <td>32.10</td>\n","      <td>2.80</td>\n","      <td>75.90</td>\n","      <td>33.00</td>\n","      <td>10.30</td>\n","      <td>2.90</td>\n","      <td>13.40</td>\n","      <td>80.00</td>\n","      <td>1.00</td>\n","      <td>76.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>1.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>1.00</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>42003413950.75</td>\n","      <td>19.40</td>\n","      <td>28.10</td>\n","      <td>36.80</td>\n","      <td>77.40</td>\n","      <td>7.20</td>\n","      <td>10.80</td>\n","      <td>84.70</td>\n","      <td>7.40</td>\n","      <td>77.60</td>\n","      <td>88.50</td>\n","      <td>73.50</td>\n","      <td>8.40</td>\n","      <td>48.00</td>\n","      <td>41.70</td>\n","      <td>70.10</td>\n","      <td>12.60</td>\n","      <td>19.30</td>\n","      <td>35.00</td>\n","      <td>3.40</td>\n","      <td>78.60</td>\n","      <td>37.60</td>\n","      <td>12.60</td>\n","      <td>3.70</td>\n","      <td>18.60</td>\n","      <td>82.10</td>\n","      <td>1.00</td>\n","      <td>209.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>1.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>1.00</td>\n","      <td>0.00</td>\n","      <td>1.00</td>\n","      <td>2.00</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>72153750602.00</td>\n","      <td>64.90</td>\n","      <td>53.60</td>\n","      <td>72.30</td>\n","      <td>92.80</td>\n","      <td>20.00</td>\n","      <td>20.60</td>\n","      <td>91.60</td>\n","      <td>34.50</td>\n","      <td>90.80</td>\n","      <td>98.20</td>\n","      <td>88.00</td>\n","      <td>27.70</td>\n","      <td>67.20</td>\n","      <td>63.00</td>\n","      <td>85.80</td>\n","      <td>42.20</td>\n","      <td>53.60</td>\n","      <td>52.90</td>\n","      <td>14.40</td>\n","      <td>87.90</td>\n","      <td>63.90</td>\n","      <td>31.30</td>\n","      <td>20.50</td>\n","      <td>58.40</td>\n","      <td>87.10</td>\n","      <td>11.00</td>\n","      <td>5525.00</td>\n","      <td>3.00</td>\n","      <td>2.00</td>\n","      <td>2.00</td>\n","      <td>6.00</td>\n","      <td>2.00</td>\n","      <td>2.00</td>\n","      <td>3.00</td>\n","      <td>3.00</td>\n","      <td>2.00</td>\n","      <td>1.00</td>\n","      <td>2.00</td>\n","      <td>2.00</td>\n","      <td>2.00</td>\n","      <td>3.00</td>\n","      <td>7.00</td>\n","      <td>5.00</td>\n","      <td>8.00</td>\n","      <td>32.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff5c6e48-57f8-4bb0-ac68-7756a337b56d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ff5c6e48-57f8-4bb0-ac68-7756a337b56d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ff5c6e48-57f8-4bb0-ac68-7756a337b56d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c4fa2915-ca30-436f-8a40-89134b6e2824\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c4fa2915-ca30-436f-8a40-89134b6e2824')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c4fa2915-ca30-436f-8a40-89134b6e2824 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":90}]},{"cell_type":"code","source":["health.columns.to_list()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"stNEKV8peR5s","executionInfo":{"status":"ok","timestamp":1727191029063,"user_tz":300,"elapsed":185,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"3f1b92b8-205b-4f04-e139-652809a1aff7"},"execution_count":91,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['GEOID10',\n"," 'ACCESS2',\n"," 'ARTHRITIS',\n"," 'BPHIGH',\n"," 'BPMED',\n"," 'CANCER',\n"," 'CASTHMA',\n"," 'CERVICAL',\n"," 'CHD',\n"," 'CHECKUP',\n"," 'CHOLSCREEN',\n"," 'COLON_SCREEN',\n"," 'COPD',\n"," 'COREM',\n"," 'COREW',\n"," 'DENTAL',\n"," 'DIABETES',\n"," 'GHLTH',\n"," 'HIGHCHOL',\n"," 'KIDNEY',\n"," 'MAMMOUSE',\n"," 'OBESITY',\n"," 'PHLTH',\n"," 'STROKE',\n"," 'TEETHLOST',\n"," 'Life Expectancy',\n"," 'HospCount',\n"," 'TotalBeds',\n"," 'TYPE_CHILDREN',\n"," 'TYPE_CHRONIC DISEASE',\n"," 'TYPE_CRITICAL ACCESS',\n"," 'TYPE_GENERAL ACUTE CARE',\n"," 'TYPE_LONG TERM CARE',\n"," 'TYPE_MILITARY',\n"," 'TYPE_PSYCHIATRIC',\n"," 'TYPE_REHABILITATION',\n"," 'TYPE_SPECIAL',\n"," 'TYPE_WOMEN',\n"," 'OWNER_GOVERNMENT - DISTRICT/AUTHORITY',\n"," 'OWNER_GOVERNMENT - FEDERAL',\n"," 'OWNER_GOVERNMENT - LOCAL',\n"," 'OWNER_GOVERNMENT - STATE',\n"," 'OWNER_NON-PROFIT',\n"," 'OWNER_NOT AVAILABLE',\n"," 'OWNER_PROPRIETARY',\n"," 'RxCount']"]},"metadata":{},"execution_count":91}]}]}