{"cells":[{"cell_type":"markdown","metadata":{"id":"GUZfQbsoQH-Y"},"source":["# Making public business and economy file\n","## Sandra Tilmon\n","## 11/01/2023\n","\n","\n","#### Change log:\n","Date        Change\n"]},{"cell_type":"markdown","metadata":{"id":"yiWW2iv3QW-K"},"source":["# Setup"]},{"cell_type":"code","execution_count":19,"metadata":{"id":"4Tq7gpEVQaPr","executionInfo":{"status":"ok","timestamp":1726523216517,"user_tz":300,"elapsed":161,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","\n","# Utilities\n","import datetime\n","import math\n","import os\n","import re\n","import requests\n","from timeit import default_timer as timer\n","\n","# Viz\n","import matplotlib\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","# GIS\n","import geopandas as gpd\n","from shapely.geometry import Point, shape\n","import fiona\n","import geopy\n","from geopy.extra.rate_limiter import RateLimiter\n","from geopy import geocoders\n","from geopy.geocoders import GoogleV3\n","\n","pd.set_option('display.max_rows', None)\n","pd.set_option('display.max_columns', None)\n","pd.set_option('display.width', None)\n","\n","%matplotlib inline"]},{"cell_type":"code","execution_count":28,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":760,"status":"ok","timestamp":1726523525811,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"},"user_tz":300},"id":"XlLhWh5HPpOf","outputId":"02232310-019b-4d60-8721-bd9a933ccbe1"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/gdrive; to attempt to forcibly remount, call drive.mount(\"/content/gdrive\", force_remount=True).\n"]}],"source":["# Mount drive\n","\n","from google.colab import drive\n","drive.mount('/content/gdrive')"]},{"cell_type":"code","execution_count":29,"metadata":{"executionInfo":{"elapsed":163,"status":"ok","timestamp":1726523526588,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"},"user_tz":300},"id":"cRe762enQa9v"},"outputs":[],"source":["# Raw data sources\n","dir = '/content/gdrive/My Drive/Sociome_Folder/Data/'\n","\n","# Output curated datasets\n","curated = '/content/gdrive/My Drive/Sociome_Folder/Data Commons/Curated datasets/'"]},{"cell_type":"code","execution_count":55,"metadata":{"id":"Lk4jyvDDgjy4","executionInfo":{"status":"ok","timestamp":1726524755750,"user_tz":300,"elapsed":117,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"outputs":[],"source":["# Empty list for dataframes later\n","\n","frames = []"]},{"cell_type":"markdown","metadata":{"id":"Ihydkv9NnAnv"},"source":["# GIS"]},{"cell_type":"markdown","metadata":{"id":"i4PK2o_FmzZ2"},"source":["## Set CRS"]},{"cell_type":"code","execution_count":23,"metadata":{"id":"odMMv2GInCA5","executionInfo":{"status":"ok","timestamp":1726523223421,"user_tz":300,"elapsed":139,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"outputs":[],"source":["crs = {'init' :'epsg:3435'}"]},{"cell_type":"markdown","metadata":{"id":"P6lswaJDh8w4"},"source":["## Census tracts"]},{"cell_type":"code","source":["# Census tract shapefile\n","\n","r = requests.get(\"https://data.cityofchicago.org/resource/74p9-q2aq.json\")\n","r.raise_for_status()\n","\n","data = r.json()\n","for d in data:\n","    d['the_geom'] = shape(d['the_geom'])\n","\n","tracts_shp = gpd.GeoDataFrame(data).set_geometry('the_geom', crs=crs)\n","\n","tracts_shp = tracts_shp.drop(columns=['statefp10', 'countyfp10', 'tractce10',\t'name10', 'namelsad10',\n","                                      'notes', 'commarea_n'])\n","\n","tracts_shp.rename(columns={'geoid10' : 'GEOID10'}, inplace=True)\n","\n","tracts_shp['GEOID10'] = pd.to_numeric(tracts_shp['GEOID10'])"],"metadata":{"id":"E-cRKtM41sN-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Reload dataframe\n","\n","tractsdf = pd.read_csv(dir + \"1 Chicago datamart/tracts.csv\")\n","\n","frames.append('tractsdf')"],"metadata":{"id":"-HJcba8fjhjH","executionInfo":{"status":"ok","timestamp":1726524758360,"user_tz":300,"elapsed":117,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":56,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"0PuNV4ibm2RT"},"source":["## Functions"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yL8RTtxam3A7"},"outputs":[],"source":["# Lat/long coordinates to census tract\n","\n","def LatLongTract(infile, lat, long):\n","\n","  # establish lat/long point geometry\n","  geometry = [Point(xy) for xy in zip(infile[long], infile[lat])]\n","\n","  # Make a geo dataframe, set CRS\n","  gdf = gpd.GeoDataFrame(infile, geometry=geometry)\n","  gdf = gdf.set_crs(crs)\n","\n","  # Intersect lat/long points and census tract\n","  result=gpd.sjoin(gdf, tracts_shp, how='left', op='within')\n","\n","  result.drop(columns=['index_right'], inplace=True)\n","\n","  # Standardize census tract GEOID to uppercase throughout notebooks\n","  result.rename(columns={\"geoid10\" : \"GEOID10\"}, inplace=True)\n","  return(result)\n","\n","\n","\n","# One line street address to lat/long coordinates and census tract\n","\n","def AddLatLongTract(infile):\n","\n","  # Create \"oneline\" address in cleaning \"123 N Main Street Chicago, IL 60000\"\n","  # Field names vary so not bothering to include here\n","\n","  g = geocoders.GoogleV3(api_key='')\n","\n","  def Gv3_latlong (address):\n","      location = g.geocode(address)\n","      lat = location.latitude\n","      long = location.longitude\n","      # Perform additional steps to obtain census tract from coordinates\n","      # census_tract = get_census_tract_from_coordinates(latitude, longitude)\n","      return lat, long, location\n","\n","  infile[['lat', 'long', 'Location']] = infile['oneline'].apply(Gv3_latlong).apply(pd.Series)\n","\n","  # establish lat/long point geometry\n","  geometry = [Point(xy) for xy in zip(infile['long'], infile['lat'])]\n","\n","  # Make a geo dataframe, set CRS\n","  gdf = gpd.GeoDataFrame(infile, geometry=geometry)\n","  gdf = gdf.set_crs(crs)\n","\n","  # Intersect lat/long points and census tract\n","  result=gpd.sjoin(gdf, tracts_shp, how='left', op='within')\n","\n","  result.drop(columns=['index_right'], inplace=True)\n","\n","  # Standardize census tract GEOID10 to uppercase throughout notebooks\n","  result.rename(columns={\"geoid10\" : \"GEOID10\"}, inplace=True)\n","  return(result)"]},{"cell_type":"markdown","source":["# Import national file and limit to Chicago"],"metadata":{"id":"DlykrNbczdav"}},{"cell_type":"code","source":["# Reload\n","natl = pd.read_csv(curated + \"00050_Business_economy_transportation_national.csv\")\n","\n","natl = pd.merge(tractsdf, natl, on='GEOID10', how='left')\n","\n","frames.append('natl')"],"metadata":{"id":"zBUT2kBKzgAF","executionInfo":{"status":"ok","timestamp":1726524768952,"user_tz":300,"elapsed":800,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":57,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"34tgd5val4oj"},"source":["# 1 Chicago datamart"]},{"cell_type":"markdown","metadata":{"id":"Idl7HpUuj6JP"},"source":["## Business licenses - reload\n","\n","https://data.cityofchicago.org/Community-Economic-Development/Business-Licenses/r5kz-chrr"]},{"cell_type":"code","execution_count":32,"metadata":{"executionInfo":{"elapsed":26860,"status":"ok","timestamp":1726523569830,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"},"user_tz":300},"id":"J_R4P4jfSK7Z"},"outputs":[],"source":["raw = pd.read_csv(dir + '1 Chicago datamart/Business licenses/Business_Licenses_20231101.csv', dtype='string')\n","\n","raw = raw[raw.CITY=='CHICAGO']"]},{"cell_type":"code","execution_count":34,"metadata":{"id":"qQ5sm8y4UpWH","executionInfo":{"status":"ok","timestamp":1726523632007,"user_tz":300,"elapsed":149,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"outputs":[],"source":["lic = raw.drop(columns=['LICENSE STATUS CHANGE DATE'])\n","\n","cols = ['ADDRESS', 'CITY', 'STATE', 'ZIP CODE']\n","lic['one_line_address'] = lic[cols].apply(\n","    lambda row: ' '.join(row.values.astype(str)), axis=1)"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":2,"status":"aborted","timestamp":1726523628390,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"},"user_tz":300},"id":"QZtkHA9Gau-5"},"outputs":[],"source":["# Backup\n","\n","with open(dir + '1 Chicago datamart/Business licenses/Business_license_Chicago.csv', 'w') as f:\n","  lic.to_csv(f)"]},{"cell_type":"code","source":["# Reload\n","lic = pd.read_csv(dir + '1 Chicago datamart/Business licenses/Business_license_Chicago.csv',\n","                  dtype='string')"],"metadata":{"id":"C_mAANur1Au4","executionInfo":{"status":"ok","timestamp":1726523646150,"user_tz":300,"elapsed":138,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":36,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DJfP-PsaNK89"},"source":["### GIS"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7dxB1K5BaY5Q"},"outputs":[],"source":["# Has latitude/longitude\n","\n","temp1 = lic[~lic['LATITUDE'].isnull()]\n","temp1.drop(columns=['Unnamed: 0'], inplace=True)\n","cols = temp1.columns"]},{"cell_type":"markdown","source":["#### Geocode from address"],"metadata":{"id":"j4aAodeA0w0g"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"cqTLcix-Uz4B"},"outputs":[],"source":["# Doesn't have latitude/longitude\n","\n","temp = lic[lic.LATITUDE.isnull()]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2NUHMI0toXAK"},"outputs":[],"source":["start = timer()\n","\n","geolocator = geocoders.GoogleV3(api_key='')\n","\n","# 1 - convenient function to delay between geocoding calls\n","geocode = RateLimiter(geolocator.geocode, min_delay_seconds=1)\n","\n","# 2- - create location column\n","temp['Googlelocation'] = temp['one_line_address'].apply(geocode)\n","\n","# 3 - create longitude, laatitude and altitude from location column (returns tuple)\n","temp['Googlepoint'] = temp['Googlelocation'].apply(lambda loc: tuple(loc.point) if loc else None)\n","\n","# 4 - split point column into latitude, longitude and altitude columns\n","temp[['Latitude', 'Longitude', 'GoogleAlt']] = pd.DataFrame(temp['Googlepoint'].tolist(), index=temp.index)\n","\n","\n","end = timer()\n","print(end-start)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LxTqSHzLqvBb"},"outputs":[],"source":["# Backup geocoding\n","\n","with open(dir + '1 Chicago datamart/temp_geocode_backup.csv', 'w') as f:\n","  temp.to_csv(f)"]},{"cell_type":"code","source":["# Import backup\n","\n","temp2 = pd.read_csv(dir + '1 Chicago datamart/temp_geocode_backup.csv')"],"metadata":{"id":"3a5bRlmV1eQp","executionInfo":{"status":"ok","timestamp":1726523808943,"user_tz":300,"elapsed":154,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Za095dxIbJdu"},"outputs":[],"source":["# Merge back (stack)\n","\n","lic2 = pd.concat([temp1, temp2], keys=['ID'])\n","lic2.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4K52UUIZbXAz"},"outputs":[],"source":["lic_shp = gpd.GeoDataFrame(lic2,\n","                           geometry=gpd.points_from_xy(lic2.LONGITUDE, lic2.LATITUDE),\n","                           crs=crs)\n","\n","lic_shp.crs"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CX-fM1aM9Tq5"},"outputs":[],"source":["merge1 = gpd.sjoin(lic_shp, tracts_shp, how='left', predicate='within')\n","merge1 = merge1.drop(columns=['index_right'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AnGVIxFW9iPU"},"outputs":[],"source":["# Remove geometry, keep census tract\n","\n","merge2 = pd.DataFrame(merge1)\n","\n","merge2 = merge2.drop(columns=['geometry'])\n","\n","# Standardize uppercase for census tract\n","merge2.rename(columns={'geoid10': 'GEOID10'}, inplace=True)"]},{"cell_type":"markdown","metadata":{"id":"ve4YUqhi--IP"},"source":["### Categorize"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KSwuGScbNGys"},"outputs":[],"source":["merge2['Hazardous'] = merge2['LICENSE DESCRIPTION'].str.contains(\n","    'hazardous',  case=False, regex=True).astype(int)\n","\n","merge2['Manufacturing'] =merge2['LICENSE DESCRIPTION'].str.contains(\n","    'manufacturing', case=False, regex=True).astype(int)\n","\n","merge2['Chemical'] =merge2['LICENSE DESCRIPTION'].str.contains(\n","    'chem', case=False, regex=True).astype(int)\n","\n","merge2['Factory'] =merge2['LICENSE DESCRIPTION'].str.contains(\n","    'Factory', case=False, regex=True).astype(int)\n","\n","merge2['Plastic'] =merge2['LICENSE DESCRIPTION'].str.contains(\n","    'plastic', case=False, regex=True).astype(int)\n","\n","merge2['Administrative'] =merge2['LICENSE DESCRIPTION'].str.contains(\n","    'admin', case=False, regex=True).astype(int)\n","\n","merge2['Metal'] =merge2['LICENSE DESCRIPTION'].str.contains(\n","    'metal', case=False, regex=True).astype(int)\n","\n","merge2['ETOH'] =merge2['LICENSE DESCRIPTION'].str.contains(\n","    'alcohol|tavern|liquor', case=False, regex=True).astype(int)\n","\n","merge2['Childcare'] =merge2['LICENSE DESCRIPTION'].str.contains(\n","    'Children|day care', case=False, regex=True).astype(int)"]},{"cell_type":"markdown","metadata":{"id":"yf3QNypemnIU"},"source":["### Summarize by tract"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pZPshnkvQVQ6"},"outputs":[],"source":["# To get number of businesses overall, sum 'Count'\n","merge2['Count'] = 1\n","\n","bizagg = merge2.groupby('GEOID10')[['Count', 'Manufacturing', 'Hazardous', 'ETOH',\n","                                    'Childcare']].sum().reset_index()"]},{"cell_type":"markdown","metadata":{"id":"9WGGZ1eJDHg6"},"source":["### Export and reload"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9Cv2Bn3MleRA"},"outputs":[],"source":["# Line listing\n","merge2.drop(columns=['Count'], inplace=True)\n","with open(dir + '1 Chicago datamart/Business licenses/Chicago_business_lic_tract.csv', 'w') as f:\n","  merge2.to_csv(f)\n","\n","# Aggregate by tract counts\n","with open(dir + '1 Chicago datamart/Business licenses/Chicago_bus_lic_tract_agg.csv', 'w') as f:\n","  bizagg.to_csv(f)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2UlylfDGyhEq"},"outputs":[],"source":["# Reload line\n","lic = pd.read_csv(dir + '1 Chicago datamart/Business licenses/Chicago_business_lic_tract.csv',\n","                  dtype='string')"]},{"cell_type":"code","execution_count":58,"metadata":{"id":"ErXkuldXbkwX","executionInfo":{"status":"ok","timestamp":1726524796521,"user_tz":300,"elapsed":102,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"outputs":[],"source":["# Reload census tract counts\n","licagg = pd.read_csv(dir + '1 Chicago datamart/Business licenses/Chicago_bus_lic_tract_agg.csv',\n","                     dtype='string')\n","\n","# Hazardous licenses are in pollution and environment\n","licagg.drop(columns=['Unnamed: 0', 'Hazardous'], inplace=True)\n","licagg = licagg.rename(columns={'Count': 'BusLicCount', 'Manufacturing': 'MfgLicCount',\n","                                'ETOH': 'ETOHLicCount', 'Childcare':'ChildcareLicCount'})\n","\n","frames.append('licagg')"]},{"cell_type":"markdown","metadata":{"id":"GeOwY9U81aLz"},"source":["## Building permits - reload\n","\n","https://data.cityofchicago.org/widgets/ydr8-5enu?mobile_redirect=true"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3DjH123j1Zkf"},"outputs":[],"source":["raw = pd.read_csv(dir + '1 Chicago datamart/Building_Permits_raw.csv')\n","\n","raw['year'] = pd.to_numeric(raw['Data Year'])"]},{"cell_type":"markdown","metadata":{"id":"bmnSINeuFkD-"},"source":["### GIS\n","\n","def LatLongTract(infile, lat, long):"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GTHXiCOpFlij"},"outputs":[],"source":["permits = LatLongTract(raw, \"Latitude\", \"Longitude\")"]},{"cell_type":"markdown","metadata":{"id":"S4zX-Kt1GGPw"},"source":["### Summarize by tract"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"d3ZjwPiFFYBS"},"outputs":[],"source":["permits_tract = permits.groupby(['GEOID10']).size().to_frame(\n","    \"BldgPermitsN\").reset_index()\n","\n","permits_tractYr = permits.groupby(['GEOID10', 'year']).size().to_frame(\n","    \"BldgPermitsN\").reset_index()\n","\n","permits_tractYrMo = permits.groupby(\n","    ['GEOID10', 'year', 'month']).size().to_frame(\n","        \"BldgPermitsN\").reset_index()"]},{"cell_type":"markdown","metadata":{"id":"kKfvtUh1Fvre"},"source":["### Export and reload"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Fh30gXaZFxPu"},"outputs":[],"source":["# Export line listing\n","with open(dir + '1 Chicago datamart/Business_permits_line.csv', 'w') as f:\n","  permits.to_csv(f)\n","\n","# Export tract summary\n","with open(dir + '1 Chicago datamart/Business_permits_tract.csv', 'w') as f:\n","  permits_tract.to_csv(f)\n","\n","# Export tract year summary\n","with open(dir + '1 Chicago datamart/Business_permits_tractYr.csv', 'w') as f:\n","  permits_tractYr.to_csv(f)\n","\n","# Export tract year summary\n","with open(dir + '1 Chicago datamart/Business_permits_tractYrMo.csv', 'w') as f:\n","  permits_tractYrMo.to_csv(f)"]},{"cell_type":"code","execution_count":59,"metadata":{"id":"vU3INtxYFyAm","executionInfo":{"status":"ok","timestamp":1726524803735,"user_tz":300,"elapsed":120,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"outputs":[],"source":["# Reload tract summary\n","\n","permits = pd.read_csv(dir + '1 Chicago datamart/Business_permits_tract.csv',\n","                     dtype='string')\n","permits.drop(columns=['Unnamed: 0'],  inplace=True)\n","\n","frames.append('permits')"]},{"cell_type":"markdown","metadata":{"id":"eJS9MJ-Z1Oae"},"source":["## Energy use - reload\n","\n","https://www.chicago.gov/city/en/depts/mayor/supp_info/chicago-energy-benchmarking/Chicago_Energy_Benchmarking_Reports_Data.html\n","\n","https://data.cityofchicago.org/resource/jn94-it7m"]},{"cell_type":"code","execution_count":46,"metadata":{"executionInfo":{"elapsed":116,"status":"ok","timestamp":1726524115817,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"},"user_tz":300},"id":"RCJuI6Au1Qly"},"outputs":[],"source":["raw = pd.read_csv(dir +\n","                  '1 Chicago datamart/Chicago_Energy_Benchmarking_-_2019_Data_Reported_in_2020.csv')"]},{"cell_type":"markdown","source":["## GIS\n","\n","def LatLongTract(infile, lat, long):"],"metadata":{"id":"gTYrCl-m2wp5"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"P7YnN_9H1Zex"},"outputs":[],"source":["energy = LatLongTract(raw, \"Latitude\", \"Longitude\")"]},{"cell_type":"markdown","metadata":{"id":"kwEbMwzyJKrr"},"source":["### Summarize by tract"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QHOQx73SJK_l"},"outputs":[],"source":["size = energy.groupby(['GEOID10']).size().to_frame(\"EnergyCount\").reset_index()\n","\n","avg = energy.groupby(['GEOID10'])['Chicago Energy Rating'].mean().to_frame(\"AvgEnergyRating\").reset_index()\n","\n","energy_tract = pd.merge(size, avg, on='GEOID10')"]},{"cell_type":"markdown","metadata":{"id":"MOohgWDUJLHg"},"source":["### Export and reload"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vGbxQ0IlJLPE"},"outputs":[],"source":["# Export line listing\n","with open(dir + '1 Chicago datamart/Chicago_energy_line.csv', 'w') as f:\n","  energy.to_csv(f)\n","\n","# Export tract summary\n","with open(dir + '1 Chicago datamart/Chicago_energy_tract.csv', 'w') as f:\n","  energy_tract.to_csv(f)"]},{"cell_type":"code","execution_count":60,"metadata":{"executionInfo":{"elapsed":118,"status":"ok","timestamp":1726524807651,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"},"user_tz":300},"id":"nBkzP2otJTbR"},"outputs":[],"source":["# Reload tract summary\n","\n","energy = pd.read_csv(dir + '1 Chicago datamart/Chicago_energy_tract.csv')\n","energy.drop(columns=['Unnamed: 0'],  inplace=True)\n","\n","frames.append('energy')"]},{"cell_type":"markdown","metadata":{"id":"mLIJHZ418Qd1"},"source":["## Grocery stores - reload\n","\n","https://data.cityofchicago.org/Health-Human-Services/Grocery-Store-Status/3e26-zek2"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"U9i8NQdi1Zuq"},"outputs":[],"source":["grocery_store_api = 'https://data.cityofchicago.org/resource/3e26-zek2.json'\n","grocery_store = pd.read_json(grocery_store_api)"]},{"cell_type":"markdown","metadata":{"id":"d5Jea9-1NnqU"},"source":["### GIS"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GSpEAGbhNM9h"},"outputs":[],"source":["# Extract latitude and longitude\n","\n","grocery_store['latitude'] = grocery_store['location'].apply(\n","    lambda x: x['coordinates'][1] if pd.notnull(x) else np.nan)\n","grocery_store['longitude'] = grocery_store['location'].apply(\n","    lambda x: x['coordinates'][0] if pd.notnull(x) else np.nan)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xxHzdXWwNopd"},"outputs":[],"source":["groceries = LatLongTract(grocery_store, \"latitude\", \"longitude\")"]},{"cell_type":"markdown","metadata":{"id":"8hanV5HwNo0K"},"source":["### Summarize by tract"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3HWv3BYuNqOQ"},"outputs":[],"source":["grocery_tract = groceries.groupby(['GEOID10']).size().to_frame(\"GroceryCount\").reset_index()"]},{"cell_type":"markdown","metadata":{"id":"uYOH0SgpNqdQ"},"source":["### Export and reload"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"brYnyOR3Nr6C"},"outputs":[],"source":["# Export line listing\n","with open(dir + '1 Chicago datamart/Chicago_grocery_line.csv', 'w') as f:\n","  groceries.to_csv(f)\n","\n","# Export tract summary\n","with open(dir + '1 Chicago datamart/Chicago_grocery_tract.csv', 'w') as f:\n","  grocery_tract.to_csv(f)"]},{"cell_type":"code","execution_count":61,"metadata":{"executionInfo":{"elapsed":120,"status":"ok","timestamp":1726524810859,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"},"user_tz":300},"id":"3e3vb2XaOTPZ"},"outputs":[],"source":["# Reload tract summary\n","\n","groceries = pd.read_csv(dir + '1 Chicago datamart/Chicago_grocery_tract.csv')\n","groceries.drop(columns=['Unnamed: 0'],  inplace=True)\n","\n","frames.append('groceries')"]},{"cell_type":"markdown","metadata":{"id":"xL5YrwxwmhS9"},"source":["# Merge economy data"]},{"cell_type":"code","source":["frames"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lmr6P4br5e_N","executionInfo":{"status":"ok","timestamp":1726524815046,"user_tz":300,"elapsed":164,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"3f05b43f-a75b-4e74-e35a-8b99948645ce"},"execution_count":62,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['tractsdf', 'natl', 'licagg', 'permits', 'energy', 'groceries']"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","execution_count":63,"metadata":{"executionInfo":{"elapsed":118,"status":"ok","timestamp":1726524823679,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"},"user_tz":300},"id":"IkD2UhHFfa1T"},"outputs":[],"source":["tractsdf['GEOID10'] = pd.to_numeric(tractsdf['GEOID10'], errors='coerce')\n","\n","# Convert 'GEOID10' in all DataFrames to uppercase and numeric\n","for df_name in frames:\n","  # Convert 'GEOID10' to uppercase and numeric\n","  globals()[df_name]['GEOID10'] = globals()[df_name]['GEOID10'].astype(str).str.upper()\n","  # tractsdf['GEOID10'] = tractsdf['GEOID10'].astype(str).str.upper()\n","  globals()[df_name]['GEOID10'] = pd.to_numeric(globals()[df_name]['GEOID10'], errors='coerce')"]},{"cell_type":"code","execution_count":64,"metadata":{"executionInfo":{"elapsed":110,"status":"ok","timestamp":1726524838264,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"},"user_tz":300},"id":"M4E5offNfa7z"},"outputs":[],"source":["# Merge all DataFrames on 'GEOID10'\n","\n","merged_df = tractsdf\n","\n","for df_name in frames:\n","    if df_name != 'tractsdf':\n","        merged_df = pd.merge(merged_df, globals()[df_name], on='GEOID10', how='left')"]},{"cell_type":"markdown","source":["# Data check"],"metadata":{"id":"7S_2OsKHlZ7Q"}},{"cell_type":"markdown","source":["## Remove columns which are completely missing"],"metadata":{"id":"q6nwh09Fg6Ht"}},{"cell_type":"code","source":["# Drop columns with all missing values\n","merged_df = merged_df.dropna(axis=1, how='all')"],"metadata":{"id":"ha4O-Nrlg8Xn","executionInfo":{"status":"ok","timestamp":1726524927377,"user_tz":300,"elapsed":116,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":69,"outputs":[]},{"cell_type":"markdown","source":["## Identify constants"],"metadata":{"id":"v-zeLPj7leiz"}},{"cell_type":"code","source":["merged_df[['HUDEnterpriseComm', 'HUDEnterpriseZone']] = merged_df[\n","    ['HUDEnterpriseComm', 'HUDEnterpriseZone']].fillna(0)"],"metadata":{"id":"ZfDjpMWu5_BO","executionInfo":{"status":"ok","timestamp":1726524999530,"user_tz":300,"elapsed":111,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":74,"outputs":[]},{"cell_type":"code","source":["constant_columns = [col for col in merged_df.columns if merged_df[col].nunique() == 1]\n","\n","# Inspect\n","for col in constant_columns:\n","    print(f\"Value counts for {col}:\")\n","    print(merged_df[col].value_counts(dropna=False))\n","    print(\"\\n\")  # Add a new line"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vi5LTv79lgK8","executionInfo":{"status":"ok","timestamp":1726525001763,"user_tz":300,"elapsed":132,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"18aca41b-8c9c-49b3-b2f0-86f210a17f26"},"execution_count":75,"outputs":[{"output_type":"stream","name":"stdout","text":["Value counts for Agri_loss_ge90pct_lowinc:\n","Agri_loss_ge90pct_lowinc\n","False    801\n","Name: count, dtype: int64\n","\n","\n","Value counts for HUDEnterpriseComm:\n","HUDEnterpriseComm\n","0.0    801\n","Name: count, dtype: int64\n","\n","\n","Value counts for HUDEnterpriseZone:\n","HUDEnterpriseZone\n","0.0    801\n","Name: count, dtype: int64\n","\n","\n"]}]},{"cell_type":"markdown","source":["### Drop"],"metadata":{"id":"IH_zB7IkfwtM"}},{"cell_type":"code","source":["# Drop constants\n","merged_df.drop(columns=constant_columns, inplace=True)"],"metadata":{"id":"to920i9nfxpy","executionInfo":{"status":"ok","timestamp":1726525012797,"user_tz":300,"elapsed":108,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":76,"outputs":[]},{"cell_type":"markdown","source":["## Identify duplicated information across variables"],"metadata":{"id":"MFqhwB1Algqx"}},{"cell_type":"code","source":["from itertools import combinations\n","\n","# Get all pairs of columns\n","column_pairs = combinations(merged_df.columns, 2)\n","\n","# Find pairs of columns that are identical\n","identical_pairs = [(col1, col2) for col1, col2 in column_pairs if merged_df[col1].equals(merged_df[col2])]\n","\n","# Display the identical pairs\n","identical_pairs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LTH9tFUmljvV","executionInfo":{"status":"ok","timestamp":1726525023670,"user_tz":300,"elapsed":444,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"c657c75b-3681-472b-9496-975bcdf7903b"},"execution_count":77,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('autos_per_hh', 'autos_per_hh.1')]"]},"metadata":{},"execution_count":77}]},{"cell_type":"code","source":["merged_df.drop(columns=['autos_per_hh.1'], inplace=True)"],"metadata":{"id":"O3fW8mA_gR5O","executionInfo":{"status":"ok","timestamp":1726525034270,"user_tz":300,"elapsed":163,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"execution_count":78,"outputs":[]},{"cell_type":"markdown","source":["## Duplicated tract rows?"],"metadata":{"id":"IsXucqx2PDTd"}},{"cell_type":"code","source":["len(merged_df['GEOID10'])-len(merged_df['GEOID10'].drop_duplicates())"],"metadata":{"id":"_snV4IEcPGkh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1726525049303,"user_tz":300,"elapsed":171,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"8d72f3b8-1f02-4ccd-b3a0-64458ab6e74b"},"execution_count":80,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":80}]},{"cell_type":"markdown","metadata":{"id":"daWSYXA9cbJO"},"source":["## Export and reload"]},{"cell_type":"code","execution_count":81,"metadata":{"id":"zQe9ClHIccUO","executionInfo":{"status":"ok","timestamp":1726525052729,"user_tz":300,"elapsed":128,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}}},"outputs":[],"source":["with open(curated +  '00051_Business_economy_transportation_Chicago.csv', 'w') as f:\n","  merged_df.to_csv(f)"]},{"cell_type":"code","execution_count":82,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"executionInfo":{"elapsed":119,"status":"ok","timestamp":1726525056689,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"},"user_tz":300},"id":"zKOVzxG1cj1F","outputId":"f0311717-d187-447d-ee0f-ee01cd56c1df"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       GEOID10  DOT_travel_barr_pctile  DOT_travel_barr_ge90pct_lowinc  Agri_loss_rate  \\\n","0  17031842400                    62.0                           False             0.0   \n","1  17031840300                    59.0                           False             0.0   \n","2  17031841100                    23.0                           False             0.0   \n","3  17031841200                    38.0                           False             0.0   \n","4  17031839000                    29.0                           False             0.0   \n","\n","   Agri_loss_rate_pctile  HUDQualCenTract  HUDEmpowerZone  HUDRenewalComm  jobs_idx  LBR_IDX  \\\n","0                    NaN              1.0             NaN             NaN      14.0     18.0   \n","1                    NaN              1.0             NaN             NaN      87.0     24.0   \n","2                    NaN              1.0             NaN             NaN      97.5     34.0   \n","3                    NaN              1.0             NaN             NaN      94.0     24.0   \n","4                    NaN              0.0             NaN             NaN      99.0     99.0   \n","\n","   pct_transit_j2w_renters  pct_transit_j2w_owners  pct_transit_j2w  autos_per_hh  \\\n","0                68.321513               27.629734        40.412155      0.991318   \n","1                36.121673               36.540330        36.388294      1.384411   \n","2                13.615023               10.734824        12.393578      0.758788   \n","3                39.420804               18.095238        34.413022      1.005518   \n","4                37.073609               18.367347        29.790010      0.682109   \n","\n","   autos_per_hh_renters  autos_per_hh_owner  commuters_per_hh_renters  commuters_per_hh_owners  \\\n","0              0.414573            1.255466                  1.062814                 0.820483   \n","1              1.129268            1.529903                  1.282927                 1.431154   \n","2              0.527273            1.073192                  0.968182                 1.380071   \n","3              0.810897            1.639687                  1.355769                 1.370757   \n","4              0.567919            0.861190                  1.207370                 1.221530   \n","\n","   commuters_per_hh  median_commute  job_density_simple  retail_density_simple   job_gravity  \\\n","0          0.896606            9.56            4.121720               3.137030   36806.20008   \n","1          1.377325            6.87            3.044021               0.438339   95472.26968   \n","2          1.142857            8.40           12.473672               1.303868  223925.83890   \n","3          1.359289            6.37            3.966580               0.407658  133042.41040   \n","4          1.212883            7.27           16.272638               3.682799  622944.94450   \n","\n","   retail_gravity  TCOST_IDX  BusLicCount  MfgLicCount  ETOHLicCount  ChildcareLicCount  \\\n","0     5533.805618       81.0       2111.0         29.0          16.0               17.0   \n","1     7746.088136       89.0       1094.0         10.0          15.0                0.0   \n","2     9710.556540       95.0       5318.0          6.0          36.0               56.0   \n","3     8461.624462       94.0       1914.0         95.0          26.0                8.0   \n","4    19536.675260       98.0       2869.0         19.0          57.0               42.0   \n","\n","   BldgPermitsN  EnergyCount  AvgEnergyRating  GroceryCount  \n","0          1630          9.0         0.812500           3.0  \n","1           888          1.0         0.000000           1.0  \n","2          1456         12.0         2.318182           2.0  \n","3           983          1.0         0.000000           1.0  \n","4          2084         18.0         1.750000           1.0  "],"text/html":["\n","  <div id=\"df-8b61fb3e-4430-4a66-9b84-9f7597906c2f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>GEOID10</th>\n","      <th>DOT_travel_barr_pctile</th>\n","      <th>DOT_travel_barr_ge90pct_lowinc</th>\n","      <th>Agri_loss_rate</th>\n","      <th>Agri_loss_rate_pctile</th>\n","      <th>HUDQualCenTract</th>\n","      <th>HUDEmpowerZone</th>\n","      <th>HUDRenewalComm</th>\n","      <th>jobs_idx</th>\n","      <th>LBR_IDX</th>\n","      <th>pct_transit_j2w_renters</th>\n","      <th>pct_transit_j2w_owners</th>\n","      <th>pct_transit_j2w</th>\n","      <th>autos_per_hh</th>\n","      <th>autos_per_hh_renters</th>\n","      <th>autos_per_hh_owner</th>\n","      <th>commuters_per_hh_renters</th>\n","      <th>commuters_per_hh_owners</th>\n","      <th>commuters_per_hh</th>\n","      <th>median_commute</th>\n","      <th>job_density_simple</th>\n","      <th>retail_density_simple</th>\n","      <th>job_gravity</th>\n","      <th>retail_gravity</th>\n","      <th>TCOST_IDX</th>\n","      <th>BusLicCount</th>\n","      <th>MfgLicCount</th>\n","      <th>ETOHLicCount</th>\n","      <th>ChildcareLicCount</th>\n","      <th>BldgPermitsN</th>\n","      <th>EnergyCount</th>\n","      <th>AvgEnergyRating</th>\n","      <th>GroceryCount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>17031842400</td>\n","      <td>62.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>14.0</td>\n","      <td>18.0</td>\n","      <td>68.321513</td>\n","      <td>27.629734</td>\n","      <td>40.412155</td>\n","      <td>0.991318</td>\n","      <td>0.414573</td>\n","      <td>1.255466</td>\n","      <td>1.062814</td>\n","      <td>0.820483</td>\n","      <td>0.896606</td>\n","      <td>9.56</td>\n","      <td>4.121720</td>\n","      <td>3.137030</td>\n","      <td>36806.20008</td>\n","      <td>5533.805618</td>\n","      <td>81.0</td>\n","      <td>2111.0</td>\n","      <td>29.0</td>\n","      <td>16.0</td>\n","      <td>17.0</td>\n","      <td>1630</td>\n","      <td>9.0</td>\n","      <td>0.812500</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>17031840300</td>\n","      <td>59.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>87.0</td>\n","      <td>24.0</td>\n","      <td>36.121673</td>\n","      <td>36.540330</td>\n","      <td>36.388294</td>\n","      <td>1.384411</td>\n","      <td>1.129268</td>\n","      <td>1.529903</td>\n","      <td>1.282927</td>\n","      <td>1.431154</td>\n","      <td>1.377325</td>\n","      <td>6.87</td>\n","      <td>3.044021</td>\n","      <td>0.438339</td>\n","      <td>95472.26968</td>\n","      <td>7746.088136</td>\n","      <td>89.0</td>\n","      <td>1094.0</td>\n","      <td>10.0</td>\n","      <td>15.0</td>\n","      <td>0.0</td>\n","      <td>888</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>17031841100</td>\n","      <td>23.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>97.5</td>\n","      <td>34.0</td>\n","      <td>13.615023</td>\n","      <td>10.734824</td>\n","      <td>12.393578</td>\n","      <td>0.758788</td>\n","      <td>0.527273</td>\n","      <td>1.073192</td>\n","      <td>0.968182</td>\n","      <td>1.380071</td>\n","      <td>1.142857</td>\n","      <td>8.40</td>\n","      <td>12.473672</td>\n","      <td>1.303868</td>\n","      <td>223925.83890</td>\n","      <td>9710.556540</td>\n","      <td>95.0</td>\n","      <td>5318.0</td>\n","      <td>6.0</td>\n","      <td>36.0</td>\n","      <td>56.0</td>\n","      <td>1456</td>\n","      <td>12.0</td>\n","      <td>2.318182</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>17031841200</td>\n","      <td>38.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>94.0</td>\n","      <td>24.0</td>\n","      <td>39.420804</td>\n","      <td>18.095238</td>\n","      <td>34.413022</td>\n","      <td>1.005518</td>\n","      <td>0.810897</td>\n","      <td>1.639687</td>\n","      <td>1.355769</td>\n","      <td>1.370757</td>\n","      <td>1.359289</td>\n","      <td>6.37</td>\n","      <td>3.966580</td>\n","      <td>0.407658</td>\n","      <td>133042.41040</td>\n","      <td>8461.624462</td>\n","      <td>94.0</td>\n","      <td>1914.0</td>\n","      <td>95.0</td>\n","      <td>26.0</td>\n","      <td>8.0</td>\n","      <td>983</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>17031839000</td>\n","      <td>29.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>99.0</td>\n","      <td>99.0</td>\n","      <td>37.073609</td>\n","      <td>18.367347</td>\n","      <td>29.790010</td>\n","      <td>0.682109</td>\n","      <td>0.567919</td>\n","      <td>0.861190</td>\n","      <td>1.207370</td>\n","      <td>1.221530</td>\n","      <td>1.212883</td>\n","      <td>7.27</td>\n","      <td>16.272638</td>\n","      <td>3.682799</td>\n","      <td>622944.94450</td>\n","      <td>19536.675260</td>\n","      <td>98.0</td>\n","      <td>2869.0</td>\n","      <td>19.0</td>\n","      <td>57.0</td>\n","      <td>42.0</td>\n","      <td>2084</td>\n","      <td>18.0</td>\n","      <td>1.750000</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b61fb3e-4430-4a66-9b84-9f7597906c2f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8b61fb3e-4430-4a66-9b84-9f7597906c2f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8b61fb3e-4430-4a66-9b84-9f7597906c2f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7afcd02e-560e-42da-a85e-030a9fb81e28\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7afcd02e-560e-42da-a85e-030a9fb81e28')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7afcd02e-560e-42da-a85e-030a9fb81e28 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"biz"}},"metadata":{},"execution_count":82}],"source":["biz = pd.read_csv(curated +  '00051_Business_economy_transportation_Chicago.csv')\n","biz=biz[biz.columns.drop(list(biz.filter(regex='Unnamed')))]\n","biz.head()"]}],"metadata":{"colab":{"collapsed_sections":["0PuNV4ibm2RT","GeOwY9U81aLz"],"provenance":[{"file_id":"19ijH9TAKV4y69TUZRz4RNdIMGBd7C6Cb","timestamp":1698854412395},{"file_id":"1ZW6tMQc3rYNaGqTCG7-Y_KbR_ml3b8zY","timestamp":1681152703009}],"toc_visible":true},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}