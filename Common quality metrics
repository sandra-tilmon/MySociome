{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyPxgJz6mdm1/whJRFd63oSQ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Sociome quality matrics\n","## Sandra Tilmon\n","## 11/18/2023\n","\n","Common definitions https://docs.google.com/document/d/10dE6AEBkwXiJxrU3KOXB3Pcts2kICS1BwL__5Z5IFgg/edit?usp=sharing\n","\n","* Outliers\n","\n","* Various error types\n","\n","* For probability samples: Look at margins of error\n","\n","Date Change\n"],"metadata":{"id":"Y3KSLf1G6q9h"}},{"cell_type":"markdown","source":["# Setup"],"metadata":{"id":"FL7UScVC4jEp"}},{"cell_type":"code","source":[],"metadata":{"id":"LGYzCvWjFG5q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"CaPBT08a7OWq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"eh89voG17Oed"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Data check"],"metadata":{"id":"7S_2OsKHlZ7Q"}},{"cell_type":"markdown","source":["## Identify constants"],"metadata":{"id":"v-zeLPj7leiz"}},{"cell_type":"code","source":["constant_columns = [col for col in env.columns if env[col].nunique() == 1]\n","\n","constant_columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vi5LTv79lgK8","executionInfo":{"status":"ok","timestamp":1725022997293,"user_tz":300,"elapsed":525,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"7bd990c0-abe1-45dd-88f8-23e5ff6a5bbe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Aband_mine_ge1',\n"," 'barren_land _rock_sand_clay',\n"," 'mixed_forest',\n"," 'grassland_herbaceous',\n"," 'pasture_hay',\n"," 'woody_wetlands']"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["# env['Aband_mine_ge1'].value_counts(dropna=False)\n","# env['barren_land _rock_sand_clay'].value_counts(dropna=False)\n","# env['mixed_forest'].value_counts(dropna=False)\n","# env['grassland_herbaceous'].value_counts(dropna=False)\n","# env['pasture_hay'].value_counts(dropna=False)\n","env['woody_wetlands'].value_counts(dropna=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"Homqzt-4l2H5","executionInfo":{"status":"ok","timestamp":1725023112345,"user_tz":300,"elapsed":170,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"49295d7a-0931-451a-d72b-ccbf84362eb5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["woody_wetlands\n","NaN     100799\n","0.01         1\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>woody_wetlands</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>NaN</th>\n","      <td>100799</td>\n","    </tr>\n","    <tr>\n","      <th>0.01</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":40}]},{"cell_type":"markdown","source":["For all of the above: there are no False values, only NULLs. Keep the variables"],"metadata":{"id":"eDxehAiOmEdp"}},{"cell_type":"markdown","source":["## Identify duplicated information across variables"],"metadata":{"id":"MFqhwB1Algqx"}},{"cell_type":"code","source":["from itertools import combinations\n","\n","# Get all pairs of columns\n","column_pairs = combinations(env.columns, 2)\n","\n","# Find pairs of columns that are identical\n","identical_pairs = [(col1, col2) for col1, col2 in column_pairs if env[col1].equals(env[col2])]\n","\n","# Display the identical pairs\n","identical_pairs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LTH9tFUmljvV","executionInfo":{"status":"ok","timestamp":1725023137383,"user_tz":300,"elapsed":2937,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"bb5b14ba-784d-4d73-840c-546bc4cd5332"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('perennial_ice_snow', 'shrub_scrub'),\n"," ('perennial_ice_snow', 'cultivated_crops'),\n"," ('perennial_ice_snow', 'emergent_herbaceous_wetlands'),\n"," ('shrub_scrub', 'cultivated_crops'),\n"," ('shrub_scrub', 'emergent_herbaceous_wetlands'),\n"," ('cultivated_crops', 'emergent_herbaceous_wetlands')]"]},"metadata":{},"execution_count":41}]},{"cell_type":"markdown","source":["## Duplicated tract rows?"],"metadata":{"id":"IsXucqx2PDTd"}},{"cell_type":"code","source":["len(env['GEOID10'])-len(env['GEOID10'].drop_duplicates())"],"metadata":{"id":"_snV4IEcPGkh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1725023838369,"user_tz":300,"elapsed":10,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"61153c59-4ab3-4de0-b95f-f97646dcb03e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":101}]}]}