{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Making public weather file\n","## Sandra Tilmon\n","## 1/5/2024\n","\n","\n","#### Change log:\n","\n","Date        Change\n","\n","\n"],"metadata":{"id":"dV8AcmrND7pL"}},{"cell_type":"markdown","source":["# Setup"],"metadata":{"id":"W0Wed-MkEKwM"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","import datetime\n","import math\n","\n","import os\n","import re\n","\n","import ast\n","import json\n","import requests\n","\n","import matplotlib\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","import geopandas as gpd\n","from shapely import geometry\n","from shapely.geometry import Point, shape\n","from geopy import geocoders\n","from geopy.geocoders import GoogleV3\n","\n","from timeit import default_timer as timer\n","\n","pd.set_option('display.max_rows', None)\n","pd.set_option('display.max_columns', None)\n","pd.set_option('display.width', None)\n","\n","pd.options.display.float_format = '{:.2f}'.format\n","\n","%matplotlib inline"],"metadata":{"id":"LoUUqLv6ETlj","executionInfo":{"status":"ok","timestamp":1724774732350,"user_tz":300,"elapsed":5434,"user":{"displayName":"Sandra Tilmon","userId":"11194268644278609483"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["# Mount drive\n","\n","from google.colab import drive\n","drive.mount('/content/gdrive')"],"metadata":{"id":"UKuvbpVLEWGL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718639963690,"user_tz":300,"elapsed":21101,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"41f56e0e-42a3-4d7f-84b2-3f72eb3edc4d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"code","source":["# Raw data sources\n","dir = '/content/gdrive/My Drive/Sociome_Folder/Data/'\n","print(dir)\n","\n","# Output curated datasets\n","curated = '/content/gdrive/My Drive/Sociome_Folder/Data Commons/Curated datasets/'\n","curated"],"metadata":{"id":"8pTOBt-eEWLZ","executionInfo":{"status":"ok","timestamp":1718639966788,"user_tz":300,"elapsed":325,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"colab":{"base_uri":"https://localhost:8080/","height":53},"outputId":"22257e1b-36ea-470a-d073-a88c2949ebd0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/gdrive/My Drive/Sociome_Folder/Data/\n"]},{"output_type":"execute_result","data":{"text/plain":["'/content/gdrive/My Drive/Sociome_Folder/Data Commons/Curated datasets/'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["# Data source"],"metadata":{"id":"JyFilICJEjrT"}},{"cell_type":"markdown","source":["NOAA local climatological data\n","\n","https://www.ncei.noaa.gov/cdo-web/datatools/lcd"],"metadata":{"id":"xYmjzQLBD7kT"}},{"cell_type":"markdown","source":["# Data: Midway daily summary local climatological data\n","\n","https://www.ncei.noaa.gov/cdo-web/datatools/lcd\n","\n","CHICAGO MIDWAY AIRPORT, IL US (Station ID: WBAN:14819)"],"metadata":{"id":"_cdcnEymD7tF"}},{"cell_type":"code","source":["mdw = pd.read_csv(dir + 'NOAA/3559739_MDW_2010_2019.csv', dtype='string')\n","mdw['DATE2'] = mdw['DATE'].str[0:10]\n","mdw['DATE2'] = pd.to_datetime(mdw['DATE2'])\n","mdw['Year']= mdw['DATE2'].dt.year\n","\n","# Extract only the date\n","mdw['DATE3'] = mdw['DATE2'].dt.date\n","\n","mdw.head()"],"metadata":{"id":"O0s1uUrGEn61","executionInfo":{"status":"ok","timestamp":1718639979775,"user_tz":300,"elapsed":8291,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"colab":{"base_uri":"https://localhost:8080/","height":487},"outputId":"82e6ddba-9591-4c3c-ad8e-dd3567398728"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       STATION                 DATE REPORT_TYPE SOURCE  AWND BackupDirection BackupDistance  \\\n","0  72534014819  2010-01-01T00:51:00       FM-15      7  <NA>            <NA>           <NA>   \n","1  72534014819  2010-01-01T01:51:00       FM-15      7  <NA>            <NA>           <NA>   \n","2  72534014819  2010-01-01T02:51:00       FM-15      7  <NA>            <NA>           <NA>   \n","3  72534014819  2010-01-01T03:00:00       FM-12      4  <NA>            <NA>           <NA>   \n","4  72534014819  2010-01-01T03:51:00       FM-15      7  <NA>            <NA>           <NA>   \n","\n","  BackupDistanceUnit BackupElements BackupElevation BackupElevationUnit BackupEquipment  \\\n","0               <NA>           <NA>            <NA>                <NA>            <NA>   \n","1               <NA>           <NA>            <NA>                <NA>            <NA>   \n","2               <NA>           <NA>            <NA>                <NA>            <NA>   \n","3               <NA>           <NA>            <NA>                <NA>            <NA>   \n","4               <NA>           <NA>            <NA>                <NA>            <NA>   \n","\n","  BackupLatitude BackupLongitude BackupName  CDSD  CLDD  DSNW  DYHF  DYTS  \\\n","0           <NA>            <NA>       <NA>  <NA>  <NA>  <NA>  <NA>  <NA>   \n","1           <NA>            <NA>       <NA>  <NA>  <NA>  <NA>  <NA>  <NA>   \n","2           <NA>            <NA>       <NA>  <NA>  <NA>  <NA>  <NA>  <NA>   \n","3           <NA>            <NA>       <NA>  <NA>  <NA>  <NA>  <NA>  <NA>   \n","4           <NA>            <NA>       <NA>  <NA>  <NA>  <NA>  <NA>  <NA>   \n","\n","  DailyAverageDewPointTemperature DailyAverageDryBulbTemperature DailyAverageRelativeHumidity  \\\n","0                            <NA>                           <NA>                         <NA>   \n","1                            <NA>                           <NA>                         <NA>   \n","2                            <NA>                           <NA>                         <NA>   \n","3                            <NA>                           <NA>                         <NA>   \n","4                            <NA>                           <NA>                         <NA>   \n","\n","  DailyAverageSeaLevelPressure DailyAverageStationPressure DailyAverageWetBulbTemperature  \\\n","0                         <NA>                        <NA>                           <NA>   \n","1                         <NA>                        <NA>                           <NA>   \n","2                         <NA>                        <NA>                           <NA>   \n","3                         <NA>                        <NA>                           <NA>   \n","4                         <NA>                        <NA>                           <NA>   \n","\n","  DailyAverageWindSpeed DailyCoolingDegreeDays DailyDepartureFromNormalAverageTemperature  \\\n","0                  <NA>                   <NA>                                       <NA>   \n","1                  <NA>                   <NA>                                       <NA>   \n","2                  <NA>                   <NA>                                       <NA>   \n","3                  <NA>                   <NA>                                       <NA>   \n","4                  <NA>                   <NA>                                       <NA>   \n","\n","  DailyHeatingDegreeDays DailyMaximumDryBulbTemperature DailyMinimumDryBulbTemperature  \\\n","0                   <NA>                           <NA>                           <NA>   \n","1                   <NA>                           <NA>                           <NA>   \n","2                   <NA>                           <NA>                           <NA>   \n","3                   <NA>                           <NA>                           <NA>   \n","4                   <NA>                           <NA>                           <NA>   \n","\n","  DailyPeakWindDirection DailyPeakWindSpeed DailyPrecipitation DailySnowDepth DailySnowfall  \\\n","0                   <NA>               <NA>               <NA>           <NA>          <NA>   \n","1                   <NA>               <NA>               <NA>           <NA>          <NA>   \n","2                   <NA>               <NA>               <NA>           <NA>          <NA>   \n","3                   <NA>               <NA>               <NA>           <NA>          <NA>   \n","4                   <NA>               <NA>               <NA>           <NA>          <NA>   \n","\n","  DailySustainedWindDirection DailySustainedWindSpeed DailyWeather  HDSD  HTDD  \\\n","0                        <NA>                    <NA>         <NA>  <NA>  <NA>   \n","1                        <NA>                    <NA>         <NA>  <NA>  <NA>   \n","2                        <NA>                    <NA>         <NA>  <NA>  <NA>   \n","3                        <NA>                    <NA>         <NA>  <NA>  <NA>   \n","4                        <NA>                    <NA>         <NA>  <NA>  <NA>   \n","\n","  HourlyAltimeterSetting HourlyDewPointTemperature HourlyDryBulbTemperature HourlyPrecipitation  \\\n","0                  30.21                         1                       10                0.00   \n","1                  30.22                         1                        9                0.00   \n","2                  30.24                         1                        9                0.00   \n","3                   <NA>                         1                        9                <NA>   \n","4                  30.25                         1                        8                0.00   \n","\n","  HourlyPresentWeatherType HourlyPressureChange HourlyPressureTendency HourlyRelativeHumidity  \\\n","0                     <NA>                 <NA>                   <NA>                     67   \n","1                     <NA>                 <NA>                   <NA>                     70   \n","2                     <NA>                -0.04                      3                     70   \n","3                     <NA>                -0.04                      3                     70   \n","4                     <NA>                 <NA>                   <NA>                     73   \n","\n","  HourlySeaLevelPressure HourlySkyConditions HourlyStationPressure HourlyVisibility  \\\n","0                  30.27                <NA>                 29.54             9.00   \n","1                  30.28                <NA>                 29.55             9.00   \n","2                  30.30                <NA>                 29.57             9.00   \n","3                  30.30              CLR:00                 29.57             8.70   \n","4                  30.30                <NA>                 29.58             9.00   \n","\n","  HourlyWetBulbTemperature HourlyWindDirection HourlyWindGustSpeed HourlyWindSpeed  \\\n","0                        8                 300                <NA>               9   \n","1                        7                 300                <NA>               7   \n","2                        7                 290                <NA>               9   \n","3                        7                 290                <NA>               9   \n","4                        7                 290                <NA>               8   \n","\n","  MonthlyAverageRH MonthlyDaysWithGT001Precip MonthlyDaysWithGT010Precip MonthlyDaysWithGT32Temp  \\\n","0             <NA>                       <NA>                       <NA>                    <NA>   \n","1             <NA>                       <NA>                       <NA>                    <NA>   \n","2             <NA>                       <NA>                       <NA>                    <NA>   \n","3             <NA>                       <NA>                       <NA>                    <NA>   \n","4             <NA>                       <NA>                       <NA>                    <NA>   \n","\n","  MonthlyDaysWithGT90Temp MonthlyDaysWithLT0Temp MonthlyDaysWithLT32Temp  \\\n","0                    <NA>                   <NA>                    <NA>   \n","1                    <NA>                   <NA>                    <NA>   \n","2                    <NA>                   <NA>                    <NA>   \n","3                    <NA>                   <NA>                    <NA>   \n","4                    <NA>                   <NA>                    <NA>   \n","\n","  MonthlyDepartureFromNormalAverageTemperature MonthlyDepartureFromNormalCoolingDegreeDays  \\\n","0                                         <NA>                                        <NA>   \n","1                                         <NA>                                        <NA>   \n","2                                         <NA>                                        <NA>   \n","3                                         <NA>                                        <NA>   \n","4                                         <NA>                                        <NA>   \n","\n","  MonthlyDepartureFromNormalHeatingDegreeDays MonthlyDepartureFromNormalMaximumTemperature  \\\n","0                                        <NA>                                         <NA>   \n","1                                        <NA>                                         <NA>   \n","2                                        <NA>                                         <NA>   \n","3                                        <NA>                                         <NA>   \n","4                                        <NA>                                         <NA>   \n","\n","  MonthlyDepartureFromNormalMinimumTemperature MonthlyDepartureFromNormalPrecipitation  \\\n","0                                         <NA>                                    <NA>   \n","1                                         <NA>                                    <NA>   \n","2                                         <NA>                                    <NA>   \n","3                                         <NA>                                    <NA>   \n","4                                         <NA>                                    <NA>   \n","\n","  MonthlyDewpointTemperature MonthlyGreatestPrecip MonthlyGreatestPrecipDate  \\\n","0                       <NA>                  <NA>                      <NA>   \n","1                       <NA>                  <NA>                      <NA>   \n","2                       <NA>                  <NA>                      <NA>   \n","3                       <NA>                  <NA>                      <NA>   \n","4                       <NA>                  <NA>                      <NA>   \n","\n","  MonthlyGreatestSnowDepth MonthlyGreatestSnowDepthDate MonthlyGreatestSnowfall  \\\n","0                     <NA>                         <NA>                    <NA>   \n","1                     <NA>                         <NA>                    <NA>   \n","2                     <NA>                         <NA>                    <NA>   \n","3                     <NA>                         <NA>                    <NA>   \n","4                     <NA>                         <NA>                    <NA>   \n","\n","  MonthlyGreatestSnowfallDate MonthlyMaxSeaLevelPressureValue MonthlyMaxSeaLevelPressureValueDate  \\\n","0                        <NA>                            <NA>                                <NA>   \n","1                        <NA>                            <NA>                                <NA>   \n","2                        <NA>                            <NA>                                <NA>   \n","3                        <NA>                            <NA>                                <NA>   \n","4                        <NA>                            <NA>                                <NA>   \n","\n","  MonthlyMaxSeaLevelPressureValueTime MonthlyMaximumTemperature MonthlyMeanTemperature  \\\n","0                                <NA>                      <NA>                   <NA>   \n","1                                <NA>                      <NA>                   <NA>   \n","2                                <NA>                      <NA>                   <NA>   \n","3                                <NA>                      <NA>                   <NA>   \n","4                                <NA>                      <NA>                   <NA>   \n","\n","  MonthlyMinSeaLevelPressureValue MonthlyMinSeaLevelPressureValueDate  \\\n","0                            <NA>                                <NA>   \n","1                            <NA>                                <NA>   \n","2                            <NA>                                <NA>   \n","3                            <NA>                                <NA>   \n","4                            <NA>                                <NA>   \n","\n","  MonthlyMinSeaLevelPressureValueTime MonthlyMinimumTemperature MonthlySeaLevelPressure  \\\n","0                                <NA>                      <NA>                    <NA>   \n","1                                <NA>                      <NA>                    <NA>   \n","2                                <NA>                      <NA>                    <NA>   \n","3                                <NA>                      <NA>                    <NA>   \n","4                                <NA>                      <NA>                    <NA>   \n","\n","  MonthlyStationPressure MonthlyTotalLiquidPrecipitation MonthlyTotalSnowfall MonthlyWetBulb  \\\n","0                   <NA>                            <NA>                 <NA>           <NA>   \n","1                   <NA>                            <NA>                 <NA>           <NA>   \n","2                   <NA>                            <NA>                 <NA>           <NA>   \n","3                   <NA>                            <NA>                 <NA>           <NA>   \n","4                   <NA>                            <NA>                 <NA>           <NA>   \n","\n","  NormalsCoolingDegreeDay NormalsHeatingDegreeDay  \\\n","0                    <NA>                    <NA>   \n","1                    <NA>                    <NA>   \n","2                    <NA>                    <NA>   \n","3                    <NA>                    <NA>   \n","4                    <NA>                    <NA>   \n","\n","                                                 REM REPORT_TYPE.1 SOURCE.1  \\\n","0  MET09701/01/10 00:51:02 METAR KMDW 010651Z 300...         FM-15        7   \n","1  MET09701/01/10 01:51:02 METAR KMDW 010751Z 300...         FM-15        7   \n","2  MET10301/01/10 02:51:02 METAR KMDW 010851Z 290...         FM-15        7   \n","3  SYN076AAXX  01094 72534 32964 02908 11128 2117...         FM-12        4   \n","4  MET09701/01/10 03:51:02 METAR KMDW 010951Z 290...         FM-15        7   \n","\n","  ShortDurationEndDate005 ShortDurationEndDate010 ShortDurationEndDate015 ShortDurationEndDate020  \\\n","0                    <NA>                    <NA>                    <NA>                    <NA>   \n","1                    <NA>                    <NA>                    <NA>                    <NA>   \n","2                    <NA>                    <NA>                    <NA>                    <NA>   \n","3                    <NA>                    <NA>                    <NA>                    <NA>   \n","4                    <NA>                    <NA>                    <NA>                    <NA>   \n","\n","  ShortDurationEndDate030 ShortDurationEndDate045 ShortDurationEndDate060 ShortDurationEndDate080  \\\n","0                    <NA>                    <NA>                    <NA>                    <NA>   \n","1                    <NA>                    <NA>                    <NA>                    <NA>   \n","2                    <NA>                    <NA>                    <NA>                    <NA>   \n","3                    <NA>                    <NA>                    <NA>                    <NA>   \n","4                    <NA>                    <NA>                    <NA>                    <NA>   \n","\n","  ShortDurationEndDate100 ShortDurationEndDate120 ShortDurationEndDate150 ShortDurationEndDate180  \\\n","0                    <NA>                    <NA>                    <NA>                    <NA>   \n","1                    <NA>                    <NA>                    <NA>                    <NA>   \n","2                    <NA>                    <NA>                    <NA>                    <NA>   \n","3                    <NA>                    <NA>                    <NA>                    <NA>   \n","4                    <NA>                    <NA>                    <NA>                    <NA>   \n","\n","  ShortDurationPrecipitationValue005 ShortDurationPrecipitationValue010  \\\n","0                               <NA>                               <NA>   \n","1                               <NA>                               <NA>   \n","2                               <NA>                               <NA>   \n","3                               <NA>                               <NA>   \n","4                               <NA>                               <NA>   \n","\n","  ShortDurationPrecipitationValue015 ShortDurationPrecipitationValue020  \\\n","0                               <NA>                               <NA>   \n","1                               <NA>                               <NA>   \n","2                               <NA>                               <NA>   \n","3                               <NA>                               <NA>   \n","4                               <NA>                               <NA>   \n","\n","  ShortDurationPrecipitationValue030 ShortDurationPrecipitationValue045  \\\n","0                               <NA>                               <NA>   \n","1                               <NA>                               <NA>   \n","2                               <NA>                               <NA>   \n","3                               <NA>                               <NA>   \n","4                               <NA>                               <NA>   \n","\n","  ShortDurationPrecipitationValue060 ShortDurationPrecipitationValue080  \\\n","0                               <NA>                               <NA>   \n","1                               <NA>                               <NA>   \n","2                               <NA>                               <NA>   \n","3                               <NA>                               <NA>   \n","4                               <NA>                               <NA>   \n","\n","  ShortDurationPrecipitationValue100 ShortDurationPrecipitationValue120  \\\n","0                               <NA>                               <NA>   \n","1                               <NA>                               <NA>   \n","2                               <NA>                               <NA>   \n","3                               <NA>                               <NA>   \n","4                               <NA>                               <NA>   \n","\n","  ShortDurationPrecipitationValue150 ShortDurationPrecipitationValue180 Sunrise Sunset  \\\n","0                               <NA>                               <NA>    <NA>   <NA>   \n","1                               <NA>                               <NA>    <NA>   <NA>   \n","2                               <NA>                               <NA>    <NA>   <NA>   \n","3                               <NA>                               <NA>    <NA>   <NA>   \n","4                               <NA>                               <NA>    <NA>   <NA>   \n","\n","  WindEquipmentChangeDate      DATE2  Year       DATE3  \n","0              2007-06-13 2010-01-01  2010  2010-01-01  \n","1              2007-06-13 2010-01-01  2010  2010-01-01  \n","2              2007-06-13 2010-01-01  2010  2010-01-01  \n","3              2007-06-13 2010-01-01  2010  2010-01-01  \n","4              2007-06-13 2010-01-01  2010  2010-01-01  "],"text/html":["\n","  <div id=\"df-7590fdb3-6363-4c9d-bf76-10086eb2ac09\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>STATION</th>\n","      <th>DATE</th>\n","      <th>REPORT_TYPE</th>\n","      <th>SOURCE</th>\n","      <th>AWND</th>\n","      <th>BackupDirection</th>\n","      <th>BackupDistance</th>\n","      <th>BackupDistanceUnit</th>\n","      <th>BackupElements</th>\n","      <th>BackupElevation</th>\n","      <th>BackupElevationUnit</th>\n","      <th>BackupEquipment</th>\n","      <th>BackupLatitude</th>\n","      <th>BackupLongitude</th>\n","      <th>BackupName</th>\n","      <th>CDSD</th>\n","      <th>CLDD</th>\n","      <th>DSNW</th>\n","      <th>DYHF</th>\n","      <th>DYTS</th>\n","      <th>DailyAverageDewPointTemperature</th>\n","      <th>DailyAverageDryBulbTemperature</th>\n","      <th>DailyAverageRelativeHumidity</th>\n","      <th>DailyAverageSeaLevelPressure</th>\n","      <th>DailyAverageStationPressure</th>\n","      <th>DailyAverageWetBulbTemperature</th>\n","      <th>DailyAverageWindSpeed</th>\n","      <th>DailyCoolingDegreeDays</th>\n","      <th>DailyDepartureFromNormalAverageTemperature</th>\n","      <th>DailyHeatingDegreeDays</th>\n","      <th>DailyMaximumDryBulbTemperature</th>\n","      <th>DailyMinimumDryBulbTemperature</th>\n","      <th>DailyPeakWindDirection</th>\n","      <th>DailyPeakWindSpeed</th>\n","      <th>DailyPrecipitation</th>\n","      <th>DailySnowDepth</th>\n","      <th>DailySnowfall</th>\n","      <th>DailySustainedWindDirection</th>\n","      <th>DailySustainedWindSpeed</th>\n","      <th>DailyWeather</th>\n","      <th>HDSD</th>\n","      <th>HTDD</th>\n","      <th>HourlyAltimeterSetting</th>\n","      <th>HourlyDewPointTemperature</th>\n","      <th>HourlyDryBulbTemperature</th>\n","      <th>HourlyPrecipitation</th>\n","      <th>HourlyPresentWeatherType</th>\n","      <th>HourlyPressureChange</th>\n","      <th>HourlyPressureTendency</th>\n","      <th>HourlyRelativeHumidity</th>\n","      <th>HourlySeaLevelPressure</th>\n","      <th>HourlySkyConditions</th>\n","      <th>HourlyStationPressure</th>\n","      <th>HourlyVisibility</th>\n","      <th>HourlyWetBulbTemperature</th>\n","      <th>HourlyWindDirection</th>\n","      <th>HourlyWindGustSpeed</th>\n","      <th>HourlyWindSpeed</th>\n","      <th>MonthlyAverageRH</th>\n","      <th>MonthlyDaysWithGT001Precip</th>\n","      <th>MonthlyDaysWithGT010Precip</th>\n","      <th>MonthlyDaysWithGT32Temp</th>\n","      <th>MonthlyDaysWithGT90Temp</th>\n","      <th>MonthlyDaysWithLT0Temp</th>\n","      <th>MonthlyDaysWithLT32Temp</th>\n","      <th>MonthlyDepartureFromNormalAverageTemperature</th>\n","      <th>MonthlyDepartureFromNormalCoolingDegreeDays</th>\n","      <th>MonthlyDepartureFromNormalHeatingDegreeDays</th>\n","      <th>MonthlyDepartureFromNormalMaximumTemperature</th>\n","      <th>MonthlyDepartureFromNormalMinimumTemperature</th>\n","      <th>MonthlyDepartureFromNormalPrecipitation</th>\n","      <th>MonthlyDewpointTemperature</th>\n","      <th>MonthlyGreatestPrecip</th>\n","      <th>MonthlyGreatestPrecipDate</th>\n","      <th>MonthlyGreatestSnowDepth</th>\n","      <th>MonthlyGreatestSnowDepthDate</th>\n","      <th>MonthlyGreatestSnowfall</th>\n","      <th>MonthlyGreatestSnowfallDate</th>\n","      <th>MonthlyMaxSeaLevelPressureValue</th>\n","      <th>MonthlyMaxSeaLevelPressureValueDate</th>\n","      <th>MonthlyMaxSeaLevelPressureValueTime</th>\n","      <th>MonthlyMaximumTemperature</th>\n","      <th>MonthlyMeanTemperature</th>\n","      <th>MonthlyMinSeaLevelPressureValue</th>\n","      <th>MonthlyMinSeaLevelPressureValueDate</th>\n","      <th>MonthlyMinSeaLevelPressureValueTime</th>\n","      <th>MonthlyMinimumTemperature</th>\n","      <th>MonthlySeaLevelPressure</th>\n","      <th>MonthlyStationPressure</th>\n","      <th>MonthlyTotalLiquidPrecipitation</th>\n","      <th>MonthlyTotalSnowfall</th>\n","      <th>MonthlyWetBulb</th>\n","      <th>NormalsCoolingDegreeDay</th>\n","      <th>NormalsHeatingDegreeDay</th>\n","      <th>REM</th>\n","      <th>REPORT_TYPE.1</th>\n","      <th>SOURCE.1</th>\n","      <th>ShortDurationEndDate005</th>\n","      <th>ShortDurationEndDate010</th>\n","      <th>ShortDurationEndDate015</th>\n","      <th>ShortDurationEndDate020</th>\n","      <th>ShortDurationEndDate030</th>\n","      <th>ShortDurationEndDate045</th>\n","      <th>ShortDurationEndDate060</th>\n","      <th>ShortDurationEndDate080</th>\n","      <th>ShortDurationEndDate100</th>\n","      <th>ShortDurationEndDate120</th>\n","      <th>ShortDurationEndDate150</th>\n","      <th>ShortDurationEndDate180</th>\n","      <th>ShortDurationPrecipitationValue005</th>\n","      <th>ShortDurationPrecipitationValue010</th>\n","      <th>ShortDurationPrecipitationValue015</th>\n","      <th>ShortDurationPrecipitationValue020</th>\n","      <th>ShortDurationPrecipitationValue030</th>\n","      <th>ShortDurationPrecipitationValue045</th>\n","      <th>ShortDurationPrecipitationValue060</th>\n","      <th>ShortDurationPrecipitationValue080</th>\n","      <th>ShortDurationPrecipitationValue100</th>\n","      <th>ShortDurationPrecipitationValue120</th>\n","      <th>ShortDurationPrecipitationValue150</th>\n","      <th>ShortDurationPrecipitationValue180</th>\n","      <th>Sunrise</th>\n","      <th>Sunset</th>\n","      <th>WindEquipmentChangeDate</th>\n","      <th>DATE2</th>\n","      <th>Year</th>\n","      <th>DATE3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>72534014819</td>\n","      <td>2010-01-01T00:51:00</td>\n","      <td>FM-15</td>\n","      <td>7</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>30.21</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>0.00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>67</td>\n","      <td>30.27</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>29.54</td>\n","      <td>9.00</td>\n","      <td>8</td>\n","      <td>300</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>9</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>MET09701/01/10 00:51:02 METAR KMDW 010651Z 300...</td>\n","      <td>FM-15</td>\n","      <td>7</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>2007-06-13</td>\n","      <td>2010-01-01</td>\n","      <td>2010</td>\n","      <td>2010-01-01</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>72534014819</td>\n","      <td>2010-01-01T01:51:00</td>\n","      <td>FM-15</td>\n","      <td>7</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>30.22</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>0.00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>70</td>\n","      <td>30.28</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>29.55</td>\n","      <td>9.00</td>\n","      <td>7</td>\n","      <td>300</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>7</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>MET09701/01/10 01:51:02 METAR KMDW 010751Z 300...</td>\n","      <td>FM-15</td>\n","      <td>7</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>2007-06-13</td>\n","      <td>2010-01-01</td>\n","      <td>2010</td>\n","      <td>2010-01-01</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>72534014819</td>\n","      <td>2010-01-01T02:51:00</td>\n","      <td>FM-15</td>\n","      <td>7</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>30.24</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>0.00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>-0.04</td>\n","      <td>3</td>\n","      <td>70</td>\n","      <td>30.30</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>29.57</td>\n","      <td>9.00</td>\n","      <td>7</td>\n","      <td>290</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>9</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>MET10301/01/10 02:51:02 METAR KMDW 010851Z 290...</td>\n","      <td>FM-15</td>\n","      <td>7</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>2007-06-13</td>\n","      <td>2010-01-01</td>\n","      <td>2010</td>\n","      <td>2010-01-01</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>72534014819</td>\n","      <td>2010-01-01T03:00:00</td>\n","      <td>FM-12</td>\n","      <td>4</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>-0.04</td>\n","      <td>3</td>\n","      <td>70</td>\n","      <td>30.30</td>\n","      <td>CLR:00</td>\n","      <td>29.57</td>\n","      <td>8.70</td>\n","      <td>7</td>\n","      <td>290</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>9</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>SYN076AAXX  01094 72534 32964 02908 11128 2117...</td>\n","      <td>FM-12</td>\n","      <td>4</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>2007-06-13</td>\n","      <td>2010-01-01</td>\n","      <td>2010</td>\n","      <td>2010-01-01</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>72534014819</td>\n","      <td>2010-01-01T03:51:00</td>\n","      <td>FM-15</td>\n","      <td>7</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>30.25</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>0.00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>73</td>\n","      <td>30.30</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>29.58</td>\n","      <td>9.00</td>\n","      <td>7</td>\n","      <td>290</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>8</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>MET09701/01/10 03:51:02 METAR KMDW 010951Z 290...</td>\n","      <td>FM-15</td>\n","      <td>7</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>2007-06-13</td>\n","      <td>2010-01-01</td>\n","      <td>2010</td>\n","      <td>2010-01-01</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7590fdb3-6363-4c9d-bf76-10086eb2ac09')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7590fdb3-6363-4c9d-bf76-10086eb2ac09 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7590fdb3-6363-4c9d-bf76-10086eb2ac09');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-909ce27b-c456-471b-ab52-b630abc04ccf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-909ce27b-c456-471b-ab52-b630abc04ccf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-909ce27b-c456-471b-ab52-b630abc04ccf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"mdw"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["#Missingness table\n","\n","df=mdw\n","\n","count = df.isnull().sum()\n","percentage = 100 * df.isnull().sum() / len(df)\n","types = df.dtypes\n","missing_table = pd.concat([count, percentage, types], axis=1)\n","missing_table.columns = ['Count', 'Percentage', 'Type']\n","missing_table = missing_table.sort_values(by=['Percentage'], ascending=False)\n","missing_table.tail(30)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":990},"id":"37gkVUCRtbMJ","executionInfo":{"status":"ok","timestamp":1718639984019,"user_tz":300,"elapsed":1504,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"6c1066c2-78dc-461f-9838-5f0bdbadb10c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                            Count  Percentage            Type\n","DailyPeakWindDirection     120823       97.07  string[python]\n","Sunrise                    120821       97.07  string[python]\n","Sunset                     120821       97.07  string[python]\n","HourlyWindGustSpeed        102582       82.41  string[python]\n","HourlyPresentWeatherType    96526       77.55  string[python]\n","HourlyPressureTendency      81104       65.16  string[python]\n","HourlyPressureChange        81104       65.16  string[python]\n","HourlyPrecipitation         28184       22.64  string[python]\n","HourlySeaLevelPressure      22410       18.00  string[python]\n","HourlyAltimeterSetting      18315       14.71  string[python]\n","HourlySkyConditions         16255       13.06  string[python]\n","HourlyWetBulbTemperature     4054        3.26  string[python]\n","HourlyStationPressure        4054        3.26  string[python]\n","HourlyWindDirection          3991        3.21  string[python]\n","HourlyWindSpeed              3828        3.08  string[python]\n","HourlyRelativeHumidity       3782        3.04  string[python]\n","HourlyDryBulbTemperature     3781        3.04  string[python]\n","HourlyDewPointTemperature    3781        3.04  string[python]\n","HourlyVisibility             3767        3.03  string[python]\n","REM                             2        0.00  string[python]\n","WindEquipmentChangeDate         0        0.00  string[python]\n","DATE2                           0        0.00  datetime64[ns]\n","Year                            0        0.00           int32\n","STATION                         0        0.00  string[python]\n","SOURCE.1                        0        0.00  string[python]\n","REPORT_TYPE.1                   0        0.00  string[python]\n","DATE                            0        0.00  string[python]\n","SOURCE                          0        0.00  string[python]\n","REPORT_TYPE                     0        0.00  string[python]\n","DATE3                           0        0.00          object"],"text/html":["\n","  <div id=\"df-cff2d3fd-09d9-4555-9303-3d34994dd051\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Count</th>\n","      <th>Percentage</th>\n","      <th>Type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>DailyPeakWindDirection</th>\n","      <td>120823</td>\n","      <td>97.07</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>Sunrise</th>\n","      <td>120821</td>\n","      <td>97.07</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>Sunset</th>\n","      <td>120821</td>\n","      <td>97.07</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyWindGustSpeed</th>\n","      <td>102582</td>\n","      <td>82.41</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyPresentWeatherType</th>\n","      <td>96526</td>\n","      <td>77.55</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyPressureTendency</th>\n","      <td>81104</td>\n","      <td>65.16</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyPressureChange</th>\n","      <td>81104</td>\n","      <td>65.16</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyPrecipitation</th>\n","      <td>28184</td>\n","      <td>22.64</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>HourlySeaLevelPressure</th>\n","      <td>22410</td>\n","      <td>18.00</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyAltimeterSetting</th>\n","      <td>18315</td>\n","      <td>14.71</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>HourlySkyConditions</th>\n","      <td>16255</td>\n","      <td>13.06</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyWetBulbTemperature</th>\n","      <td>4054</td>\n","      <td>3.26</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyStationPressure</th>\n","      <td>4054</td>\n","      <td>3.26</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyWindDirection</th>\n","      <td>3991</td>\n","      <td>3.21</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyWindSpeed</th>\n","      <td>3828</td>\n","      <td>3.08</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyRelativeHumidity</th>\n","      <td>3782</td>\n","      <td>3.04</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyDryBulbTemperature</th>\n","      <td>3781</td>\n","      <td>3.04</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyDewPointTemperature</th>\n","      <td>3781</td>\n","      <td>3.04</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyVisibility</th>\n","      <td>3767</td>\n","      <td>3.03</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>REM</th>\n","      <td>2</td>\n","      <td>0.00</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>WindEquipmentChangeDate</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>DATE2</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>datetime64[ns]</td>\n","    </tr>\n","    <tr>\n","      <th>Year</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>int32</td>\n","    </tr>\n","    <tr>\n","      <th>STATION</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>SOURCE.1</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>REPORT_TYPE.1</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>DATE</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>SOURCE</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>REPORT_TYPE</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>DATE3</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>object</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cff2d3fd-09d9-4555-9303-3d34994dd051')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cff2d3fd-09d9-4555-9303-3d34994dd051 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cff2d3fd-09d9-4555-9303-3d34994dd051');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8ae835fb-6b54-4555-a871-7b5d273a304e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8ae835fb-6b54-4555-a871-7b5d273a304e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8ae835fb-6b54-4555-a871-7b5d273a304e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"missing_table\",\n  \"rows\": 30,\n  \"fields\": [\n    {\n      \"column\": \"Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 43662,\n        \"min\": 0,\n        \"max\": 120823,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          120823,\n          120821,\n          28184\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Percentage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35.07857073813741,\n        \"min\": 0.0,\n        \"max\": 97.06841699338004,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          97.06841699338004,\n          97.06681020631146,\n          22.642843370396555\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"datetime64[ns]\",\n          \"object\",\n          \"string\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["mdwH = mdw[['DATE2', 'HourlyPrecipitation', 'HourlySeaLevelPressure', 'HourlyAltimeterSetting',\n","           'HourlyWetBulbTemperature', 'HourlyRelativeHumidity',\n","           'HourlyDewPointTemperature', 'HourlyDryBulbTemperature', 'HourlyVisibility']]"],"metadata":{"id":"mGhnno0GJOVm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cols = ['HourlyPrecipitation', 'HourlySeaLevelPressure', 'HourlyAltimeterSetting',\n","        'HourlyWetBulbTemperature', 'HourlyRelativeHumidity',\n","        'HourlyDewPointTemperature', 'HourlyDryBulbTemperature', 'HourlyVisibility']\n","\n","mdwH['DATE2'] = pd.to_datetime(mdwH['DATE2'])\n","\n","mdwH[cols] = mdwH[cols].apply(pd.to_numeric, errors='coerce')\n","print(mdwH.info())\n","mdwH.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":831},"id":"W0zGYK85tIfy","executionInfo":{"status":"ok","timestamp":1718639992874,"user_tz":300,"elapsed":361,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"901a9648-3ac2-4f7a-d4b5-e1a4fb308310"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-7-202d3f143269>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  mdwH['DATE2'] = pd.to_datetime(mdwH['DATE2'])\n"]},{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 124472 entries, 0 to 124471\n","Data columns (total 9 columns):\n"," #   Column                     Non-Null Count   Dtype         \n","---  ------                     --------------   -----         \n"," 0   DATE2                      124472 non-null  datetime64[ns]\n"," 1   HourlyPrecipitation        82758 non-null   Float64       \n"," 2   HourlySeaLevelPressure     101516 non-null  Float64       \n"," 3   HourlyAltimeterSetting     106119 non-null  Float64       \n"," 4   HourlyWetBulbTemperature   120352 non-null  Int64         \n"," 5   HourlyRelativeHumidity     120624 non-null  Int64         \n"," 6   HourlyDewPointTemperature  120622 non-null  Int64         \n"," 7   HourlyDryBulbTemperature   120601 non-null  Int64         \n"," 8   HourlyVisibility           120400 non-null  Float64       \n","dtypes: Float64(4), Int64(4), datetime64[ns](1)\n","memory usage: 9.5 MB\n","None\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-7-202d3f143269>:7: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  mdwH[cols] = mdwH[cols].apply(pd.to_numeric, errors='coerce')\n"]},{"output_type":"execute_result","data":{"text/plain":["       DATE2  HourlyPrecipitation  HourlySeaLevelPressure  HourlyAltimeterSetting  \\\n","0 2010-01-01                 0.00                   30.27                   30.21   \n","1 2010-01-01                 0.00                   30.28                   30.22   \n","2 2010-01-01                 0.00                   30.30                   30.24   \n","3 2010-01-01                 <NA>                   30.30                    <NA>   \n","4 2010-01-01                 0.00                   30.30                   30.25   \n","\n","   HourlyWetBulbTemperature  HourlyRelativeHumidity  HourlyDewPointTemperature  \\\n","0                         8                      67                          1   \n","1                         7                      70                          1   \n","2                         7                      70                          1   \n","3                         7                      70                          1   \n","4                         7                      73                          1   \n","\n","   HourlyDryBulbTemperature  HourlyVisibility  \n","0                        10              9.00  \n","1                         9              9.00  \n","2                         9              9.00  \n","3                         9              8.70  \n","4                         8              9.00  "],"text/html":["\n","  <div id=\"df-a68dc433-9a5c-4490-91e7-cf7edff3add4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DATE2</th>\n","      <th>HourlyPrecipitation</th>\n","      <th>HourlySeaLevelPressure</th>\n","      <th>HourlyAltimeterSetting</th>\n","      <th>HourlyWetBulbTemperature</th>\n","      <th>HourlyRelativeHumidity</th>\n","      <th>HourlyDewPointTemperature</th>\n","      <th>HourlyDryBulbTemperature</th>\n","      <th>HourlyVisibility</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2010-01-01</td>\n","      <td>0.00</td>\n","      <td>30.27</td>\n","      <td>30.21</td>\n","      <td>8</td>\n","      <td>67</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>9.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2010-01-01</td>\n","      <td>0.00</td>\n","      <td>30.28</td>\n","      <td>30.22</td>\n","      <td>7</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>9.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2010-01-01</td>\n","      <td>0.00</td>\n","      <td>30.30</td>\n","      <td>30.24</td>\n","      <td>7</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>9.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2010-01-01</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>30.30</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>7</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>8.70</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2010-01-01</td>\n","      <td>0.00</td>\n","      <td>30.30</td>\n","      <td>30.25</td>\n","      <td>7</td>\n","      <td>73</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>9.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a68dc433-9a5c-4490-91e7-cf7edff3add4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a68dc433-9a5c-4490-91e7-cf7edff3add4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a68dc433-9a5c-4490-91e7-cf7edff3add4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-93818532-d8bb-48a7-bc1f-658227b9cc6a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-93818532-d8bb-48a7-bc1f-658227b9cc6a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-93818532-d8bb-48a7-bc1f-658227b9cc6a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"mdwH"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["#Missingness table\n","\n","df=mdwH\n","\n","count = df.isnull().sum()\n","percentage = 100 * df.isnull().sum() / len(df)\n","types = df.dtypes\n","missing_table = pd.concat([count, percentage, types], axis=1)\n","missing_table.columns = ['Count', 'Percentage', 'Type']\n","missing_table = missing_table.sort_values(by=['Percentage'], ascending=False)\n","missing_table.tail(30)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":332},"id":"82tulo2t7GN9","executionInfo":{"status":"ok","timestamp":1718639996526,"user_tz":300,"elapsed":311,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"4b3668d5-f0f4-4121-c7ae-746d9c055cc5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                           Count  Percentage            Type\n","HourlyPrecipitation        41714       33.51         Float64\n","HourlySeaLevelPressure     22956       18.44         Float64\n","HourlyAltimeterSetting     18353       14.74         Float64\n","HourlyWetBulbTemperature    4120        3.31           Int64\n","HourlyVisibility            4072        3.27         Float64\n","HourlyDryBulbTemperature    3871        3.11           Int64\n","HourlyDewPointTemperature   3850        3.09           Int64\n","HourlyRelativeHumidity      3848        3.09           Int64\n","DATE2                          0        0.00  datetime64[ns]"],"text/html":["\n","  <div id=\"df-c908f223-19a7-4070-acc4-c4042f3707be\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Count</th>\n","      <th>Percentage</th>\n","      <th>Type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>HourlyPrecipitation</th>\n","      <td>41714</td>\n","      <td>33.51</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>HourlySeaLevelPressure</th>\n","      <td>22956</td>\n","      <td>18.44</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyAltimeterSetting</th>\n","      <td>18353</td>\n","      <td>14.74</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyWetBulbTemperature</th>\n","      <td>4120</td>\n","      <td>3.31</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyVisibility</th>\n","      <td>4072</td>\n","      <td>3.27</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyDryBulbTemperature</th>\n","      <td>3871</td>\n","      <td>3.11</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyDewPointTemperature</th>\n","      <td>3850</td>\n","      <td>3.09</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>HourlyRelativeHumidity</th>\n","      <td>3848</td>\n","      <td>3.09</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>DATE2</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>datetime64[ns]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c908f223-19a7-4070-acc4-c4042f3707be')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c908f223-19a7-4070-acc4-c4042f3707be button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c908f223-19a7-4070-acc4-c4042f3707be');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4ec1affa-78b9-4acb-be40-84011570264a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4ec1affa-78b9-4acb-be40-84011570264a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4ec1affa-78b9-4acb-be40-84011570264a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"missing_table\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13730,\n        \"min\": 0,\n        \"max\": 41714,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          3848,\n          22956,\n          3871\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Percentage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.030944332656707,\n        \"min\": 0.0,\n        \"max\": 33.512757889324504,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          3.091458319943441,\n          18.442701973134522,\n          3.1099363712320844\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Float64\",\n          \"Int64\",\n          \"datetime64[ns]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["cols = ['HourlySeaLevelPressure', 'HourlyAltimeterSetting',\n","        'HourlyWetBulbTemperature', 'HourlyRelativeHumidity',\n","        'HourlyDewPointTemperature', 'HourlyDryBulbTemperature', 'HourlyVisibility']\n","\n","\n","mdwDailyAvg = mdwH.groupby(['DATE2'])[cols].mean()\n","mdwDailyAvg['TotalPrecipitation'] = mdwH.groupby(['DATE2'])['HourlyPrecipitation'].sum()\n","\n","\n","mdwDailyAvg = mdwDailyAvg.rename(columns={'HourlySeaLevelPressure': 'AvgSeaLvlPress',\n","                                          'HourlyAltimeterSetting': 'AvgAltimeter',\n","                                          'HourlyWetBulbTemperature': 'AvgWetBulbTemp',\n","                                          'HourlyRelativeHumidity': 'AvgRelHumidity',\n","                                          'HourlyDewPointTemperature': 'AvgDewPtTemp',\n","                                          'HourlyDryBulbTemperature': 'AvgDryBulbTemp',\n","                                          'HourlyVisibility': 'AvgVisibility'})\n","mdwDailyAvg = mdwDailyAvg.reset_index()\n","mdwDailyAvg.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":529},"id":"lVw75zp7v_rj","executionInfo":{"status":"ok","timestamp":1718639999124,"user_tz":300,"elapsed":3,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"d388be88-9d87-4223-be88-81e0dbd1323a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     DATE2  AvgSeaLvlPress  AvgAltimeter  AvgWetBulbTemp  AvgRelHumidity  \\\n","count                 3652         3652.00       3652.00         3652.00         3652.00   \n","mean   2014-12-31 12:00:00           30.02         30.01           46.58           66.44   \n","min    2010-01-01 00:00:00           29.21         29.23          -16.63           23.46   \n","25%    2012-07-01 18:00:00           29.88         29.89           33.02           57.46   \n","50%    2014-12-31 12:00:00           30.00         30.01           47.04           65.97   \n","75%    2017-07-01 06:00:00           30.15         30.14           62.29           75.80   \n","max    2019-12-31 00:00:00           30.85         30.79           80.32           98.46   \n","std                    NaN            0.21          0.20           17.78           12.75   \n","\n","       AvgDewPtTemp  AvgDryBulbTemp  AvgVisibility  TotalPrecipitation  \n","count       3652.00         3652.00        3652.00             3652.00  \n","mean          40.49           52.45           8.88                0.21  \n","min          -26.47          -15.63           0.74                0.00  \n","25%           26.40           36.71           8.40                0.00  \n","50%           40.91           53.17           9.86                0.00  \n","75%           56.54           70.61           9.99                0.06  \n","max           77.75           92.79          10.00               13.98  \n","std           18.93           20.03           1.74                0.72  "],"text/html":["\n","  <div id=\"df-d8dbcaa8-23ec-4be0-9300-720062481e08\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DATE2</th>\n","      <th>AvgSeaLvlPress</th>\n","      <th>AvgAltimeter</th>\n","      <th>AvgWetBulbTemp</th>\n","      <th>AvgRelHumidity</th>\n","      <th>AvgDewPtTemp</th>\n","      <th>AvgDryBulbTemp</th>\n","      <th>AvgVisibility</th>\n","      <th>TotalPrecipitation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>3652</td>\n","      <td>3652.00</td>\n","      <td>3652.00</td>\n","      <td>3652.00</td>\n","      <td>3652.00</td>\n","      <td>3652.00</td>\n","      <td>3652.00</td>\n","      <td>3652.00</td>\n","      <td>3652.00</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2014-12-31 12:00:00</td>\n","      <td>30.02</td>\n","      <td>30.01</td>\n","      <td>46.58</td>\n","      <td>66.44</td>\n","      <td>40.49</td>\n","      <td>52.45</td>\n","      <td>8.88</td>\n","      <td>0.21</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2010-01-01 00:00:00</td>\n","      <td>29.21</td>\n","      <td>29.23</td>\n","      <td>-16.63</td>\n","      <td>23.46</td>\n","      <td>-26.47</td>\n","      <td>-15.63</td>\n","      <td>0.74</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2012-07-01 18:00:00</td>\n","      <td>29.88</td>\n","      <td>29.89</td>\n","      <td>33.02</td>\n","      <td>57.46</td>\n","      <td>26.40</td>\n","      <td>36.71</td>\n","      <td>8.40</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2014-12-31 12:00:00</td>\n","      <td>30.00</td>\n","      <td>30.01</td>\n","      <td>47.04</td>\n","      <td>65.97</td>\n","      <td>40.91</td>\n","      <td>53.17</td>\n","      <td>9.86</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2017-07-01 06:00:00</td>\n","      <td>30.15</td>\n","      <td>30.14</td>\n","      <td>62.29</td>\n","      <td>75.80</td>\n","      <td>56.54</td>\n","      <td>70.61</td>\n","      <td>9.99</td>\n","      <td>0.06</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2019-12-31 00:00:00</td>\n","      <td>30.85</td>\n","      <td>30.79</td>\n","      <td>80.32</td>\n","      <td>98.46</td>\n","      <td>77.75</td>\n","      <td>92.79</td>\n","      <td>10.00</td>\n","      <td>13.98</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>NaN</td>\n","      <td>0.21</td>\n","      <td>0.20</td>\n","      <td>17.78</td>\n","      <td>12.75</td>\n","      <td>18.93</td>\n","      <td>20.03</td>\n","      <td>1.74</td>\n","      <td>0.72</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d8dbcaa8-23ec-4be0-9300-720062481e08')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d8dbcaa8-23ec-4be0-9300-720062481e08 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d8dbcaa8-23ec-4be0-9300-720062481e08');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-74e97d68-0538-40c1-81f4-6b75b51e16e9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-74e97d68-0538-40c1-81f4-6b75b51e16e9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-74e97d68-0538-40c1-81f4-6b75b51e16e9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"mdwDailyAvg\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"DATE2\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000003652\",\n        \"max\": \"2019-12-31 00:00:00\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"3652\",\n          \"2014-12-31 12:00:00\",\n          \"2019-12-31 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgSeaLvlPress\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          30.019381533112448,\n          30.15285714285714,\n          3652.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgAltimeter\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          30.012530088750857,\n          30.13889880952381,\n          3652.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgWetBulbTemp\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          46.57853932480829,\n          62.285714285714285,\n          3652.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgRelHumidity\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          66.43838059209975,\n          75.80148423005566,\n          3652.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgDewPtTemp\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          40.48802049079967,\n          56.535714285714285,\n          3652.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgDryBulbTemp\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          52.45043042177835,\n          70.60971786833856,\n          3652.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgVisibility\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          8.881768926886995,\n          9.991428571428571,\n          3652.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TotalPrecipitation\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          3652.0,\n          0.20640197152245343,\n          0.7233906896087346\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["print(mdwDailyAvg.shape)\n","temp = mdwDailyAvg.drop_duplicates(subset=['DATE2'])\n","print(temp.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pk2fey0s6gJ2","executionInfo":{"status":"ok","timestamp":1718640003003,"user_tz":300,"elapsed":320,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"0173c585-0481-4709-c704-56baa1747a0b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(3652, 9)\n","(3652, 9)\n"]}]},{"cell_type":"code","source":["#Missingness table\n","\n","df=mdwDailyAvg\n","\n","count = df.isnull().sum()\n","percentage = 100 * df.isnull().sum() / len(df)\n","types = df.dtypes\n","missing_table = pd.concat([count, percentage, types], axis=1)\n","missing_table.columns = ['Count', 'Percentage', 'Type']\n","missing_table = missing_table.sort_values(by=['Percentage'], ascending=False)\n","missing_table.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":332},"id":"UV5PrI5qw-KO","executionInfo":{"status":"ok","timestamp":1718640005373,"user_tz":300,"elapsed":330,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"205f1963-f56b-4420-c038-7cddc5d42294"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    Count  Percentage            Type\n","DATE2                   0        0.00  datetime64[ns]\n","AvgSeaLvlPress          0        0.00         Float64\n","AvgAltimeter            0        0.00         Float64\n","AvgWetBulbTemp          0        0.00         Float64\n","AvgRelHumidity          0        0.00         Float64\n","AvgDewPtTemp            0        0.00         Float64\n","AvgDryBulbTemp          0        0.00         Float64\n","AvgVisibility           0        0.00         Float64\n","TotalPrecipitation      0        0.00         Float64"],"text/html":["\n","  <div id=\"df-1b7b0bec-e7d5-4dae-bd0c-77cc1a80592a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Count</th>\n","      <th>Percentage</th>\n","      <th>Type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>DATE2</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>datetime64[ns]</td>\n","    </tr>\n","    <tr>\n","      <th>AvgSeaLvlPress</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>AvgAltimeter</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>AvgWetBulbTemp</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>AvgRelHumidity</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>AvgDewPtTemp</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>AvgDryBulbTemp</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>AvgVisibility</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>TotalPrecipitation</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>Float64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b7b0bec-e7d5-4dae-bd0c-77cc1a80592a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1b7b0bec-e7d5-4dae-bd0c-77cc1a80592a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1b7b0bec-e7d5-4dae-bd0c-77cc1a80592a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ca3a6dde-d5ef-4949-873c-ee353c4f6d3b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ca3a6dde-d5ef-4949-873c-ee353c4f6d3b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ca3a6dde-d5ef-4949-873c-ee353c4f6d3b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"missing_table","summary":"{\n  \"name\": \"missing_table\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Percentage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Float64\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["# Export daily averages"],"metadata":{"id":"Z3D9BSYMyw34"}},{"cell_type":"code","source":["#  Summary\n","with open(curated +  '00032_MDW_daily_weather_1019.csv', 'w') as f:\n","  mdwDailyAvg.to_csv(f)"],"metadata":{"id":"Za950UjdycJ-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["mdwDailyAvg.columns.to_list()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PoNn6ImPy_pn","executionInfo":{"status":"ok","timestamp":1718640011513,"user_tz":300,"elapsed":313,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"a520e4b2-805a-44b5-b27c-0ccb1049b8b2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['DATE2',\n"," 'AvgSeaLvlPress',\n"," 'AvgAltimeter',\n"," 'AvgWetBulbTemp',\n"," 'AvgRelHumidity',\n"," 'AvgDewPtTemp',\n"," 'AvgDryBulbTemp',\n"," 'AvgVisibility',\n"," 'TotalPrecipitation']"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["# Data from FSOD\n","\n","https://iridl.ldeo.columbia.edu/SOURCES/.NOAA/.NCDC/.DAILY/.FSOD/"],"metadata":{"id":"3PO4RrZ8e8EC"}},{"cell_type":"markdown","source":["## Humidity"],"metadata":{"id":"mK6dYj6JiMZp"}},{"cell_type":"markdown","source":["## Sunshine via average cloudiness sunrise to sunset"],"metadata":{"id":"QjpAwZsyiN2F"}},{"cell_type":"code","source":["# df = pd.read_csv(dir + 'NOAA/[T]data.tsv', delimiter='\\t')\n","df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5Nw1JIbke_VD","executionInfo":{"status":"ok","timestamp":1718640015452,"user_tz":300,"elapsed":302,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"57e6e495-aea9-4aa6-99d3-80806ed242c8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3652 entries, 0 to 3651\n","Data columns (total 9 columns):\n"," #   Column              Non-Null Count  Dtype         \n","---  ------              --------------  -----         \n"," 0   DATE2               3652 non-null   datetime64[ns]\n"," 1   AvgSeaLvlPress      3652 non-null   Float64       \n"," 2   AvgAltimeter        3652 non-null   Float64       \n"," 3   AvgWetBulbTemp      3652 non-null   Float64       \n"," 4   AvgRelHumidity      3652 non-null   Float64       \n"," 5   AvgDewPtTemp        3652 non-null   Float64       \n"," 6   AvgDryBulbTemp      3652 non-null   Float64       \n"," 7   AvgVisibility       3652 non-null   Float64       \n"," 8   TotalPrecipitation  3652 non-null   Float64       \n","dtypes: Float64(8), datetime64[ns](1)\n","memory usage: 285.4 KB\n"]}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"Y9cwXwsQi-Ib","executionInfo":{"status":"ok","timestamp":1718640018586,"user_tz":300,"elapsed":317,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"d6e5304a-89a3-40ce-c891-f2949a467e2d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       DATE2  AvgSeaLvlPress  AvgAltimeter  AvgWetBulbTemp  AvgRelHumidity  AvgDewPtTemp  \\\n","0 2010-01-01           30.35         30.29            9.46           69.11          3.00   \n","1 2010-01-02           30.48         30.41            4.79           62.39         -3.79   \n","2 2010-01-03           30.46         30.39            8.71           66.35          1.48   \n","3 2010-01-04           30.32         30.26           11.91           70.24          5.74   \n","4 2010-01-05           30.25         30.19           15.66           70.57          9.71   \n","\n","   AvgDryBulbTemp  AvgVisibility  TotalPrecipitation  \n","0           11.39           9.45                0.00  \n","1            6.61           9.75                0.00  \n","2           10.68           9.64                0.00  \n","3           13.79           9.85                0.00  \n","4           17.86           8.99                0.00  "],"text/html":["\n","  <div id=\"df-85cd5756-38f7-442e-92cd-fca05de3ec44\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DATE2</th>\n","      <th>AvgSeaLvlPress</th>\n","      <th>AvgAltimeter</th>\n","      <th>AvgWetBulbTemp</th>\n","      <th>AvgRelHumidity</th>\n","      <th>AvgDewPtTemp</th>\n","      <th>AvgDryBulbTemp</th>\n","      <th>AvgVisibility</th>\n","      <th>TotalPrecipitation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2010-01-01</td>\n","      <td>30.35</td>\n","      <td>30.29</td>\n","      <td>9.46</td>\n","      <td>69.11</td>\n","      <td>3.00</td>\n","      <td>11.39</td>\n","      <td>9.45</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2010-01-02</td>\n","      <td>30.48</td>\n","      <td>30.41</td>\n","      <td>4.79</td>\n","      <td>62.39</td>\n","      <td>-3.79</td>\n","      <td>6.61</td>\n","      <td>9.75</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2010-01-03</td>\n","      <td>30.46</td>\n","      <td>30.39</td>\n","      <td>8.71</td>\n","      <td>66.35</td>\n","      <td>1.48</td>\n","      <td>10.68</td>\n","      <td>9.64</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2010-01-04</td>\n","      <td>30.32</td>\n","      <td>30.26</td>\n","      <td>11.91</td>\n","      <td>70.24</td>\n","      <td>5.74</td>\n","      <td>13.79</td>\n","      <td>9.85</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2010-01-05</td>\n","      <td>30.25</td>\n","      <td>30.19</td>\n","      <td>15.66</td>\n","      <td>70.57</td>\n","      <td>9.71</td>\n","      <td>17.86</td>\n","      <td>8.99</td>\n","      <td>0.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-85cd5756-38f7-442e-92cd-fca05de3ec44')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-85cd5756-38f7-442e-92cd-fca05de3ec44 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-85cd5756-38f7-442e-92cd-fca05de3ec44');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-da6d17e0-747a-44b8-a2ce-324c0a2be93b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-da6d17e0-747a-44b8-a2ce-324c0a2be93b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-da6d17e0-747a-44b8-a2ce-324c0a2be93b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 3652,\n  \"fields\": [\n    {\n      \"column\": \"DATE2\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-01-01 00:00:00\",\n        \"max\": \"2019-12-31 00:00:00\",\n        \"num_unique_values\": 3652,\n        \"samples\": [\n          \"2013-08-06 00:00:00\",\n          \"2014-08-02 00:00:00\",\n          \"2010-08-18 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgSeaLvlPress\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 2029,\n        \"samples\": [\n          30.131071428571428,\n          29.712857142857143,\n          30.06642857142857\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgAltimeter\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 2981,\n        \"samples\": [\n          29.941632653061227,\n          30.122,\n          30.049583333333334\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgWetBulbTemp\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 3009,\n        \"samples\": [\n          31.642857142857142,\n          40.861111111111114,\n          38.964285714285715\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgRelHumidity\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 2674,\n        \"samples\": [\n          81.9047619047619,\n          42.607142857142854,\n          56.642857142857146\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgDewPtTemp\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 3029,\n        \"samples\": [\n          58.07142857142857,\n          60.83870967741935,\n          61.41935483870968\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgDryBulbTemp\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 3031,\n        \"samples\": [\n          74.71428571428571,\n          68.82142857142857,\n          78.75757575757575\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgVisibility\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 1711,\n        \"samples\": [\n          5.402682926829268,\n          9.128648648648648,\n          5.146888888888888\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TotalPrecipitation\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 291,\n        \"samples\": [\n          0.9400000000000001,\n          2.92,\n          4.33\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["df2 = pd.read_csv(dir + 'NOAA/3559739_MDW_2010_2019.csv', dtype='string')\n","df.info(verbose=True)"],"metadata":{"id":"jdrD4ul0i_JB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718640026229,"user_tz":300,"elapsed":5060,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"400375fa-f3c6-4988-a269-fd53e32a904f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3652 entries, 0 to 3651\n","Data columns (total 9 columns):\n"," #   Column              Non-Null Count  Dtype         \n","---  ------              --------------  -----         \n"," 0   DATE2               3652 non-null   datetime64[ns]\n"," 1   AvgSeaLvlPress      3652 non-null   Float64       \n"," 2   AvgAltimeter        3652 non-null   Float64       \n"," 3   AvgWetBulbTemp      3652 non-null   Float64       \n"," 4   AvgRelHumidity      3652 non-null   Float64       \n"," 5   AvgDewPtTemp        3652 non-null   Float64       \n"," 6   AvgDryBulbTemp      3652 non-null   Float64       \n"," 7   AvgVisibility       3652 non-null   Float64       \n"," 8   TotalPrecipitation  3652 non-null   Float64       \n","dtypes: Float64(8), datetime64[ns](1)\n","memory usage: 285.4 KB\n"]}]},{"cell_type":"markdown","source":["# Flotsam"],"metadata":{"id":"inQDfyNXw0q6"}},{"cell_type":"code","source":[],"metadata":{"id":"nyZlBqUfw1yZ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Keep select columns and all Daily"],"metadata":{"id":"sy9ZUpGaST5D"}},{"cell_type":"code","source":["# List of columns to keep\n","columns_to_keep = ['STATION', 'DATE'] + [col for col in mdw.columns if col.startswith('Daily')]\n","\n","# Filter the DataFrame to keep only the specified columns\n","mdwD = mdw[columns_to_keep]\n","\n","daily_columns = [col for col in mdwD.columns if col.startswith('Daily')]\n","mdwD[daily_columns] = mdwD[daily_columns].apply(pd.to_numeric, errors='coerce')\n","\n","columns_with_nulls = mdwD[daily_columns].columns[mdwD[daily_columns].isnull().any()]\n","\n","mdwD.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":427},"id":"kyCbVIK_VPyf","executionInfo":{"status":"ok","timestamp":1718640033400,"user_tz":300,"elapsed":1008,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"fe3cec58-0f76-49f0-ff6c-6f453887ba32"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-17-dc6741b73bf9>:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  mdwD[daily_columns] = mdwD[daily_columns].apply(pd.to_numeric, errors='coerce')\n"]},{"output_type":"execute_result","data":{"text/plain":["       DailyAverageDewPointTemperature  DailyAverageDryBulbTemperature  \\\n","count                             0.00                         3590.00   \n","mean                              <NA>                           52.58   \n","std                               <NA>                           20.26   \n","min                               <NA>                          -16.00   \n","25%                               <NA>                           37.00   \n","50%                               <NA>                           53.00   \n","75%                               <NA>                           71.00   \n","max                               <NA>                           94.00   \n","\n","       DailyAverageRelativeHumidity  DailyAverageSeaLevelPressure  DailyAverageStationPressure  \\\n","count                          0.00                          0.00                      3639.00   \n","mean                           <NA>                          <NA>                        29.35   \n","std                            <NA>                          <NA>                         0.20   \n","min                            <NA>                          <NA>                        28.61   \n","25%                            <NA>                          <NA>                        29.23   \n","50%                            <NA>                          <NA>                        29.34   \n","75%                            <NA>                          <NA>                        29.47   \n","max                            <NA>                          <NA>                        30.07   \n","\n","       DailyAverageWetBulbTemperature  DailyAverageWindSpeed  DailyCoolingDegreeDays  \\\n","count                            0.00                3645.00                 3590.00   \n","mean                             <NA>                   9.72                    3.39   \n","std                              <NA>                   3.57                    5.68   \n","min                              <NA>                   1.70                    0.00   \n","25%                              <NA>                   7.10                    0.00   \n","50%                              <NA>                   9.30                    0.00   \n","75%                              <NA>                  11.90                    6.00   \n","max                              <NA>                  26.00                   29.00   \n","\n","       DailyDepartureFromNormalAverageTemperature  DailyHeatingDegreeDays  \\\n","count                                        0.00                 3590.00   \n","mean                                         <NA>                   15.80   \n","std                                          <NA>                   16.47   \n","min                                          <NA>                    0.00   \n","25%                                          <NA>                    0.00   \n","50%                                          <NA>                   12.00   \n","75%                                          <NA>                   28.00   \n","max                                          <NA>                   81.00   \n","\n","       DailyMaximumDryBulbTemperature  DailyMinimumDryBulbTemperature  DailyPeakWindDirection  \\\n","count                         3606.00                         3610.00                 3525.00   \n","mean                            60.37                           44.33                  189.63   \n","std                             21.45                           19.50                  102.35   \n","min                             -9.00                          -22.00                   10.00   \n","25%                             43.00                           30.00                   90.00   \n","50%                             62.00                           44.00                  200.00   \n","75%                             80.00                           62.00                  270.00   \n","max                            104.00                           83.00                  360.00   \n","\n","       DailyPeakWindSpeed  DailyPrecipitation  DailySnowDepth  DailySnowfall  \\\n","count             3525.00             2951.00            0.00           0.00   \n","mean                26.53                0.13            <NA>           <NA>   \n","std                  8.13                0.33            <NA>           <NA>   \n","min                  9.00                0.00            <NA>           <NA>   \n","25%                 21.00                0.00            <NA>           <NA>   \n","50%                 25.00                0.00            <NA>           <NA>   \n","75%                 31.00                0.08            <NA>           <NA>   \n","max                 75.00                5.20            <NA>           <NA>   \n","\n","       DailySustainedWindDirection  DailySustainedWindSpeed  DailyWeather  \n","count                      3623.00                  3623.00          0.00  \n","mean                        192.63                    20.06          <NA>  \n","std                         104.13                     6.02          <NA>  \n","min                          10.00                     7.00          <NA>  \n","25%                          90.00                    16.00          <NA>  \n","50%                         210.00                    20.00          <NA>  \n","75%                         280.00                    24.00          <NA>  \n","max                         360.00                    53.00          <NA>  "],"text/html":["\n","  <div id=\"df-73d334ee-82cb-4f97-8417-89bdb67e3cc5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DailyAverageDewPointTemperature</th>\n","      <th>DailyAverageDryBulbTemperature</th>\n","      <th>DailyAverageRelativeHumidity</th>\n","      <th>DailyAverageSeaLevelPressure</th>\n","      <th>DailyAverageStationPressure</th>\n","      <th>DailyAverageWetBulbTemperature</th>\n","      <th>DailyAverageWindSpeed</th>\n","      <th>DailyCoolingDegreeDays</th>\n","      <th>DailyDepartureFromNormalAverageTemperature</th>\n","      <th>DailyHeatingDegreeDays</th>\n","      <th>DailyMaximumDryBulbTemperature</th>\n","      <th>DailyMinimumDryBulbTemperature</th>\n","      <th>DailyPeakWindDirection</th>\n","      <th>DailyPeakWindSpeed</th>\n","      <th>DailyPrecipitation</th>\n","      <th>DailySnowDepth</th>\n","      <th>DailySnowfall</th>\n","      <th>DailySustainedWindDirection</th>\n","      <th>DailySustainedWindSpeed</th>\n","      <th>DailyWeather</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>0.00</td>\n","      <td>3590.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>3639.00</td>\n","      <td>0.00</td>\n","      <td>3645.00</td>\n","      <td>3590.00</td>\n","      <td>0.00</td>\n","      <td>3590.00</td>\n","      <td>3606.00</td>\n","      <td>3610.00</td>\n","      <td>3525.00</td>\n","      <td>3525.00</td>\n","      <td>2951.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>3623.00</td>\n","      <td>3623.00</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>&lt;NA&gt;</td>\n","      <td>52.58</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>29.35</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>9.72</td>\n","      <td>3.39</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>15.80</td>\n","      <td>60.37</td>\n","      <td>44.33</td>\n","      <td>189.63</td>\n","      <td>26.53</td>\n","      <td>0.13</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>192.63</td>\n","      <td>20.06</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>&lt;NA&gt;</td>\n","      <td>20.26</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>0.20</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>3.57</td>\n","      <td>5.68</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>16.47</td>\n","      <td>21.45</td>\n","      <td>19.50</td>\n","      <td>102.35</td>\n","      <td>8.13</td>\n","      <td>0.33</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>104.13</td>\n","      <td>6.02</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>&lt;NA&gt;</td>\n","      <td>-16.00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>28.61</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>1.70</td>\n","      <td>0.00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>0.00</td>\n","      <td>-9.00</td>\n","      <td>-22.00</td>\n","      <td>10.00</td>\n","      <td>9.00</td>\n","      <td>0.00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>10.00</td>\n","      <td>7.00</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>&lt;NA&gt;</td>\n","      <td>37.00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>29.23</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>7.10</td>\n","      <td>0.00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>0.00</td>\n","      <td>43.00</td>\n","      <td>30.00</td>\n","      <td>90.00</td>\n","      <td>21.00</td>\n","      <td>0.00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>90.00</td>\n","      <td>16.00</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>&lt;NA&gt;</td>\n","      <td>53.00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>29.34</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>9.30</td>\n","      <td>0.00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>12.00</td>\n","      <td>62.00</td>\n","      <td>44.00</td>\n","      <td>200.00</td>\n","      <td>25.00</td>\n","      <td>0.00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>210.00</td>\n","      <td>20.00</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>&lt;NA&gt;</td>\n","      <td>71.00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>29.47</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>11.90</td>\n","      <td>6.00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>28.00</td>\n","      <td>80.00</td>\n","      <td>62.00</td>\n","      <td>270.00</td>\n","      <td>31.00</td>\n","      <td>0.08</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>280.00</td>\n","      <td>24.00</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>&lt;NA&gt;</td>\n","      <td>94.00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>30.07</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>26.00</td>\n","      <td>29.00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>81.00</td>\n","      <td>104.00</td>\n","      <td>83.00</td>\n","      <td>360.00</td>\n","      <td>75.00</td>\n","      <td>5.20</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>360.00</td>\n","      <td>53.00</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-73d334ee-82cb-4f97-8417-89bdb67e3cc5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-73d334ee-82cb-4f97-8417-89bdb67e3cc5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-73d334ee-82cb-4f97-8417-89bdb67e3cc5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fd7c6fe4-339e-424a-9433-539917bc6b65\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fd7c6fe4-339e-424a-9433-539917bc6b65')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fd7c6fe4-339e-424a-9433-539917bc6b65 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"mdwD\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"DailyAverageDewPointTemperature\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyAverageDryBulbTemperature\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          52.5816155988858\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyAverageRelativeHumidity\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyAverageSeaLevelPressure\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyAverageStationPressure\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          29.34786205001371\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyAverageWetBulbTemperature\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyAverageWindSpeed\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          9.719917695473246\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyCoolingDegreeDays\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          3590.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyDepartureFromNormalAverageTemperature\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyHeatingDegreeDays\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          3590.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyMaximumDryBulbTemperature\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          60.37132556849695\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyMinimumDryBulbTemperature\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          44.33434903047091\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyPeakWindDirection\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          189.63120567375887\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyPeakWindSpeed\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          26.529078014184396\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyPrecipitation\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2951.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailySnowDepth\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailySnowfall\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailySustainedWindDirection\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          192.6276566381452\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailySustainedWindSpeed\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          20.05823902842948\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyWeather\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["mdwD.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XbFMuOh2cRQe","executionInfo":{"status":"ok","timestamp":1718640037687,"user_tz":300,"elapsed":353,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"66cf9938-73a0-4433-9e8a-89ba84c2828d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 124472 entries, 0 to 124471\n","Data columns (total 22 columns):\n"," #   Column                                      Non-Null Count   Dtype  \n","---  ------                                      --------------   -----  \n"," 0   STATION                                     124472 non-null  string \n"," 1   DATE                                        124472 non-null  string \n"," 2   DailyAverageDewPointTemperature             0 non-null       Float64\n"," 3   DailyAverageDryBulbTemperature              3590 non-null    Int64  \n"," 4   DailyAverageRelativeHumidity                0 non-null       Float64\n"," 5   DailyAverageSeaLevelPressure                0 non-null       Float64\n"," 6   DailyAverageStationPressure                 3639 non-null    Float64\n"," 7   DailyAverageWetBulbTemperature              0 non-null       Float64\n"," 8   DailyAverageWindSpeed                       3645 non-null    Float64\n"," 9   DailyCoolingDegreeDays                      3590 non-null    Int64  \n"," 10  DailyDepartureFromNormalAverageTemperature  0 non-null       Float64\n"," 11  DailyHeatingDegreeDays                      3590 non-null    Int64  \n"," 12  DailyMaximumDryBulbTemperature              3606 non-null    Int64  \n"," 13  DailyMinimumDryBulbTemperature              3610 non-null    Int64  \n"," 14  DailyPeakWindDirection                      3525 non-null    Int64  \n"," 15  DailyPeakWindSpeed                          3525 non-null    Int64  \n"," 16  DailyPrecipitation                          2951 non-null    Float64\n"," 17  DailySnowDepth                              0 non-null       Float64\n"," 18  DailySnowfall                               0 non-null       Float64\n"," 19  DailySustainedWindDirection                 3623 non-null    Int64  \n"," 20  DailySustainedWindSpeed                     3623 non-null    Int64  \n"," 21  DailyWeather                                0 non-null       Float64\n","dtypes: Float64(11), Int64(9), string(2)\n","memory usage: 23.3 MB\n"]}]},{"cell_type":"code","source":["#Missingness table\n","\n","df = mdwD\n","\n","count = df.isnull().sum()\n","percentage = 100 * df.isnull().sum() / len(df)\n","types = df.dtypes\n","missing_table = pd.concat([count, percentage, types], axis=1)\n","missing_table.columns = ['Count', 'Percentage', 'Type']\n","missing_table = missing_table.sort_values(by=['Percentage'], ascending=False)\n","missing_table.tail(30)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":739},"id":"nTpHLpApcDKq","executionInfo":{"status":"ok","timestamp":1718640041966,"user_tz":300,"elapsed":423,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"24c00243-c35a-4b78-ef02-d685af0094fb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                             Count  Percentage            Type\n","DailyWeather                                124472      100.00         Float64\n","DailyAverageDewPointTemperature             124472      100.00         Float64\n","DailySnowfall                               124472      100.00         Float64\n","DailyAverageRelativeHumidity                124472      100.00         Float64\n","DailyAverageSeaLevelPressure                124472      100.00         Float64\n","DailySnowDepth                              124472      100.00         Float64\n","DailyAverageWetBulbTemperature              124472      100.00         Float64\n","DailyDepartureFromNormalAverageTemperature  124472      100.00         Float64\n","DailyPrecipitation                          121521       97.63         Float64\n","DailyPeakWindDirection                      120947       97.17           Int64\n","DailyPeakWindSpeed                          120947       97.17           Int64\n","DailyHeatingDegreeDays                      120882       97.12           Int64\n","DailyCoolingDegreeDays                      120882       97.12           Int64\n","DailyAverageDryBulbTemperature              120882       97.12           Int64\n","DailyMaximumDryBulbTemperature              120866       97.10           Int64\n","DailyMinimumDryBulbTemperature              120862       97.10           Int64\n","DailySustainedWindDirection                 120849       97.09           Int64\n","DailySustainedWindSpeed                     120849       97.09           Int64\n","DailyAverageStationPressure                 120833       97.08         Float64\n","DailyAverageWindSpeed                       120827       97.07         Float64\n","DATE                                             0        0.00  string[python]\n","STATION                                          0        0.00  string[python]"],"text/html":["\n","  <div id=\"df-9d27a073-c145-499a-98ab-a9c9d30f445e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Count</th>\n","      <th>Percentage</th>\n","      <th>Type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>DailyWeather</th>\n","      <td>124472</td>\n","      <td>100.00</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyAverageDewPointTemperature</th>\n","      <td>124472</td>\n","      <td>100.00</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>DailySnowfall</th>\n","      <td>124472</td>\n","      <td>100.00</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyAverageRelativeHumidity</th>\n","      <td>124472</td>\n","      <td>100.00</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyAverageSeaLevelPressure</th>\n","      <td>124472</td>\n","      <td>100.00</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>DailySnowDepth</th>\n","      <td>124472</td>\n","      <td>100.00</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyAverageWetBulbTemperature</th>\n","      <td>124472</td>\n","      <td>100.00</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyDepartureFromNormalAverageTemperature</th>\n","      <td>124472</td>\n","      <td>100.00</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyPrecipitation</th>\n","      <td>121521</td>\n","      <td>97.63</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyPeakWindDirection</th>\n","      <td>120947</td>\n","      <td>97.17</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyPeakWindSpeed</th>\n","      <td>120947</td>\n","      <td>97.17</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyHeatingDegreeDays</th>\n","      <td>120882</td>\n","      <td>97.12</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyCoolingDegreeDays</th>\n","      <td>120882</td>\n","      <td>97.12</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyAverageDryBulbTemperature</th>\n","      <td>120882</td>\n","      <td>97.12</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyMaximumDryBulbTemperature</th>\n","      <td>120866</td>\n","      <td>97.10</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyMinimumDryBulbTemperature</th>\n","      <td>120862</td>\n","      <td>97.10</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>DailySustainedWindDirection</th>\n","      <td>120849</td>\n","      <td>97.09</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>DailySustainedWindSpeed</th>\n","      <td>120849</td>\n","      <td>97.09</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyAverageStationPressure</th>\n","      <td>120833</td>\n","      <td>97.08</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyAverageWindSpeed</th>\n","      <td>120827</td>\n","      <td>97.07</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>DATE</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>STATION</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>string[python]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d27a073-c145-499a-98ab-a9c9d30f445e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9d27a073-c145-499a-98ab-a9c9d30f445e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9d27a073-c145-499a-98ab-a9c9d30f445e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-380bd551-969a-4780-9730-d5f632632f9e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-380bd551-969a-4780-9730-d5f632632f9e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-380bd551-969a-4780-9730-d5f632632f9e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"missing_table\",\n  \"rows\": 22,\n  \"fields\": [\n    {\n      \"column\": \"Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 36039,\n        \"min\": 0,\n        \"max\": 124472,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          120827,\n          121521,\n          120862\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Percentage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.954166194451066,\n        \"min\": 0.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          97.07163056751719,\n          97.62918568031364,\n          97.0997493412173\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Float64\",\n          \"Int64\",\n          \"string\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["# Daily average wind speed is most populated daily column\n","\n","mdwD = mdwD[mdwD['DailyAverageWindSpeed'].notnull()]\n","\n","# Clean date\n","mdwD['DATE'] = pd.to_datetime(mdwD['DATE'])\n","mdwD['DATE'] = mdwD['DATE'].dt.date\n","\n","# Drop empty columns\n","mdwD = mdwD.dropna(axis=1, how='all')\n","\n","mdwD.info(verbose=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"26hK9UI0dMEi","executionInfo":{"status":"ok","timestamp":1718640046234,"user_tz":300,"elapsed":317,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"409c1a96-3580-4ae7-dc8a-b0b67292bffe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 3645 entries, 28 to 124470\n","Data columns (total 14 columns):\n"," #   Column                          Non-Null Count  Dtype  \n","---  ------                          --------------  -----  \n"," 0   STATION                         3645 non-null   string \n"," 1   DATE                            3645 non-null   object \n"," 2   DailyAverageDryBulbTemperature  3589 non-null   Int64  \n"," 3   DailyAverageStationPressure     3636 non-null   Float64\n"," 4   DailyAverageWindSpeed           3645 non-null   Float64\n"," 5   DailyCoolingDegreeDays          3589 non-null   Int64  \n"," 6   DailyHeatingDegreeDays          3589 non-null   Int64  \n"," 7   DailyMaximumDryBulbTemperature  3602 non-null   Int64  \n"," 8   DailyMinimumDryBulbTemperature  3609 non-null   Int64  \n"," 9   DailyPeakWindDirection          3521 non-null   Int64  \n"," 10  DailyPeakWindSpeed              3521 non-null   Int64  \n"," 11  DailyPrecipitation              2949 non-null   Float64\n"," 12  DailySustainedWindDirection     3619 non-null   Int64  \n"," 13  DailySustainedWindSpeed         3619 non-null   Int64  \n","dtypes: Float64(3), Int64(9), object(1), string(1)\n","memory usage: 469.9+ KB\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-20-ac1b9eaa696c>:6: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  mdwD['DATE'] = pd.to_datetime(mdwD['DATE'])\n","<ipython-input-20-ac1b9eaa696c>:7: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  mdwD['DATE'] = mdwD['DATE'].dt.date\n"]}]},{"cell_type":"code","source":["#Missingness table\n","\n","df = mdwD\n","\n","count = df.isnull().sum()\n","percentage = 100 * df.isnull().sum() / len(df)\n","types = df.dtypes\n","missing_table = pd.concat([count, percentage, types], axis=1)\n","missing_table.columns = ['Count', 'Percentage', 'Type']\n","missing_table = missing_table.sort_values(by=['Percentage'], ascending=False)\n","missing_table.tail(30)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"5Ix3LtYlwpnj","executionInfo":{"status":"ok","timestamp":1718640049452,"user_tz":300,"elapsed":347,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"21a34137-d2dd-4945-f0df-309b3dc1b9cd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                Count  Percentage            Type\n","DailyPrecipitation                696       19.09         Float64\n","DailyPeakWindDirection            124        3.40           Int64\n","DailyPeakWindSpeed                124        3.40           Int64\n","DailyAverageDryBulbTemperature     56        1.54           Int64\n","DailyCoolingDegreeDays             56        1.54           Int64\n","DailyHeatingDegreeDays             56        1.54           Int64\n","DailyMaximumDryBulbTemperature     43        1.18           Int64\n","DailyMinimumDryBulbTemperature     36        0.99           Int64\n","DailySustainedWindDirection        26        0.71           Int64\n","DailySustainedWindSpeed            26        0.71           Int64\n","DailyAverageStationPressure         9        0.25         Float64\n","STATION                             0        0.00  string[python]\n","DATE                                0        0.00          object\n","DailyAverageWindSpeed               0        0.00         Float64"],"text/html":["\n","  <div id=\"df-33153364-221b-4702-bffe-5b5e4de0409e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Count</th>\n","      <th>Percentage</th>\n","      <th>Type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>DailyPrecipitation</th>\n","      <td>696</td>\n","      <td>19.09</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyPeakWindDirection</th>\n","      <td>124</td>\n","      <td>3.40</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyPeakWindSpeed</th>\n","      <td>124</td>\n","      <td>3.40</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyAverageDryBulbTemperature</th>\n","      <td>56</td>\n","      <td>1.54</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyCoolingDegreeDays</th>\n","      <td>56</td>\n","      <td>1.54</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyHeatingDegreeDays</th>\n","      <td>56</td>\n","      <td>1.54</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyMaximumDryBulbTemperature</th>\n","      <td>43</td>\n","      <td>1.18</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyMinimumDryBulbTemperature</th>\n","      <td>36</td>\n","      <td>0.99</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>DailySustainedWindDirection</th>\n","      <td>26</td>\n","      <td>0.71</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>DailySustainedWindSpeed</th>\n","      <td>26</td>\n","      <td>0.71</td>\n","      <td>Int64</td>\n","    </tr>\n","    <tr>\n","      <th>DailyAverageStationPressure</th>\n","      <td>9</td>\n","      <td>0.25</td>\n","      <td>Float64</td>\n","    </tr>\n","    <tr>\n","      <th>STATION</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>string[python]</td>\n","    </tr>\n","    <tr>\n","      <th>DATE</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>DailyAverageWindSpeed</th>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>Float64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-33153364-221b-4702-bffe-5b5e4de0409e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-33153364-221b-4702-bffe-5b5e4de0409e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-33153364-221b-4702-bffe-5b5e4de0409e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8416bd48-d2a0-4fa9-86ab-21c5ab0df970\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8416bd48-d2a0-4fa9-86ab-21c5ab0df970')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8416bd48-d2a0-4fa9-86ab-21c5ab0df970 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"missing_table\",\n  \"rows\": 14,\n  \"fields\": [\n    {\n      \"column\": \"Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 179,\n        \"min\": 0,\n        \"max\": 696,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          124,\n          26,\n          696\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Percentage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.914704816972146,\n        \"min\": 0.0,\n        \"max\": 19.094650205761315,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.401920438957476,\n          0.7133058984910837,\n          19.094650205761315\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Int64\",\n          \"object\",\n          \"Float64\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["mdwD.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"oWwKKu9bdpsF","executionInfo":{"status":"ok","timestamp":1718640056715,"user_tz":300,"elapsed":3,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"70c43569-d9a8-4df2-c58d-76c47d764fe7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       DailyAverageDryBulbTemperature  DailyAverageStationPressure  DailyAverageWindSpeed  \\\n","count                         3589.00                      3636.00                3645.00   \n","mean                            52.58                        29.35                   9.72   \n","std                             20.27                         0.20                   3.57   \n","min                            -16.00                        28.61                   1.70   \n","25%                             37.00                        29.23                   7.10   \n","50%                             53.00                        29.34                   9.30   \n","75%                             71.00                        29.47                  11.90   \n","max                             94.00                        30.07                  26.00   \n","\n","       DailyCoolingDegreeDays  DailyHeatingDegreeDays  DailyMaximumDryBulbTemperature  \\\n","count                 3589.00                 3589.00                         3602.00   \n","mean                     3.39                   15.81                           60.37   \n","std                      5.68                   16.47                           21.44   \n","min                      0.00                    0.00                           -9.00   \n","25%                      0.00                    0.00                           43.00   \n","50%                      0.00                   12.00                           62.00   \n","75%                      6.00                   28.00                           80.00   \n","max                     29.00                   81.00                          104.00   \n","\n","       DailyMinimumDryBulbTemperature  DailyPeakWindDirection  DailyPeakWindSpeed  \\\n","count                         3609.00                 3521.00             3521.00   \n","mean                            44.33                  189.57               26.53   \n","std                             19.50                  102.37                8.13   \n","min                            -22.00                   10.00                9.00   \n","25%                             30.00                   90.00               21.00   \n","50%                             44.00                  200.00               25.00   \n","75%                             62.00                  270.00               31.00   \n","max                             83.00                  360.00               75.00   \n","\n","       DailyPrecipitation  DailySustainedWindDirection  DailySustainedWindSpeed  \n","count             2949.00                      3619.00                  3619.00  \n","mean                 0.13                       192.58                    20.06  \n","std                  0.33                       104.16                     6.02  \n","min                  0.00                        10.00                     7.00  \n","25%                  0.00                        90.00                    16.00  \n","50%                  0.00                       210.00                    20.00  \n","75%                  0.08                       280.00                    24.00  \n","max                  5.20                       360.00                    53.00  "],"text/html":["\n","  <div id=\"df-1929d274-0f09-4400-8078-edda5f560e71\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DailyAverageDryBulbTemperature</th>\n","      <th>DailyAverageStationPressure</th>\n","      <th>DailyAverageWindSpeed</th>\n","      <th>DailyCoolingDegreeDays</th>\n","      <th>DailyHeatingDegreeDays</th>\n","      <th>DailyMaximumDryBulbTemperature</th>\n","      <th>DailyMinimumDryBulbTemperature</th>\n","      <th>DailyPeakWindDirection</th>\n","      <th>DailyPeakWindSpeed</th>\n","      <th>DailyPrecipitation</th>\n","      <th>DailySustainedWindDirection</th>\n","      <th>DailySustainedWindSpeed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>3589.00</td>\n","      <td>3636.00</td>\n","      <td>3645.00</td>\n","      <td>3589.00</td>\n","      <td>3589.00</td>\n","      <td>3602.00</td>\n","      <td>3609.00</td>\n","      <td>3521.00</td>\n","      <td>3521.00</td>\n","      <td>2949.00</td>\n","      <td>3619.00</td>\n","      <td>3619.00</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>52.58</td>\n","      <td>29.35</td>\n","      <td>9.72</td>\n","      <td>3.39</td>\n","      <td>15.81</td>\n","      <td>60.37</td>\n","      <td>44.33</td>\n","      <td>189.57</td>\n","      <td>26.53</td>\n","      <td>0.13</td>\n","      <td>192.58</td>\n","      <td>20.06</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>20.27</td>\n","      <td>0.20</td>\n","      <td>3.57</td>\n","      <td>5.68</td>\n","      <td>16.47</td>\n","      <td>21.44</td>\n","      <td>19.50</td>\n","      <td>102.37</td>\n","      <td>8.13</td>\n","      <td>0.33</td>\n","      <td>104.16</td>\n","      <td>6.02</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>-16.00</td>\n","      <td>28.61</td>\n","      <td>1.70</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>-9.00</td>\n","      <td>-22.00</td>\n","      <td>10.00</td>\n","      <td>9.00</td>\n","      <td>0.00</td>\n","      <td>10.00</td>\n","      <td>7.00</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>37.00</td>\n","      <td>29.23</td>\n","      <td>7.10</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>43.00</td>\n","      <td>30.00</td>\n","      <td>90.00</td>\n","      <td>21.00</td>\n","      <td>0.00</td>\n","      <td>90.00</td>\n","      <td>16.00</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>53.00</td>\n","      <td>29.34</td>\n","      <td>9.30</td>\n","      <td>0.00</td>\n","      <td>12.00</td>\n","      <td>62.00</td>\n","      <td>44.00</td>\n","      <td>200.00</td>\n","      <td>25.00</td>\n","      <td>0.00</td>\n","      <td>210.00</td>\n","      <td>20.00</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>71.00</td>\n","      <td>29.47</td>\n","      <td>11.90</td>\n","      <td>6.00</td>\n","      <td>28.00</td>\n","      <td>80.00</td>\n","      <td>62.00</td>\n","      <td>270.00</td>\n","      <td>31.00</td>\n","      <td>0.08</td>\n","      <td>280.00</td>\n","      <td>24.00</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>94.00</td>\n","      <td>30.07</td>\n","      <td>26.00</td>\n","      <td>29.00</td>\n","      <td>81.00</td>\n","      <td>104.00</td>\n","      <td>83.00</td>\n","      <td>360.00</td>\n","      <td>75.00</td>\n","      <td>5.20</td>\n","      <td>360.00</td>\n","      <td>53.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1929d274-0f09-4400-8078-edda5f560e71')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1929d274-0f09-4400-8078-edda5f560e71 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1929d274-0f09-4400-8078-edda5f560e71');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e37dbb5d-3bcf-427a-9e43-76c9b84964a9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e37dbb5d-3bcf-427a-9e43-76c9b84964a9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e37dbb5d-3bcf-427a-9e43-76c9b84964a9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"mdwD\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"DailyAverageDryBulbTemperature\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          52.58122039565338,\n          53.0,\n          3589.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyAverageStationPressure\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          29.347857535753572,\n          29.34,\n          3636.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyAverageWindSpeed\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          9.719917695473251,\n          9.3,\n          3645.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyCoolingDegreeDays\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          3589.0,\n          3.3864586235720258,\n          29.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyHeatingDegreeDays\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          3589.0,\n          15.80523822791864,\n          28.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyMaximumDryBulbTemperature\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          60.37007218212104,\n          62.0,\n          3602.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyMinimumDryBulbTemperature\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          44.333333333333336,\n          44.0,\n          3609.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyPeakWindDirection\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          189.5711445612042,\n          200.0,\n          3521.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyPeakWindSpeed\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          26.527690996875886,\n          25.0,\n          3521.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailyPrecipitation\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2949.0,\n          0.12700915564598153,\n          5.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailySustainedWindDirection\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          192.5780602376347,\n          210.0,\n          3619.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DailySustainedWindSpeed\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          20.058027079303674,\n          20.0,\n          3619.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":22}]}]}