{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Pollution and industrial sites, categorized\n","## Sandra Tilmon\n","## 12/13/2023\n","\n","\n","#### Change log:\n","Date        Change\n","\n"],"metadata":{"id":"itC2ICMilZ_x"}},{"cell_type":"markdown","source":["# Setup"],"metadata":{"id":"-GqAQ8Q3lkOJ"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","import math\n","import matplotlib\n","import matplotlib.pyplot as plt\n","import scipy.stats\n","\n","import seaborn as sns\n","\n","import os\n","import re\n","from functools import reduce\n","import requests\n","\n","import geopandas as gpd\n","from shapely.geometry import shape, Point\n","import geopy\n","from geopy.extra.rate_limiter import RateLimiter\n","from geopy import geocoders\n","from geopy.geocoders import GoogleV3\n","\n","from timeit import default_timer as timer\n","\n","pd.set_option('display.max_rows', None)\n","pd.set_option('display.max_columns', None)\n","pd.set_option('display.width', None)\n","\n","# No scientific notation\n","pd.options.display.float_format = '{:.2f}'.format\n","\n","%matplotlib inline"],"metadata":{"id":"lzmZUVoxllfk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Mount drive\n","\n","from google.colab import drive\n","drive.mount('/content/gdrive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ha99rwsNlpTs","executionInfo":{"status":"ok","timestamp":1718640192044,"user_tz":300,"elapsed":20979,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"ced6073c-bd99-4655-bc32-9558ba3b4d29"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"code","source":["# Raw data sources\n","dir = '/content/gdrive/My Drive/Sociome_Folder/Data/'\n","print(dir)\n","\n","# Output curated datasets\n","curated = '/content/gdrive/My Drive/Sociome_Folder/Data Commons/Curated datasets/'\n","curated"],"metadata":{"id":"cuucKDCglpw3","executionInfo":{"status":"ok","timestamp":1718640195645,"user_tz":300,"elapsed":222,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"colab":{"base_uri":"https://localhost:8080/","height":53},"outputId":"d5f254a7-ee4c-428a-d6f6-cf269cd3cf9b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/gdrive/My Drive/Sociome_Folder/Data/\n"]},{"output_type":"execute_result","data":{"text/plain":["'/content/gdrive/My Drive/Sociome_Folder/Data Commons/Curated datasets/'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["# Empty list to collect dataframe names\n","\n","frames = []"],"metadata":{"id":"mdGKjXqPlrsB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# GIS"],"metadata":{"id":"jlf_pc6Lpv5K"}},{"cell_type":"markdown","source":["## Set CRS"],"metadata":{"id":"obgJSX2lqb3d"}},{"cell_type":"code","source":["crs = {'init' :'epsg:3435'}"],"metadata":{"id":"BsgXRCWeqaJU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Census tracts\n","\n","r = requests.get(\"https://data.cityofchicago.org/resource/74p9-q2aq.json\")\n","r.raise_for_status()\n","\n","data = r.json()\n","for d in data:\n","    d['the_geom'] = shape(d['the_geom'])\n","\n","tracts_shp = gpd.GeoDataFrame(data).set_geometry('the_geom', crs=crs)\n","\n","tracts_shp = tracts_shp.drop(columns=['statefp10', 'countyfp10', 'tractce10',\t'name10', 'namelsad10',\n","                                      'notes'])\n","\n","print(tracts_shp.crs)\n","print(tracts_shp.info())\n","tracts_shp.head()"],"metadata":{"id":"uaMn-knepxQB","executionInfo":{"status":"ok","timestamp":1718640204850,"user_tz":300,"elapsed":3060,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"colab":{"base_uri":"https://localhost:8080/","height":581},"outputId":"92dde55a-943d-43b5-f21d-ca266590f12e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/pyproj/crs/crs.py:141: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6\n","  in_crs_string = _prepare_from_proj_string(in_crs_string)\n"]},{"output_type":"stream","name":"stdout","text":["+init=epsg:3435 +type=crs\n","<class 'geopandas.geodataframe.GeoDataFrame'>\n","RangeIndex: 801 entries, 0 to 800\n","Data columns (total 4 columns):\n"," #   Column      Non-Null Count  Dtype   \n","---  ------      --------------  -----   \n"," 0   the_geom    801 non-null    geometry\n"," 1   geoid10     801 non-null    object  \n"," 2   commarea    801 non-null    object  \n"," 3   commarea_n  801 non-null    object  \n","dtypes: geometry(1), object(3)\n","memory usage: 25.2+ KB\n","None\n"]},{"output_type":"execute_result","data":{"text/plain":["                                            the_geom      geoid10 commarea commarea_n\n","0  MULTIPOLYGON (((-87.624 41.730, -87.624 41.730...  17031842400       44         44\n","1  MULTIPOLYGON (((-87.686 41.823, -87.686 41.823...  17031840300       59         59\n","2  MULTIPOLYGON (((-87.629 41.853, -87.629 41.853...  17031841100       34         34\n","3  MULTIPOLYGON (((-87.688 41.856, -87.688 41.856...  17031841200       31         31\n","4  MULTIPOLYGON (((-87.633 41.874, -87.633 41.874...  17031839000       32         32"],"text/html":["\n","  <div id=\"df-ff4bdfbe-52b0-4baa-801e-3a037e4b25fe\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>the_geom</th>\n","      <th>geoid10</th>\n","      <th>commarea</th>\n","      <th>commarea_n</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>MULTIPOLYGON (((-87.624 41.730, -87.624 41.730...</td>\n","      <td>17031842400</td>\n","      <td>44</td>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>MULTIPOLYGON (((-87.686 41.823, -87.686 41.823...</td>\n","      <td>17031840300</td>\n","      <td>59</td>\n","      <td>59</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>MULTIPOLYGON (((-87.629 41.853, -87.629 41.853...</td>\n","      <td>17031841100</td>\n","      <td>34</td>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>MULTIPOLYGON (((-87.688 41.856, -87.688 41.856...</td>\n","      <td>17031841200</td>\n","      <td>31</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>MULTIPOLYGON (((-87.633 41.874, -87.633 41.874...</td>\n","      <td>17031839000</td>\n","      <td>32</td>\n","      <td>32</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff4bdfbe-52b0-4baa-801e-3a037e4b25fe')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ff4bdfbe-52b0-4baa-801e-3a037e4b25fe button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ff4bdfbe-52b0-4baa-801e-3a037e4b25fe');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-147dc71c-831a-43ca-8f71-83bc83ffd637\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-147dc71c-831a-43ca-8f71-83bc83ffd637')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-147dc71c-831a-43ca-8f71-83bc83ffd637 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"tracts_shp","summary":"{\n  \"name\": \"tracts_shp\",\n  \"rows\": 801,\n  \"fields\": [\n    {\n      \"column\": \"the_geom\",\n      \"properties\": {\n        \"dtype\": \"geometry\",\n        \"num_unique_values\": 801,\n        \"samples\": [\n          \"MULTIPOLYGON (((-87.73316900001161 41.8004369999978, -87.73341299996063 41.80043400000931, -87.73378100004601 41.80042999996651, -87.73414600003778 41.80042599997371, -87.73439099999177 41.80042399998587, -87.73462999997105 41.8004210000207, -87.73500499997039 41.80041700001815, -87.73534899996919 41.800412000005856, -87.73542600002006 41.80041200000051, -87.73558900001046 41.80040599997181, -87.73580100000724 41.80039899997937, -87.73584200003388 41.800397999986906, -87.73622199997472 41.80039799999801, -87.73660200004454 41.80039600001969, -87.73685600004592 41.80039499996741, -87.73701799995779 41.800392999994614, -87.73750600000257 41.80038799997388, -87.73766900001692 41.80038699996615, -87.73773699998614 41.800385000006024, -87.73794400002124 41.80038199998311, -87.73801300003333 41.80038200000232, -87.73802099999051 41.80075100002855, -87.73804499999017 41.80185799996413, -87.73805400001548 41.80222699999992, -87.73806000004473 41.80257500000698, -87.73807800002838 41.80361999998702, -87.7380839999592 41.803968999995135, -87.73808500000627 41.80397600001797, -87.73808799996588 41.803997000016764, -87.7380900000305 41.8040050000248, -87.73809699996727 41.80437200001889, -87.73811800002925 41.805474999964225, -87.73812500000908 41.80584300001854, -87.73814099999709 41.806211000028455, -87.73818999996651 41.80731500000985, -87.73820700002769 41.807683999970685, -87.73799599996546 41.807685999992955, -87.7373640000296 41.80769500002432, -87.73715399996793 41.80769800000009, -87.73696799999246 41.80769999999611, -87.73688600003813 41.80769999996727, -87.7360849999817 41.807709999980695, -87.73581899995881 41.8077140000003, -87.73557400001322 41.80771699999294, -87.73520900002309 41.80772200002101, -87.73484100000145 41.80772599998204, -87.73459699998838 41.80773000002993, -87.73435100004514 41.807733000022765, -87.73398900002783 41.80773899996449, -87.73361499997525 41.80774300002481, -87.73337000003391 41.80774699999825, -87.73317199998868 41.807748999984426, -87.73257899996581 41.807757000003164, -87.73238200003749 41.8077599999641, -87.73235199997987 41.80776200002244, -87.73215599999263 41.80776199997403, -87.73108499995904 41.80777700001383, -87.72979299998016 41.80779300000788, -87.7297069999717 41.807793999993514, -87.72946000000631 41.807796000018605, -87.72872200003941 41.80780600000284, -87.72847600001998 41.80780899996715, -87.72823099995679 41.807812000006656, -87.72749899996508 41.80782199999982, -87.7272559999725 41.80782600001736, -87.72701099996232 41.80782799997642, -87.72627599995504 41.80783800000966, -87.726032000036 41.80784100002638, -87.72578599995788 41.80784299997508, -87.72505100000372 41.807851000025735, -87.72480699998505 41.807853999977965, -87.72469599997807 41.80785500002688, -87.7245629999686 41.807860000010784, -87.7241940000294 41.80787499998623, -87.72383100004551 41.807879999983086, -87.7235870000116 41.80788399996711, -87.72357499996937 41.807515000015435, -87.72357200004097 41.80741800003027, -87.7235520000273 41.80678600001062, -87.7235400000166 41.80640799997088, -87.72352900000209 41.80603900001548, -87.72351899995749 41.805672000026874, -87.72348900000605 41.804573000021264, -87.7234800000183 41.80420699998064, -87.7234679999905 41.8038409999746, -87.72344199999999 41.80296300002521, -87.72343599999186 41.8027429999864, -87.72342600004453 41.802378000023765, -87.72342399998219 41.802316999992655, -87.72341300004439 41.80196200001541, -87.72340799995781 41.80180099998044, -87.72338199998457 41.80089999998538, -87.72337300002708 41.800545999989744, -87.72386300002428 41.80053899997848, -87.72397799998576 41.800537999979724, -87.72533500000775 41.800522999998364, -87.72582599995677 41.80051800002836, -87.72606999996854 41.80051499999686, -87.72680300002808 41.800506999963524, -87.72704800002289 41.8005049999963, -87.7272920000262 41.800501999975864, -87.72802600000252 41.8004930000019, -87.7282710000046 41.80049099996449, -87.72827300004305 41.800581999997334, -87.72827900000047 41.80085500001771, -87.7282819999647 41.80094699997798, -87.7285259999923 41.80090900000261, -87.7289800000362 41.80083899996664, -87.72925799996229 41.80079599999894, -87.72950299996113 41.80075899999752, -87.72974700002649 41.80072099996398, -87.7304790000351 41.80060799999125, -87.73072399999559 41.80057099998929, -87.73084599999078 41.800552000008004, -87.73121199999505 41.80049599998997, -87.73133500002038 41.800478000014564, -87.73194499997729 41.800471999989185, -87.73242200000777 41.80046999998639, -87.73316900001161 41.8004369999978)))\",\n          \"MULTIPOLYGON (((-87.6638209999673 41.939764999973605, -87.6643049999844 41.93975600000284, -87.66445500003336 41.93975400000656, -87.6657570000239 41.93973600000657, -87.66624200001769 41.93972999999367, -87.66672500002096 41.939722999979665, -87.6675220000443 41.93971199999487, -87.66817700001133 41.93970299997136, -87.6686620000127 41.939697000025, -87.66866699997388 41.93987899999862, -87.66867499999597 41.940132999997935, -87.66867799997765 41.94042499998646, -87.66868000001986 41.9406079999888, -87.66868600000666 41.940791000020575, -87.6687049999894 41.941339999968385, -87.66871200003959 41.94152300000211, -87.66871700003755 41.94170200000828, -87.66873199997367 41.94224199996914, -87.66873800002115 41.94242199997058, -87.66874199997265 41.94260600002067, -87.66875700003764 41.94315800000706, -87.66876300001988 41.94334300000777, -87.66851999996315 41.94334600000341, -87.66815699998537 41.943350999966924, -87.66779400001293 41.9433580000017, -87.66755299996184 41.94336299999176, -87.66731000003062 41.94336700002582, -87.66695000003364 41.94337299998331, -87.66658399998022 41.943377000001924, -87.66634200001202 41.94338100002055, -87.66609899998657 41.94338399996826, -87.66573699996975 41.94338900001138, -87.66537299997812 41.94339500003017, -87.66513200003644 41.94339900002278, -87.66488800000387 41.94340200002551, -87.66454000000427 41.94340799999473, -87.66415899995835 41.94341399997621, -87.66391699998688 41.94341800002791, -87.66391199996019 41.94323499998472, -87.66389700002394 41.94268700001825, -87.66389200000697 41.94250500001212, -87.66388600001848 41.942321000016626, -87.66387100001982 41.9417709999761, -87.66386600000693 41.94158800001661, -87.66386100000163 41.94140399999026, -87.66384600003845 41.94085300000508, -87.6638419999799 41.94067000001509, -87.66383800004407 41.940488000012415, -87.66383300002147 41.94021899996669, -87.66382499999078 41.93994500001477, -87.6638209999673 41.939764999973605)))\",\n          \"MULTIPOLYGON (((-87.77014300002385 41.87070300002844, -87.76933499997388 41.87065399996402, -87.76904899996751 41.870648999972026, -87.76901900000762 41.8706469999876, -87.76863499997486 41.87063399997473, -87.76821099995657 41.87064199999589, -87.76781100001016 41.87067400002786, -87.76740500001559 41.87070100000744, -87.76716200000972 41.87072299998368, -87.76678200001068 41.87075800002484, -87.76620199998028 41.870823000020906, -87.76565699999176 41.870887000012495, -87.76496399999074 41.87097000002872, -87.7645400000298 41.87102000001011, -87.76454899996014 41.871071999988594, -87.76455900000559 41.8711229999728, -87.76456399999977 41.871150000008406, -87.76457000001781 41.87118100001422, -87.764579000008 41.871230999976156, -87.76459000004496 41.87128399998203, -87.76460900000392 41.87138499998739, -87.76460900004305 41.87138599999412, -87.76462999998633 41.871500999972945, -87.7646419999872 41.871612000016924, -87.7646459999674 41.87169599999199, -87.76465100002437 41.871800999976536, -87.76466000000006 41.872007999975914, -87.76466100002163 41.87202999999194, -87.76465200001599 41.87232100002727, -87.76463699996397 41.872409999998816, -87.76458499999056 41.87252800003142, -87.76458100000956 41.872619000006836, -87.7645800000302 41.872668999966436, -87.76458700002755 41.87282700001948, -87.76424700000149 41.8728319999803, -87.76397899999151 41.87283500003072, -87.76390600003316 41.872837000013824, -87.76322599996672 41.87284500002887, -87.76254500003279 41.87285299996645, -87.76215699999072 41.872857000014385, -87.76204800001678 41.87285899999457, -87.76155000002127 41.872865000028014, -87.76100299995711 41.872870000010025, -87.76072200003536 41.87287399999022, -87.75991299995978 41.872886000023605, -87.7588860000335 41.87289699998229, -87.7582419999549 41.8729060000313, -87.75778799995906 41.872912999975895, -87.7574150000405 41.87291600002852, -87.75689299996989 41.872922000013695, -87.75668600003775 41.87292500002925, -87.75595800000431 41.87293500002363, -87.75576600003404 41.872936999964764, -87.7555739999599 41.872938999995995, -87.75532700002994 41.87294000000303, -87.75518999997826 41.87294199998202, -87.75480600003306 41.87294599999368, -87.75450000000407 41.87294999999935, -87.75358599996262 41.87296300002327, -87.75328099999817 41.87296799998257, -87.7527750000141 41.87297399997053, -87.75215199995968 41.872981999978606, -87.75125900004399 41.8729919999859, -87.75075399996828 41.87299899998404, -87.75043199997286 41.87300199997899, -87.74947500001046 41.87301399997916, -87.74946599996092 41.87301399998383, -87.74914500000473 41.87302700000406, -87.74831499997512 41.87306000001878, -87.7479969999803 41.87307299996777, -87.7470340000157 41.8730919999896, -87.74588200002493 41.87310699998498, -87.7458269999852 41.873109000002074, -87.74561100001532 41.87311699997084, -87.74530399996611 41.873128999968586, -87.74499799997405 41.87314100001501, -87.74471000000635 41.8731529999838, -87.74451099999621 41.87316100001024, -87.74442300001154 41.87316499996714, -87.74405800004446 41.8731789999823, -87.74350599995552 41.873190000009316, -87.74305100001658 41.873195000000024, -87.74256499996075 41.87320200002989, -87.74207600004155 41.87321099999601, -87.74061099998809 41.8732399999956, -87.74020299997562 41.87324900001378, -87.74012300002029 41.87325099997269, -87.7401160000226 41.873070000030175, -87.74009800000493 41.8725280000266, -87.74009200004028 41.872348000017716, -87.74008899997692 41.872257999976355, -87.7400800000109 41.87198799998181, -87.74007799996593 41.87189900002947, -87.74007600002516 41.87181799998681, -87.74007500002773 41.87180899998146, -87.74007500002863 41.87173600002558, -87.74007400001787 41.87166099996786, -87.74007199997736 41.87158699996333, -87.74007200002092 41.87158500002014, -87.74006999998895 41.87154199999537, -87.7400699999914 41.87151899999422, -87.74006900001741 41.8714529999881, -87.7400659999974 41.87126600003142, -87.74006000003621 41.87070499998058, -87.74005799999804 41.870518000019864, -87.74004800003623 41.87033800000215, -87.74002000004565 41.86979800002008, -87.7400110000276 41.86961799999745, -87.74000500003649 41.86948199996857, -87.73998900004179 41.869073999971526, -87.73998399998655 41.86893900002459, -87.73997799996098 41.868817000000504, -87.73996199999209 41.868453999973674, -87.73995699997742 41.86833299996617, -87.73995200004335 41.8678580000148, -87.73993700000459 41.866434000000176, -87.73993200004256 41.8659599999678, -87.73998599996726 41.865959000005184, -87.74006900002726 41.86595799998983, -87.74008999997088 41.86595800000016, -87.74016700004417 41.86595699999959, -87.74040600004514 41.865953000024234, -87.74183099996324 41.865933000000865, -87.74230599997104 41.86592699997877, -87.74264199997644 41.86592199996782, -87.74279499999619 41.86591999999438, -87.74426400002986 41.865902000021535, -87.7447540000155 41.865896999993836, -87.74499800000035 41.86589300003122, -87.74573299997465 41.865881999971116, -87.74597800002029 41.865879000031185, -87.74622099999343 41.86587499997088, -87.74695200002299 41.86586500000157, -87.7471959999881 41.865861999972125, -87.74743999997519 41.86585799996604, -87.74817200000345 41.86584700000029, -87.74841699999737 41.86584400000179, -87.74866100002923 41.86584000000848, -87.74939499997102 41.865828000019405, -87.74964000002471 41.86582500001889, -87.7498840000063 41.865820999965, -87.75061799998426 41.86580999998692, -87.75086300000973 41.86580699998395, -87.75110599996579 41.86580200000694, -87.75183800004038 41.86578999999089, -87.75208199997387 41.865787000007344, -87.75232600003737 41.86578299997896, -87.7530609999873 41.865772000009244, -87.75330600004057 41.86576900000818, -87.75355100002054 41.865765000025576, -87.75381400002018 41.86576200000214, -87.7542869999662 41.86575500000832, -87.7543230000416 41.86575499997769, -87.75442800003509 41.86575399998691, -87.7545329999585 41.86575200002971, -87.7546360000171 41.86575099999196, -87.7547390000024 41.86574899999138, -87.75550799998531 41.865736000029806, -87.75552200002622 41.86573600000765, -87.75630500002305 41.865723999974676, -87.7578569999926 41.865700999986935, -87.75843299997268 41.86569199999017, -87.75940899999762 41.865678000016764, -87.75991699996972 41.865669999966514, -87.76144500000385 41.8656470000147, -87.76195400000822 41.86563999998786, -87.76212600002076 41.86563799997095, -87.76219900000731 41.86563600000923, -87.76229899998074 41.86563499999556, -87.7627400000113 41.865629000029536, -87.76293500000273 41.865625999997484, -87.76318099996357 41.86562300001606, -87.7634060000388 41.86561899998444, -87.7639939999736 41.86561100002178, -87.76408299996449 41.8656080000284, -87.76430899997334 41.8656010000052, -87.7645530000283 41.865592999967596, -87.76456899996332 41.86559299996526, -87.76528699999831 41.86558100000199, -87.76553200000212 41.86557799998612, -87.76577699998398 41.86557499999626, -87.76651199998297 41.86556599997794, -87.76675800000405 41.86556400002539, -87.76700299998706 41.86556000001928, -87.76774000004583 41.865548999998786, -87.76798599996845 41.86554600001452, -87.76823099999561 41.86554199999565, -87.76896800003779 41.86553199999096, -87.76921400002738 41.865528999983376, -87.76945900001012 41.86552500001992, -87.7701959999582 41.86551500002313, -87.77044200001473 41.865511999992236, -87.77068800000607 41.86550799997522, -87.77142500004352 41.86549799998078, -87.77167200003453 41.86549500001182, -87.7719159999696 41.865491000000624, -87.77265099999319 41.86548099999269, -87.77289600002537 41.86547899998409, -87.77314400003516 41.865475000005965, -87.7738899999882 41.865462000005955, -87.77413900002347 41.865459000013665, -87.7741390000123 41.8657049999892, -87.77414300003197 41.86582500001045, -87.77414600003213 41.865915000007476, -87.77417000001344 41.86660200002508, -87.77418100001209 41.866923000007354, -87.7741949999573 41.86728900002251, -87.77420800003982 41.86765400000893, -87.7742499999688 41.8687490000175, -87.77426400003493 41.86911399997165, -87.7742700000058 41.86937300000238, -87.77427400002605 41.869529999997845, -87.77428499995685 41.8699449999829, -87.77428599995952 41.87002299997295, -87.77427900003667 41.87015099999138, -87.77427599997561 41.870213000017785, -87.77427599997822 41.870411000010584, -87.77427599997499 41.870453000024796, -87.77427599996422 41.87050799999065, -87.77427900000355 41.87058100000137, -87.77428099999601 41.87062400001478, -87.77428599999809 41.87074700001537, -87.77428700002183 41.87077199997683, -87.77430099999707 41.87092400000364, -87.77412700004385 41.8709110000272, -87.77399999995775 41.870899999980296, -87.77333000004379 41.87086600001309, -87.77101600001276 41.87074999996409, -87.77093900003379 41.8707450000199, -87.77014300002385 41.87070300002844)))\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"geoid10\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 801,\n        \"samples\": [\n          \"17031570300\",\n          \"17031062400\",\n          \"17031831400\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"commarea\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 77,\n        \"samples\": [\n          \"32\",\n          \"56\",\n          \"2\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"commarea_n\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 77,\n        \"samples\": [\n          \"32\",\n          \"56\",\n          \"2\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["tractsdf = pd.DataFrame(tracts_shp)\n","tractsdf.drop(columns=['the_geom'], inplace=True)\n","tractsdf = tractsdf.rename(columns={'geoid10':'GEOID10'})\n","# tractsdf.info()\n","\n","# Do NOT stack tractsdf here\n","# frames.append('tractsdf')\n","frames"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qSXvt1PIJB-p","executionInfo":{"status":"ok","timestamp":1718640208046,"user_tz":300,"elapsed":199,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"e8b1ae77-9754-403a-95ff-1b66b12b6cff"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[]"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["## Functions"],"metadata":{"id":"CCTJbpIkpxY4"}},{"cell_type":"code","source":["# Lat/long coordinates to census tract\n","\n","def LatLongTract(infile, lat, long):\n","\n","  # establish lat/long point geometry\n","  geometry = [Point(xy) for xy in zip(infile[long], infile[lat])]\n","\n","  # Make a geo dataframe, set CRS\n","  gdf = gpd.GeoDataFrame(infile, geometry=geometry)\n","  gdf = gdf.set_crs(crs)\n","\n","  # Intersect lat/long points and census tract\n","  result=gpd.sjoin(gdf, tracts_shp, how='left', op='within')\n","\n","  result.drop(columns=['index_right'], inplace=True)\n","\n","  # Standardize census tract GEOID to uppercase throughout notebooks\n","  result.rename(columns={\"geoid10\" : \"GEOID10\"}, inplace=True)\n","  return(result)\n","\n","\n","\n","# One line street address to lat/long coordinates and census tract\n","\n","def AddLatLongTract(infile):\n","\n","  # Create \"oneline\" address in cleaning \"123 N Main Street Chicago, IL 60000\"\n","  # Field names vary so not bothering to include here\n","\n","  g = geocoders.GoogleV3(api_key='')\n","\n","  def Gv3_latlong (address):\n","      location = g.geocode(address)\n","      lat = location.latitude\n","      long = location.longitude\n","      # Perform additional steps to obtain census tract from coordinates\n","      # census_tract = get_census_tract_from_coordinates(latitude, longitude)\n","      return lat, long, location\n","\n","  infile[['lat', 'long', 'Location']] = infile['oneline'].apply(Gv3_latlong).apply(pd.Series)\n","\n","  # establish lat/long point geometry\n","  geometry = [Point(xy) for xy in zip(infile['long'], infile['lat'])]\n","\n","  # Make a geo dataframe, set CRS\n","  gdf = gpd.GeoDataFrame(infile, geometry=geometry)\n","  gdf = gdf.set_crs(crs)\n","\n","  # Intersect lat/long points and census tract\n","  result=gpd.sjoin(gdf, tracts_shp, how='left', op='within')\n","\n","  result.drop(columns=['index_right'], inplace=True)\n","\n","  # Standardize census tract GEOID10 to uppercase throughout notebooks\n","  result.rename(columns={\"geoid10\" : \"GEOID10\"}, inplace=True)\n","  return(result)"],"metadata":{"id":"G0DL9LvYpyYa"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Sites: Reloaded from 62 Environment and pollution and 64 Business, economy, transportation"],"metadata":{"id":"wyj_wwx-lt6S"}},{"cell_type":"markdown","source":["# *Chicago Data Portal*"],"metadata":{"id":"0tiYaQjBm95H"}},{"cell_type":"markdown","source":["## Asbestos"],"metadata":{"id":"IvvZwoAJmHoV"}},{"cell_type":"code","source":["# Reload line\n","asb = pd.read_csv(dir + '1 Chicago and Cook County data/asbestos_line.csv', dtype='string')\n","asb.drop(columns=['Unnamed: 0'], inplace=True)\n","\n","asb['Category'] = 'Asbestos'\n","\n","asb['ADDRESS'] = asb['ADDRESS'] + ', Chicago, IL'\n","\n","asb = asb.rename(columns={'OWNER/APPLICANT': 'Name', 'ADDRESS': 'Address'})\n","\n","asb = asb[['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea',\n","           'date', 'year', 'month']]\n","\n","asb.head()"],"metadata":{"id":"cuEbL6iUmF3K","executionInfo":{"status":"ok","timestamp":1718640276369,"user_tz":300,"elapsed":3028,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"colab":{"base_uri":"https://localhost:8080/","height":487},"outputId":"6f07313c-e8f1-4e65-ca90-c881447a90fd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Category                           Name                             Address           LATITUDE  \\\n","0  Asbestos  PUBLIC BLDG. COMM. OF CHICAGO     1 W IRVING PARK RD, Chicago, IL  41.96099580000001   \n","1  Asbestos                   WIRTZ REALTY      115 S WOLCOTT AVE, Chicago, IL         41.8745299   \n","2  Asbestos                   WIRTZ REALTY      117 S WOLCOTT AVE, Chicago, IL         41.8745299   \n","3  Asbestos    LAKE SHORE RECYCLING SYSTEM    1240 W EXCHANGE AVE, Chicago, IL         41.8186341   \n","4  Asbestos                CITY OF CHICAGO  1245 S CALIFORNIA AVE, Chicago, IL         41.8650698   \n","\n","            LONGITUDE      GEOID10 commarea        date  year month  \n","0         -87.9400153         <NA>     <NA>  2000-06-09  2000     6  \n","1  -87.67404409999999  17031838100       28  1993-02-19  1993     2  \n","2  -87.67404409999999  17031838100       28  1993-02-19  1993     2  \n","3         -87.6479286  17031842600       61  2014-02-27  2014     2  \n","4  -87.69549260000001  17031843300       29  2004-10-07  2004    10  "],"text/html":["\n","  <div id=\"df-b95e8f18-b426-4a4f-98c9-35a19f39377c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Name</th>\n","      <th>Address</th>\n","      <th>LATITUDE</th>\n","      <th>LONGITUDE</th>\n","      <th>GEOID10</th>\n","      <th>commarea</th>\n","      <th>date</th>\n","      <th>year</th>\n","      <th>month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Asbestos</td>\n","      <td>PUBLIC BLDG. COMM. OF CHICAGO</td>\n","      <td>1 W IRVING PARK RD, Chicago, IL</td>\n","      <td>41.96099580000001</td>\n","      <td>-87.9400153</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>2000-06-09</td>\n","      <td>2000</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Asbestos</td>\n","      <td>WIRTZ REALTY</td>\n","      <td>115 S WOLCOTT AVE, Chicago, IL</td>\n","      <td>41.8745299</td>\n","      <td>-87.67404409999999</td>\n","      <td>17031838100</td>\n","      <td>28</td>\n","      <td>1993-02-19</td>\n","      <td>1993</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Asbestos</td>\n","      <td>WIRTZ REALTY</td>\n","      <td>117 S WOLCOTT AVE, Chicago, IL</td>\n","      <td>41.8745299</td>\n","      <td>-87.67404409999999</td>\n","      <td>17031838100</td>\n","      <td>28</td>\n","      <td>1993-02-19</td>\n","      <td>1993</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Asbestos</td>\n","      <td>LAKE SHORE RECYCLING SYSTEM</td>\n","      <td>1240 W EXCHANGE AVE, Chicago, IL</td>\n","      <td>41.8186341</td>\n","      <td>-87.6479286</td>\n","      <td>17031842600</td>\n","      <td>61</td>\n","      <td>2014-02-27</td>\n","      <td>2014</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Asbestos</td>\n","      <td>CITY OF CHICAGO</td>\n","      <td>1245 S CALIFORNIA AVE, Chicago, IL</td>\n","      <td>41.8650698</td>\n","      <td>-87.69549260000001</td>\n","      <td>17031843300</td>\n","      <td>29</td>\n","      <td>2004-10-07</td>\n","      <td>2004</td>\n","      <td>10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b95e8f18-b426-4a4f-98c9-35a19f39377c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b95e8f18-b426-4a4f-98c9-35a19f39377c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b95e8f18-b426-4a4f-98c9-35a19f39377c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4883988d-2b7d-4d72-97ba-d92564c52093\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4883988d-2b7d-4d72-97ba-d92564c52093')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4883988d-2b7d-4d72-97ba-d92564c52093 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"asb"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["frames.append('asb')\n","print(frames)"],"metadata":{"id":"5SulTkMrL6Gy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718640284625,"user_tz":300,"elapsed":207,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"2cb70bef-bf95-4da8-deec-c3e5a5150323"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['asb']\n"]}]},{"cell_type":"markdown","source":["## Environmental complaints"],"metadata":{"id":"OFY9CAhImLXt"}},{"cell_type":"code","source":["# Reload line listing\n","env = pd.read_csv(dir + '1 Chicago and Cook County data/env_complaints_line.csv', dtype='string')\n","\n","columns_to_convert = ['ADDRESS', 'year', 'month']\n","env[columns_to_convert] = env[columns_to_convert].astype(str)\n","\n","env['year'] = env['year'].str[:-2]\n","env['month'] = env['month'].str[:-2]\n","\n","env['Category'] = 'Enviro comp ' + env['COMPLAINT TYPE']\n","\n","env['Name'] = 'Environmental complaint'\n","\n","env['ADDRESS'] = env['ADDRESS'] + ', Chicago, IL'\n","\n","env = env.drop(columns=['lat', 'long'])\n","\n","env = env.rename(columns={'ADDRESS': 'Address', 'lat': 'LATITUDE', 'long':'LONGITUDE'})\n","\n","env = env[['Category', 'Name', 'Address', 'GEOID10', 'commarea', 'date', 'year', 'month']]\n","\n","env.head()"],"metadata":{"id":"y2w1K6z8mP4u","executionInfo":{"status":"ok","timestamp":1718640787616,"user_tz":300,"elapsed":1826,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"colab":{"base_uri":"https://localhost:8080/","height":539},"outputId":"ff4d3be4-2a11-4622-d3cd-f2867fe230f7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                               Category                     Name  \\\n","0           Enviro comp Noise Complaint  Environmental complaint   \n","1  Enviro comp Air Pollution Work Order  Environmental complaint   \n","2           Enviro comp Noise Complaint  Environmental complaint   \n","3  Enviro comp Air Pollution Work Order  Environmental complaint   \n","4  Enviro comp Air Pollution Work Order  Environmental complaint   \n","\n","                             Address      GEOID10 commarea        date  year month  \n","0          1 N STATE ST, Chicago, IL  17031320100       32  1994-11-25  1994    11  \n","1       100 N LOOMIS ST, Chicago, IL  17031833000       28  2008-08-19  2008     8  \n","2        100 N STATE ST, Chicago, IL  17031839100       32  1996-05-03  1996     5  \n","3  1000 W WASHINGTON ST, Chicago, IL  17031833000       28  1996-05-08  1996     5  \n","4        1001 W WEED ST, Chicago, IL  17031842200        8  1995-08-30  1995     8  "],"text/html":["\n","  <div id=\"df-df4b9d8e-ca1a-40f5-810a-d17fc1a9c247\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Name</th>\n","      <th>Address</th>\n","      <th>GEOID10</th>\n","      <th>commarea</th>\n","      <th>date</th>\n","      <th>year</th>\n","      <th>month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Enviro comp Noise Complaint</td>\n","      <td>Environmental complaint</td>\n","      <td>1 N STATE ST, Chicago, IL</td>\n","      <td>17031320100</td>\n","      <td>32</td>\n","      <td>1994-11-25</td>\n","      <td>1994</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Enviro comp Air Pollution Work Order</td>\n","      <td>Environmental complaint</td>\n","      <td>100 N LOOMIS ST, Chicago, IL</td>\n","      <td>17031833000</td>\n","      <td>28</td>\n","      <td>2008-08-19</td>\n","      <td>2008</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Enviro comp Noise Complaint</td>\n","      <td>Environmental complaint</td>\n","      <td>100 N STATE ST, Chicago, IL</td>\n","      <td>17031839100</td>\n","      <td>32</td>\n","      <td>1996-05-03</td>\n","      <td>1996</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Enviro comp Air Pollution Work Order</td>\n","      <td>Environmental complaint</td>\n","      <td>1000 W WASHINGTON ST, Chicago, IL</td>\n","      <td>17031833000</td>\n","      <td>28</td>\n","      <td>1996-05-08</td>\n","      <td>1996</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Enviro comp Air Pollution Work Order</td>\n","      <td>Environmental complaint</td>\n","      <td>1001 W WEED ST, Chicago, IL</td>\n","      <td>17031842200</td>\n","      <td>8</td>\n","      <td>1995-08-30</td>\n","      <td>1995</td>\n","      <td>8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-df4b9d8e-ca1a-40f5-810a-d17fc1a9c247')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-df4b9d8e-ca1a-40f5-810a-d17fc1a9c247 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-df4b9d8e-ca1a-40f5-810a-d17fc1a9c247');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a55d2c54-8573-4d82-82a9-862ac1e00f6c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a55d2c54-8573-4d82-82a9-862ac1e00f6c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a55d2c54-8573-4d82-82a9-862ac1e00f6c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"env","summary":"{\n  \"name\": \"env\",\n  \"rows\": 57719,\n  \"fields\": [\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 24,\n        \"samples\": [\n          \"Enviro comp Recycling Work Order\",\n          \"Enviro comp TOXICS HAZARDOUS MATERIALS WORK ORDER\",\n          \"Enviro comp Noise Complaint\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Environmental complaint\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Address\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 35942,\n        \"samples\": [\n          \"2283 N CLYBOURN AVE, Chicago, IL\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GEOID10\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 799,\n        \"samples\": [\n          \"17031252101\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"commarea\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 77,\n        \"samples\": [\n          \"44\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8034,\n        \"samples\": [\n          \"2015-05-05\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 32,\n        \"samples\": [\n          \"2022\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"6\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["frames.append('env')\n","print(frames)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"__wNuWKV1Yv_","executionInfo":{"status":"ok","timestamp":1718640796638,"user_tz":300,"elapsed":181,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"caf1a5f8-98e9-48d5-d0ed-eeae2a127723"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['asb', 'env']\n"]}]},{"cell_type":"markdown","source":["## Industrial sites from business licenses"],"metadata":{"id":"QxABkxLimpX_"}},{"cell_type":"code","source":["# Reload line\n","lic = pd.read_csv(dir + '1 Chicago and Cook County data/Business licenses/Chicago_business_lic_tract.csv')\n","\n","columns_to_convert = ['ADDRESS', 'CITY', 'STATE', 'ZIP CODE', 'LICENSE DESCRIPTION', 'GEOID10', 'commarea']\n","lic[columns_to_convert] = lic[columns_to_convert].astype(str)\n","\n","lic['ZIP CODE'] = lic['ZIP CODE'].str[:5]\n","lic['GEOID10'] = lic['GEOID10'].str[:-3]\n","lic['commarea'] = lic['commarea'].str[:-3]\n","\n","lic['date'] = pd.to_datetime(lic['DATE ISSUED'])\n","lic['year'] = lic['date'].dt.year\n","lic['month'] = lic['date'].dt.month\n","\n","lic['Address1'] = lic['ADDRESS'] + ' ' + lic['CITY'] + ', ' + lic['STATE'] + ' ' + lic['ZIP CODE']\n","\n","# Define conditions and corresponding categories\n","conditions = [\n","    lic['LICENSE DESCRIPTION'].str.contains('admin', case=False),\n","    lic['LICENSE DESCRIPTION'].str.contains('hazardous', case=False),\n","    lic['LICENSE DESCRIPTION'].str.contains('manufacturing', case=False),\n","    lic['LICENSE DESCRIPTION'].str.contains('chem', case=False),\n","    lic['LICENSE DESCRIPTION'].str.contains('factory', case=False),\n","    lic['LICENSE DESCRIPTION'].str.contains('metal', case=False),\n","    lic['LICENSE DESCRIPTION'].str.contains('plastic', case=False),\n","]\n","\n","categories = ['Administrative', 'Hazardous', 'Manufacturing', 'Chemical', 'Factory', 'Metal', 'Plastic']\n","\n","# Create the 'Category' column based on conditions\n","lic['type'] = np.select(conditions, categories, default='Other')\n","lic['Category'] =  'Chicago business license: ' + lic['type']\n","\n","lic = lic.rename(columns={'LEGAL NAME': 'Name', 'Address1': 'Address'})\n","\n","lic = lic[['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea', 'date', 'year', 'month']]\n","\n","lic.head()"],"metadata":{"id":"TBGkMH15mrKv","executionInfo":{"status":"ok","timestamp":1718640862142,"user_tz":300,"elapsed":31443,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"colab":{"base_uri":"https://localhost:8080/","height":591},"outputId":"e1197802-55b3-4678-ce74-6df35bd8d574"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          Category                     Name  \\\n","0  Chicago business license: Other              TTX COMPANY   \n","1  Chicago business license: Other      JYM INVESTMENTS LLC   \n","2  Chicago business license: Other  LEOPARDO COMPANIES INC.   \n","3  Chicago business license: Other    1021 MONTROSE, L.L.C.   \n","4  Chicago business license: Other    GRAHAM ENTERPRISE INC   \n","\n","                                          Address  LATITUDE  LONGITUDE     GEOID10 commarea  \\\n","0            4016 S ASHLAND AVE CHICAGO, IL 60609     41.82     -87.67  1703161030        6   \n","1          2321 W HOWARD ST 1ST CHICAGO, IL 60645     42.02     -87.69  1703102010            \n","2  210 N CARPENTER ST 3RD FLOOR CHICAGO, IL 60607     41.89     -87.65  1703183300        2   \n","3           1021 W MONTROSE AVE CHICAGO, IL 60613     41.96     -87.66  1703103210            \n","4         631-647 N LA SALLE DR CHICAGO, IL 60654     41.89     -87.63  1703108170            \n","\n","        date  year  month  \n","0 2022-08-08  2022      8  \n","1 2020-12-17  2020     12  \n","2 2020-08-21  2020      8  \n","3 2022-05-11  2022      5  \n","4 2022-05-11  2022      5  "],"text/html":["\n","  <div id=\"df-09496ac3-6884-431a-a0c8-ee819a0a446a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Name</th>\n","      <th>Address</th>\n","      <th>LATITUDE</th>\n","      <th>LONGITUDE</th>\n","      <th>GEOID10</th>\n","      <th>commarea</th>\n","      <th>date</th>\n","      <th>year</th>\n","      <th>month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Chicago business license: Other</td>\n","      <td>TTX COMPANY</td>\n","      <td>4016 S ASHLAND AVE CHICAGO, IL 60609</td>\n","      <td>41.82</td>\n","      <td>-87.67</td>\n","      <td>1703161030</td>\n","      <td>6</td>\n","      <td>2022-08-08</td>\n","      <td>2022</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Chicago business license: Other</td>\n","      <td>JYM INVESTMENTS LLC</td>\n","      <td>2321 W HOWARD ST 1ST CHICAGO, IL 60645</td>\n","      <td>42.02</td>\n","      <td>-87.69</td>\n","      <td>1703102010</td>\n","      <td></td>\n","      <td>2020-12-17</td>\n","      <td>2020</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Chicago business license: Other</td>\n","      <td>LEOPARDO COMPANIES INC.</td>\n","      <td>210 N CARPENTER ST 3RD FLOOR CHICAGO, IL 60607</td>\n","      <td>41.89</td>\n","      <td>-87.65</td>\n","      <td>1703183300</td>\n","      <td>2</td>\n","      <td>2020-08-21</td>\n","      <td>2020</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Chicago business license: Other</td>\n","      <td>1021 MONTROSE, L.L.C.</td>\n","      <td>1021 W MONTROSE AVE CHICAGO, IL 60613</td>\n","      <td>41.96</td>\n","      <td>-87.66</td>\n","      <td>1703103210</td>\n","      <td></td>\n","      <td>2022-05-11</td>\n","      <td>2022</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Chicago business license: Other</td>\n","      <td>GRAHAM ENTERPRISE INC</td>\n","      <td>631-647 N LA SALLE DR CHICAGO, IL 60654</td>\n","      <td>41.89</td>\n","      <td>-87.63</td>\n","      <td>1703108170</td>\n","      <td></td>\n","      <td>2022-05-11</td>\n","      <td>2022</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-09496ac3-6884-431a-a0c8-ee819a0a446a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-09496ac3-6884-431a-a0c8-ee819a0a446a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-09496ac3-6884-431a-a0c8-ee819a0a446a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5f903bd6-03da-4148-ab2d-54f908884892\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5f903bd6-03da-4148-ab2d-54f908884892')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5f903bd6-03da-4148-ab2d-54f908884892 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"lic"}},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["frames.append('lic')\n","print(frames)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XvqjSNEn1aP1","executionInfo":{"status":"ok","timestamp":1718640867901,"user_tz":300,"elapsed":185,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"d83fd7e2-78f2-47aa-975b-3e2919b8b9aa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['asb', 'env', 'lic']\n"]}]},{"cell_type":"markdown","source":["# *EPA*"],"metadata":{"id":"ctn2su3YnAY3"}},{"cell_type":"markdown","source":["## Hazardous waste"],"metadata":{"id":"YxaqCcuTm5T3"}},{"cell_type":"code","source":["# Reload line listing\n","\n","haz = pd.read_csv(dir + 'EPA/Hazardous waste/Haz_line.csv')\n","\n","columns_to_convert = ['GEOID10', 'commarea']\n","haz[columns_to_convert] = haz[columns_to_convert].astype(str)\n","\n","haz['GEOID10'] = haz['GEOID10'].str[:-3]\n","haz['commarea'] = haz['commarea'].str[:-3]\n","\n","haz = haz.rename(columns={'oneline': 'Address', 'RCRAName': 'Name', 'lat': 'LATITUDE', 'long': 'LONGITUDE'})\n","haz['Category'] = 'EPA hazardous waste'\n","\n","haz['date'] = np.nan\n","haz['year'] = np.nan\n","haz['month'] = np.nan\n","\n","haz = haz[['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea', 'date', 'year', 'month']]\n","\n","haz.head()"],"metadata":{"id":"GBs5jtsIm5nY","executionInfo":{"status":"error","timestamp":1718640870053,"user_tz":300,"elapsed":413,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"colab":{"base_uri":"https://localhost:8080/","height":329},"outputId":"0673fde2-be01-42cb-d2d7-ec79c6752805"},"execution_count":null,"outputs":[{"output_type":"error","ename":"EmptyDataError","evalue":"No columns to parse from file","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mEmptyDataError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-30-d6703063377b>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Reload line listing\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mhaz\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdir\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'EPA/Hazardous waste/Haz_line.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mcolumns_to_convert\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m'GEOID10'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'commarea'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[1;32m    910\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    911\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 912\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    913\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    914\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    575\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    576\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 577\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    578\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    579\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1405\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1406\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mIOHandles\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1407\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1408\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1409\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1677\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1678\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1679\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mmapping\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1680\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1681\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/c_parser_wrapper.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, src, **kwds)\u001b[0m\n\u001b[1;32m     91\u001b[0m             \u001b[0;31m# Fail here loudly instead of in cython after reading\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     92\u001b[0m             \u001b[0mimport_optional_dependency\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"pyarrow\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 93\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reader\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mparsers\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTextReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msrc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     94\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     95\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munnamed_cols\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reader\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munnamed_cols\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader.__cinit__\u001b[0;34m()\u001b[0m\n","\u001b[0;31mEmptyDataError\u001b[0m: No columns to parse from file"]}]},{"cell_type":"code","source":["frames.append('haz')\n","print(frames)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i6e9XNG91cYz","executionInfo":{"status":"ok","timestamp":1718640933501,"user_tz":300,"elapsed":190,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"63238ae5-d3a8-48ad-ad07-11cd0d1d6856"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['asb', 'env', 'lic', 'haz']\n"]}]},{"cell_type":"markdown","source":["## Landfills"],"metadata":{"id":"YIq4wk5WmUps"}},{"cell_type":"code","source":["# Reload line listing\n","\n","land = pd.read_csv(dir + 'EPA/Landfill/Chicago_tract.csv', dtype='string')\n","land.drop(columns=['Unnamed: 0'], inplace=True)\n","\n","land = land.rename(columns={'oneline': 'Address', 'Landfill Name': 'Name', 'lat': 'LATITUDE', 'long': 'LONGITUDE'})\n","land['Category'] = 'EPA landfills'\n","\n","land['date'] = np.nan\n","land['year'] = np.nan\n","land['month'] = np.nan\n","\n","land = land[['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea', 'date', 'year', 'month']]\n","\n","land.head()"],"metadata":{"id":"etGaC1stnLB7","executionInfo":{"status":"ok","timestamp":1718640946752,"user_tz":300,"elapsed":1702,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"colab":{"base_uri":"https://localhost:8080/","height":573},"outputId":"01a853e1-af6a-4259-cf3b-c4f388368724"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Category                                 Name  \\\n","0  EPA landfills                   Alburn Incinerator   \n","1  EPA landfills                         AlliedSignal   \n","2  EPA landfills       Chicago Streets and Sanitation   \n","3  EPA landfills  CID Recycling and Disposal Facility   \n","4  EPA landfills                          Harbor View   \n","\n","                                          Address    LATITUDE           LONGITUDE      GEOID10  \\\n","0            2200 E 119th Street Chicago IL 60617  41.6781323         -87.6154477  17031530600   \n","1  12260 South Carondolet Avenue Chicago IL 60633   41.672073         -87.5499603  17031838800   \n","2             103rd and Doty Ave Chicago IL 60628  41.7078013         -87.5803744  17031838800   \n","3        13707 S. Jeffery Avenue Chicago IL 60633  41.6460901         -87.5768758  17031550200   \n","4            2000 E 122nd Street Chicago IL 60633  41.6739736  -87.57386919999999  17031838800   \n","\n","  commarea  date  year  month  \n","0       53   NaN   NaN    NaN  \n","1       51   NaN   NaN    NaN  \n","2       51   NaN   NaN    NaN  \n","3       55   NaN   NaN    NaN  \n","4       51   NaN   NaN    NaN  "],"text/html":["\n","  <div id=\"df-f5b3bee9-5a22-424e-8964-52b4636d8037\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Name</th>\n","      <th>Address</th>\n","      <th>LATITUDE</th>\n","      <th>LONGITUDE</th>\n","      <th>GEOID10</th>\n","      <th>commarea</th>\n","      <th>date</th>\n","      <th>year</th>\n","      <th>month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>EPA landfills</td>\n","      <td>Alburn Incinerator</td>\n","      <td>2200 E 119th Street Chicago IL 60617</td>\n","      <td>41.6781323</td>\n","      <td>-87.6154477</td>\n","      <td>17031530600</td>\n","      <td>53</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>EPA landfills</td>\n","      <td>AlliedSignal</td>\n","      <td>12260 South Carondolet Avenue Chicago IL 60633</td>\n","      <td>41.672073</td>\n","      <td>-87.5499603</td>\n","      <td>17031838800</td>\n","      <td>51</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>EPA landfills</td>\n","      <td>Chicago Streets and Sanitation</td>\n","      <td>103rd and Doty Ave Chicago IL 60628</td>\n","      <td>41.7078013</td>\n","      <td>-87.5803744</td>\n","      <td>17031838800</td>\n","      <td>51</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>EPA landfills</td>\n","      <td>CID Recycling and Disposal Facility</td>\n","      <td>13707 S. Jeffery Avenue Chicago IL 60633</td>\n","      <td>41.6460901</td>\n","      <td>-87.5768758</td>\n","      <td>17031550200</td>\n","      <td>55</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>EPA landfills</td>\n","      <td>Harbor View</td>\n","      <td>2000 E 122nd Street Chicago IL 60633</td>\n","      <td>41.6739736</td>\n","      <td>-87.57386919999999</td>\n","      <td>17031838800</td>\n","      <td>51</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f5b3bee9-5a22-424e-8964-52b4636d8037')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f5b3bee9-5a22-424e-8964-52b4636d8037 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f5b3bee9-5a22-424e-8964-52b4636d8037');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-34d2de8c-276a-42a8-99fa-53260749387d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-34d2de8c-276a-42a8-99fa-53260749387d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-34d2de8c-276a-42a8-99fa-53260749387d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"land","summary":"{\n  \"name\": \"land\",\n  \"rows\": 13,\n  \"fields\": [\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"EPA landfills\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"Renella-Palumbo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Address\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"7501 S Kedzie Ave Chicago IL 60652\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LATITUDE\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"41.756459\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LONGITUDE\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"-87.70182\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GEOID10\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"17031530600\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"commarea\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"53\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["frames.append('land')\n","print(frames)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7q1msQ3M7YMp","executionInfo":{"status":"ok","timestamp":1718640956037,"user_tz":300,"elapsed":195,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"537a4748-a2d2-4792-9b16-ba4a6adc5956"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['asb', 'env', 'lic', 'haz', 'land']\n"]}]},{"cell_type":"markdown","source":["## RSEI"],"metadata":{"id":"cpxrkkDanVRx"}},{"cell_type":"code","source":["# Reload line listing\n","rsei = pd.read_csv(dir + 'EPA/RSEI/Cook_Co_RSEI_2012_2021.csv')\n","\n","columns_to_convert = ['STREET_ADDRESS', 'CITY_NAME', 'STATE_ABBR', 'ZIP_CODE', 'RSEI Media', 'Chemical', 'GEOID10',\n","                      'commarea']\n","rsei[columns_to_convert] = rsei[columns_to_convert].astype(str)\n","\n","rsei['GEOID10'] = rsei['GEOID10'].str[:-3]\n","rsei['commarea'] = rsei['commarea'].str[:-3]\n","\n","rsei['date'] = np.nan\n","rsei['year'] = np.nan\n","rsei['month'] = np.nan\n","\n","rsei['Category'] = rsei['RSEI Media'] + ': ' + rsei['Chemical']\n","\n","rsei = rsei.rename(columns={'PARENT_CO_NAME': 'Name', 'STREET_ADDRESS': 'Address', 'lat': 'LATITUDE', 'long':'LONGITUDE'})\n","\n","rsei = rsei[['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea', 'date', 'year', 'month']]\n","\n","rsei.head()"],"metadata":{"id":"I8cWfb5SnWOa","executionInfo":{"status":"ok","timestamp":1718640959405,"user_tz":300,"elapsed":1221,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"colab":{"base_uri":"https://localhost:8080/","height":591},"outputId":"4703d407-8db6-49fa-b069-1ba631ec39c2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                            Category            Name         Address  LATITUDE  \\\n","0    Stack Air Releases: Cobalt and cobalt compounds  W R GRACE & CO  4099 W 71ST ST     41.76   \n","1    Stack Air Releases: Cobalt and cobalt compounds  W R GRACE & CO  4099 W 71ST ST     41.76   \n","2  Fugitive Air Releases: Chromium and chromium c...    No US Parent  2755 W LAKE ST     41.90   \n","3    Stack Air Releases: Cobalt and cobalt compounds  W R GRACE & CO  4099 W 71ST ST     41.76   \n","4    Stack Air Releases: Nickel and nickel compounds  W R GRACE & CO  4099 W 71ST ST     41.76   \n","\n","   LONGITUDE     GEOID10 commarea  date  year  month  \n","0     -87.72  1703165050        6   NaN   NaN    NaN  \n","1     -87.72  1703165050        6   NaN   NaN    NaN  \n","2     -87.87                        NaN   NaN    NaN  \n","3     -87.72  1703165050        6   NaN   NaN    NaN  \n","4     -87.72  1703165050        6   NaN   NaN    NaN  "],"text/html":["\n","  <div id=\"df-4ac8a6c4-b074-4e9f-8279-2c1062941611\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Name</th>\n","      <th>Address</th>\n","      <th>LATITUDE</th>\n","      <th>LONGITUDE</th>\n","      <th>GEOID10</th>\n","      <th>commarea</th>\n","      <th>date</th>\n","      <th>year</th>\n","      <th>month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Stack Air Releases: Cobalt and cobalt compounds</td>\n","      <td>W R GRACE &amp; CO</td>\n","      <td>4099 W 71ST ST</td>\n","      <td>41.76</td>\n","      <td>-87.72</td>\n","      <td>1703165050</td>\n","      <td>6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Stack Air Releases: Cobalt and cobalt compounds</td>\n","      <td>W R GRACE &amp; CO</td>\n","      <td>4099 W 71ST ST</td>\n","      <td>41.76</td>\n","      <td>-87.72</td>\n","      <td>1703165050</td>\n","      <td>6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Fugitive Air Releases: Chromium and chromium c...</td>\n","      <td>No US Parent</td>\n","      <td>2755 W LAKE ST</td>\n","      <td>41.90</td>\n","      <td>-87.87</td>\n","      <td></td>\n","      <td></td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Stack Air Releases: Cobalt and cobalt compounds</td>\n","      <td>W R GRACE &amp; CO</td>\n","      <td>4099 W 71ST ST</td>\n","      <td>41.76</td>\n","      <td>-87.72</td>\n","      <td>1703165050</td>\n","      <td>6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Stack Air Releases: Nickel and nickel compounds</td>\n","      <td>W R GRACE &amp; CO</td>\n","      <td>4099 W 71ST ST</td>\n","      <td>41.76</td>\n","      <td>-87.72</td>\n","      <td>1703165050</td>\n","      <td>6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4ac8a6c4-b074-4e9f-8279-2c1062941611')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4ac8a6c4-b074-4e9f-8279-2c1062941611 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4ac8a6c4-b074-4e9f-8279-2c1062941611');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0c342423-06db-4322-b5ba-85e4cebe97b9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0c342423-06db-4322-b5ba-85e4cebe97b9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0c342423-06db-4322-b5ba-85e4cebe97b9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"rsei","summary":"{\n  \"name\": \"rsei\",\n  \"rows\": 7333,\n  \"fields\": [\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 272,\n        \"samples\": [\n          \"Fugitive Air Releases: Ethylbenzene\",\n          \"Stack Air Releases: Dioxin and dioxin-like compounds\",\n          \"Stack Air Releases: Di(2-ethylhexyl) phthalate\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 93,\n        \"samples\": [\n          \"ARCHER DANIELS MIDLAND CO\",\n          \"ARDAGH HOLDINGS USA INC\",\n          \"ACID PRODUCTS CO INC\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Address\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 185,\n        \"samples\": [\n          \"3000 W 51ST ST\",\n          \"2353 S BLUE ISLAND AVE\",\n          \"5241 W 70TH PL\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LATITUDE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0662200372034736,\n        \"min\": 41.71349,\n        \"max\": 41.981271,\n        \"num_unique_values\": 186,\n        \"samples\": [\n          41.919385,\n          41.800752,\n          41.746344\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LONGITUDE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07864378550138396,\n        \"min\": -87.917604,\n        \"max\": -87.632839,\n        \"num_unique_values\": 186,\n        \"samples\": [\n          -87.662752,\n          -87.773466,\n          -87.808876\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GEOID10\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 50,\n        \"samples\": [\n          \"1703164040\",\n          \"1703125030\",\n          \"1703116110\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"commarea\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"6\",\n          \"\",\n          \"5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["frames.append('rsei')\n","frames"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dgtW6D4m7aYu","executionInfo":{"status":"ok","timestamp":1718640964310,"user_tz":300,"elapsed":340,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"c08d2335-20d4-462f-e450-fef9f271d6eb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['asb', 'env', 'lic', 'haz', 'land', 'rsei']"]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["## Superfund and brown"],"metadata":{"id":"PuV5BaQznZX-"}},{"cell_type":"code","source":["superNot = pd.read_csv(dir + 'EPA/Superfund/Cook_Co_all_sites_line.csv')\n","\n","columns_to_convert = ['GEOID10', 'commarea']\n","superNot[columns_to_convert] = superNot[columns_to_convert].astype(str)\n","\n","superNot['GEOID10'] = superNot['GEOID10'].str[:-3]\n","superNot['commarea'] = superNot['commarea'].str[:-3]\n","\n","# Define conditions and corresponding categories\n","conditions = [\n","    (superNot['NPL Status'] == 'Final NPL') | (superNot['NPL Status'] == 'Part of NPL Site'),\n","    (superNot['NPL Status'] == 'Not NPL') | (superNot['NPL Status'] == 'Removed from NPL')\n","]\n","categories = ['Superfund', 'Brown site']\n","\n","# Create the 'Category' column based on conditions\n","superNot['temp'] = np.select(conditions, categories, default=None)\n","superNot['Category'] = \"EPA NPL list: \" + superNot['temp']\n","\n","\n","superNot['date'] = np.nan\n","superNot['year'] = np.nan\n","superNot['month'] = np.nan\n","\n","superNot = superNot.rename(columns={'Site Name': 'Name', 'oneline': 'Address', 'lat': 'LATITUDE', 'long':'LONGITUDE'})\n","\n","superNot = superNot[['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea', 'date', 'year', 'month']]\n","\n","superNot.head()"],"metadata":{"id":"kvo_UoDBnaVp","executionInfo":{"status":"ok","timestamp":1718640967130,"user_tz":300,"elapsed":540,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"colab":{"base_uri":"https://localhost:8080/","height":643},"outputId":"048187d3-d0b0-4e28-ecdd-691c7ce6e064"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Category                           Name  \\\n","0  EPA NPL list: Brown site  103RD STREET TRANSFER STATION   \n","1  EPA NPL list: Brown site           109TH PLACE TEAR GAS   \n","2  EPA NPL list: Brown site     1150 LAKE SHORE DRIVE SITE   \n","3  EPA NPL list: Brown site              136TH STREET DRUM   \n","4  EPA NPL list: Brown site                  34TH & KEDZIE   \n","\n","                                           Address  LATITUDE  LONGITUDE     GEOID10 commarea  \\\n","0                   103rd Street Chicago, IL 60617     41.71     -87.56  1703151020        5   \n","1            WEST 109TH PLACE CHICAGO IL Â 60628Â      41.70     -87.63  1703149100        4   \n","2       1150 LAKE SHORE DRIVE CHICAGO IL Â 60611Â      41.90     -87.63  1703108120            \n","3  340 EAST 136TH STREET CHICAGO IL Â 60827-1868Â      41.65     -87.61  1703154010        5   \n","4               34TH & KEDZIE CHICAGO IL Â 60623Â      41.83     -87.72  1703183050        3   \n","\n","   date  year  month  \n","0   NaN   NaN    NaN  \n","1   NaN   NaN    NaN  \n","2   NaN   NaN    NaN  \n","3   NaN   NaN    NaN  \n","4   NaN   NaN    NaN  "],"text/html":["\n","  <div id=\"df-5c169b72-914f-4351-8371-2e64758a8967\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Name</th>\n","      <th>Address</th>\n","      <th>LATITUDE</th>\n","      <th>LONGITUDE</th>\n","      <th>GEOID10</th>\n","      <th>commarea</th>\n","      <th>date</th>\n","      <th>year</th>\n","      <th>month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>EPA NPL list: Brown site</td>\n","      <td>103RD STREET TRANSFER STATION</td>\n","      <td>103rd Street Chicago, IL 60617</td>\n","      <td>41.71</td>\n","      <td>-87.56</td>\n","      <td>1703151020</td>\n","      <td>5</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>EPA NPL list: Brown site</td>\n","      <td>109TH PLACE TEAR GAS</td>\n","      <td>WEST 109TH PLACE CHICAGO IL Â 60628Â</td>\n","      <td>41.70</td>\n","      <td>-87.63</td>\n","      <td>1703149100</td>\n","      <td>4</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>EPA NPL list: Brown site</td>\n","      <td>1150 LAKE SHORE DRIVE SITE</td>\n","      <td>1150 LAKE SHORE DRIVE CHICAGO IL Â 60611Â</td>\n","      <td>41.90</td>\n","      <td>-87.63</td>\n","      <td>1703108120</td>\n","      <td></td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>EPA NPL list: Brown site</td>\n","      <td>136TH STREET DRUM</td>\n","      <td>340 EAST 136TH STREET CHICAGO IL Â 60827-1868Â</td>\n","      <td>41.65</td>\n","      <td>-87.61</td>\n","      <td>1703154010</td>\n","      <td>5</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>EPA NPL list: Brown site</td>\n","      <td>34TH &amp; KEDZIE</td>\n","      <td>34TH &amp; KEDZIE CHICAGO IL Â 60623Â</td>\n","      <td>41.83</td>\n","      <td>-87.72</td>\n","      <td>1703183050</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5c169b72-914f-4351-8371-2e64758a8967')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5c169b72-914f-4351-8371-2e64758a8967 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5c169b72-914f-4351-8371-2e64758a8967');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0c86549f-ac1f-4095-817c-d95f812eabc8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0c86549f-ac1f-4095-817c-d95f812eabc8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0c86549f-ac1f-4095-817c-d95f812eabc8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"superNot","summary":"{\n  \"name\": \"superNot\",\n  \"rows\": 614,\n  \"fields\": [\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"EPA NPL list: Superfund\",\n          \"EPA NPL list: Brown site\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 603,\n        \"samples\": [\n          \"CHEM-CLEAR\",\n          \"STEARNS QUARRY\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Address\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 612,\n        \"samples\": [\n          \"2700 170TH ST LANSING IL \\u00c2\\u00a060438\\u00c2\\u00a0\",\n          \"19611 CRAWFORD AVENUE FLOSSMOOR IL \\u00c2\\u00a060422\\u00c2\\u00a0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LATITUDE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1538434805492232,\n        \"min\": 41.4506758,\n        \"max\": 42.2830786,\n        \"num_unique_values\": 597,\n        \"samples\": [\n          41.65628419999999,\n          42.0267762\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LONGITUDE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1281183240162162,\n        \"min\": -88.1856301,\n        \"max\": -87.5211642,\n        \"num_unique_values\": 597,\n        \"samples\": [\n          -87.7136098,\n          -87.7069554\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GEOID10\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 161,\n        \"samples\": [\n          \"1703164060\",\n          \"1703153060\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"commarea\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"4\",\n          \"7\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["frames.append('superNot')\n","frames"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vNPXlrC77czJ","executionInfo":{"status":"ok","timestamp":1718640973418,"user_tz":300,"elapsed":193,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"ad8c8591-4281-4fd2-9a3a-974b7113b205"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['asb', 'env', 'lic', 'haz', 'land', 'rsei', 'superNot']"]},"metadata":{},"execution_count":37}]},{"cell_type":"markdown","source":["## Wastewater"],"metadata":{"id":"g7MClJqYoC54"}},{"cell_type":"code","source":["# Reload line listing\n","wwater = pd.read_csv(dir + 'EPA/Wastewater/CookCoWWStormBiosolids_line.csv')\n","\n","columns_to_convert = ['GEOID10', 'commarea']\n","wwater[columns_to_convert] = wwater[columns_to_convert].astype(str)\n","\n","wwater['GEOID10'] = wwater['GEOID10'].str[:-3]\n","wwater['commarea'] = wwater['commarea'].str[:-3]\n","\n","wwater['date'] = np.nan\n","wwater['year'] = np.nan\n","wwater['month'] = np.nan\n","\n","wwater['Category'] = 'EPA wastewater biosolids'\n","\n","wwater = wwater.rename(columns={'CWPName': 'Name', 'oneline': 'Address', 'lat': 'LATITUDE', 'long':'LONGITUDE'})\n","\n","wwater = wwater[['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea', 'date', 'year', 'month']]\n","\n","wwater.head()"],"metadata":{"id":"T7Rt9anDoD-z","executionInfo":{"status":"ok","timestamp":1718640976371,"user_tz":300,"elapsed":1052,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"colab":{"base_uri":"https://localhost:8080/","height":469},"outputId":"22b8e9a7-f5ef-43a7-8dfb-db5926a5c98f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Category                             Name  \\\n","0  EPA wastewater biosolids         10 SOUTH RIVERSIDE PLAZA   \n","1  EPA wastewater biosolids                    119TH ST #521   \n","2  EPA wastewater biosolids        120 SOUTH RIVERSIDE PLAZA   \n","3  EPA wastewater biosolids                   13 UNIT CONDOS   \n","4  EPA wastewater biosolids  1420/1430 MEACHAM REDEVELOPMENT   \n","\n","                                Address  LATITUDE  LONGITUDE     GEOID10 commarea  date  year  \\\n","0   10 SOUTH RIVERSIDE PLAZA CHICAGO IL     41.88     -87.64  1703128190        2   NaN   NaN   \n","1            1819 WEST 119TH CHICAGO IL     41.68     -87.67  1703175050        7   NaN   NaN   \n","2  120 SOUTH RIVERSIDE PLAZA CHICAGO IL     41.88     -87.64  1703128190        2   NaN   NaN   \n","3         10335 DEARLOVE RD GLENVIEW IL     42.07     -87.86                        NaN   NaN   \n","4       1420 MEACHAM ROAD SCHAUMBURG IL     42.06     -88.05                        NaN   NaN   \n","\n","   month  \n","0    NaN  \n","1    NaN  \n","2    NaN  \n","3    NaN  \n","4    NaN  "],"text/html":["\n","  <div id=\"df-5897155a-0df8-4a16-80f7-64fa2df81f40\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Name</th>\n","      <th>Address</th>\n","      <th>LATITUDE</th>\n","      <th>LONGITUDE</th>\n","      <th>GEOID10</th>\n","      <th>commarea</th>\n","      <th>date</th>\n","      <th>year</th>\n","      <th>month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>EPA wastewater biosolids</td>\n","      <td>10 SOUTH RIVERSIDE PLAZA</td>\n","      <td>10 SOUTH RIVERSIDE PLAZA CHICAGO IL</td>\n","      <td>41.88</td>\n","      <td>-87.64</td>\n","      <td>1703128190</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>EPA wastewater biosolids</td>\n","      <td>119TH ST #521</td>\n","      <td>1819 WEST 119TH CHICAGO IL</td>\n","      <td>41.68</td>\n","      <td>-87.67</td>\n","      <td>1703175050</td>\n","      <td>7</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>EPA wastewater biosolids</td>\n","      <td>120 SOUTH RIVERSIDE PLAZA</td>\n","      <td>120 SOUTH RIVERSIDE PLAZA CHICAGO IL</td>\n","      <td>41.88</td>\n","      <td>-87.64</td>\n","      <td>1703128190</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>EPA wastewater biosolids</td>\n","      <td>13 UNIT CONDOS</td>\n","      <td>10335 DEARLOVE RD GLENVIEW IL</td>\n","      <td>42.07</td>\n","      <td>-87.86</td>\n","      <td></td>\n","      <td></td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>EPA wastewater biosolids</td>\n","      <td>1420/1430 MEACHAM REDEVELOPMENT</td>\n","      <td>1420 MEACHAM ROAD SCHAUMBURG IL</td>\n","      <td>42.06</td>\n","      <td>-88.05</td>\n","      <td></td>\n","      <td></td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5897155a-0df8-4a16-80f7-64fa2df81f40')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5897155a-0df8-4a16-80f7-64fa2df81f40 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5897155a-0df8-4a16-80f7-64fa2df81f40');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9ecd95bc-1139-4684-9f98-d7f0ec599877\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9ecd95bc-1139-4684-9f98-d7f0ec599877')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9ecd95bc-1139-4684-9f98-d7f0ec599877 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"wwater","summary":"{\n  \"name\": \"wwater\",\n  \"rows\": 1444,\n  \"fields\": [\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"EPA wastewater biosolids\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1374,\n        \"samples\": [\n          \"FFE TRANSPORTATION SERVICE\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Address\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1376,\n        \"samples\": [\n          \"7700 WEST 71ST STREET BRIDGEVIEW IL\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LATITUDE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.25535409644531,\n        \"min\": 37.0833893,\n        \"max\": 42.3997407,\n        \"num_unique_values\": 1264,\n        \"samples\": [\n          41.5565462\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LONGITUDE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.20904473495329984,\n        \"min\": -90.1905917,\n        \"max\": -87.5254043,\n        \"num_unique_values\": 1262,\n        \"samples\": [\n          -87.6361387\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GEOID10\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 96,\n        \"samples\": [\n          \"1703183970\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"commarea\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"7\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["frames.append('wwater')\n","print(frames)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G_6yYMFD7e5z","executionInfo":{"status":"ok","timestamp":1718640980562,"user_tz":300,"elapsed":257,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"a25a7b9f-b688-4862-fbb5-7f05c6f5d4ff"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['asb', 'env', 'lic', 'haz', 'land', 'rsei', 'superNot', 'wwater']\n"]}]},{"cell_type":"markdown","source":["# *HIFLD*"],"metadata":{"id":"hxSUeiKwoMXx"}},{"cell_type":"markdown","source":["## Manufacturing"],"metadata":{"id":"MoKdsn0uoWIn"}},{"cell_type":"code","source":["mfg = pd.read_csv(dir + 'Homeland infrastructure/HIFLD mfg facilities/Chicago_facil_line.csv')\n","\n","columns_to_convert = ['ADDRESS', 'CITY', 'STATE', 'ZIP']\n","mfg[columns_to_convert] = mfg[columns_to_convert].astype(str)\n","\n","mfg['Address1'] = mfg['ADDRESS'] + ' ' + mfg['CITY'] + ', ' + mfg['STATE'] + ' ' + mfg['ZIP']\n","\n","mfg['GEOID10'] = wwater['GEOID10'].str[:-3]\n","mfg['commarea'] = wwater['commarea'].str[:-3]\n","\n","mfg['date'] = np.nan\n","mfg['year'] = np.nan\n","mfg['month'] = np.nan\n","\n","mfg['Category'] = 'HIFLD mfg: ' + mfg['PRODUCT']\n","\n","mfg = mfg.rename(columns={'NAME': 'Name', 'Address1': 'Address'})\n","\n","mfg = mfg[['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea', 'date', 'year', 'month']]\n","\n","mfg.head()"],"metadata":{"id":"xANHAV1-oUkI","executionInfo":{"status":"ok","timestamp":1718640984761,"user_tz":300,"elapsed":1526,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"colab":{"base_uri":"https://localhost:8080/","height":591},"outputId":"8d8e46ef-f696-443a-8fd6-4f7043ab1223"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                            Category                Name  \\\n","0            HIFLD mfg: CUSHIONED PACKAGING MATERIAL           ADE, INC.   \n","1                              HIFLD mfg: SWEETENERS  AMERICAN SWEETENER   \n","2  HIFLD mfg: FEED & INDUSTRIAL GRADE VEGETABLE O...      AGRI-FINE INC.   \n","3                         HIFLD mfg: CUSTOM CABINETS   DANMARIE CABINETS   \n","4  HIFLD mfg: PLASTIC MIXING CUPS, SPRAY SUITS, C...             E-Z MIX   \n","\n","                                           Address  LATITUDE  LONGITUDE  GEOID10 commarea  date  \\\n","0         1430 EAST 130TH STREET CHICAGO, IL 60633     41.66     -87.58  1703128            NaN   \n","1         2400 EAST 130TH STREET CHICAGO, IL 60633     41.66     -87.57  1703175            NaN   \n","2         2701 EAST 100TH STREET CHICAGO, IL 60617     41.71     -87.56  1703128            NaN   \n","3  10332 SOUTH COMMERCIAL AVENUE CHICAGO, IL 60617     41.71     -87.55                     NaN   \n","4   8600 SOUTH COMMERCIAL AVENUE CHICAGO, IL 60617     41.74     -87.55                     NaN   \n","\n","   year  month  \n","0   NaN    NaN  \n","1   NaN    NaN  \n","2   NaN    NaN  \n","3   NaN    NaN  \n","4   NaN    NaN  "],"text/html":["\n","  <div id=\"df-61513dbb-11d2-4b6d-a032-31097d344f91\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Name</th>\n","      <th>Address</th>\n","      <th>LATITUDE</th>\n","      <th>LONGITUDE</th>\n","      <th>GEOID10</th>\n","      <th>commarea</th>\n","      <th>date</th>\n","      <th>year</th>\n","      <th>month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>HIFLD mfg: CUSHIONED PACKAGING MATERIAL</td>\n","      <td>ADE, INC.</td>\n","      <td>1430 EAST 130TH STREET CHICAGO, IL 60633</td>\n","      <td>41.66</td>\n","      <td>-87.58</td>\n","      <td>1703128</td>\n","      <td></td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>HIFLD mfg: SWEETENERS</td>\n","      <td>AMERICAN SWEETENER</td>\n","      <td>2400 EAST 130TH STREET CHICAGO, IL 60633</td>\n","      <td>41.66</td>\n","      <td>-87.57</td>\n","      <td>1703175</td>\n","      <td></td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>HIFLD mfg: FEED &amp; INDUSTRIAL GRADE VEGETABLE O...</td>\n","      <td>AGRI-FINE INC.</td>\n","      <td>2701 EAST 100TH STREET CHICAGO, IL 60617</td>\n","      <td>41.71</td>\n","      <td>-87.56</td>\n","      <td>1703128</td>\n","      <td></td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>HIFLD mfg: CUSTOM CABINETS</td>\n","      <td>DANMARIE CABINETS</td>\n","      <td>10332 SOUTH COMMERCIAL AVENUE CHICAGO, IL 60617</td>\n","      <td>41.71</td>\n","      <td>-87.55</td>\n","      <td></td>\n","      <td></td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>HIFLD mfg: PLASTIC MIXING CUPS, SPRAY SUITS, C...</td>\n","      <td>E-Z MIX</td>\n","      <td>8600 SOUTH COMMERCIAL AVENUE CHICAGO, IL 60617</td>\n","      <td>41.74</td>\n","      <td>-87.55</td>\n","      <td></td>\n","      <td></td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-61513dbb-11d2-4b6d-a032-31097d344f91')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-61513dbb-11d2-4b6d-a032-31097d344f91 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-61513dbb-11d2-4b6d-a032-31097d344f91');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-798b18f2-2461-477f-b747-b689b836c7d5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-798b18f2-2461-477f-b747-b689b836c7d5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-798b18f2-2461-477f-b747-b689b836c7d5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"mfg","summary":"{\n  \"name\": \"mfg\",\n  \"rows\": 1341,\n  \"fields\": [\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1196,\n        \"samples\": [\n          \"HIFLD mfg: VACUUM FORMING, ACRYLIC FABRICATION & POLYURETHANE FOAM\",\n          \"HIFLD mfg: TEAS, HOT & COLD BEVERAGES, SAUCES, SEASONINGS & INJECTION MOLDED PLASTICS\",\n          \"HIFLD mfg: CORPORATE HEADQUARTERS; CULINARY APPAREL FOR THE RESTAURANT & HOSPITALITY INDUSTRY (MFG. SUBCONTRACTED)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1316,\n        \"samples\": [\n          \"CROWN STEEL SALES, INC.\",\n          \"GREAT WESTERN BEEF CO., INC.\",\n          \"ARMBRUST PAPER TUBES, INC.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Address\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1257,\n        \"samples\": [\n          \"6917 WEST 59TH STREET CHICAGO, IL 60638\",\n          \"2016 NORTH AUSTIN AVENUE CHICAGO, IL 60639\",\n          \"5849 SOUTH BISHOP STREET CHICAGO, IL 60636\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LATITUDE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07111287733311444,\n        \"min\": 41.6448798,\n        \"max\": 42.0228434,\n        \"num_unique_values\": 1270,\n        \"samples\": [\n          41.9449504,\n          41.9459053,\n          41.8144528\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LONGITUDE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.05571045748996347,\n        \"min\": -87.8664359,\n        \"max\": -87.539227,\n        \"num_unique_values\": 1274,\n        \"samples\": [\n          -87.6385356,\n          -87.6013003,\n          -87.7085169\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GEOID10\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 41,\n        \"samples\": [\n          \"1703170\",\n          \"1703155\",\n          \"1703184\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"commarea\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["mfg['Category'].value_counts().head(40)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0Rcy3ef3KE2N","executionInfo":{"status":"ok","timestamp":1718640988294,"user_tz":300,"elapsed":210,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"2d62562b-8c23-45a7-a874-cccf0e553b41"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Category\n","HIFLD mfg: NEWSPAPER PUBLISHING                     20\n","HIFLD mfg: MAGAZINE PUBLISHING                      13\n","HIFLD mfg: COMMERCIAL PRINTING                      12\n","HIFLD mfg: MEAT PROCESSING & PACKING                 7\n","HIFLD mfg: MEAT PROCESSING                           7\n","HIFLD mfg: SCRAP METAL RECYCLING                     6\n","HIFLD mfg: BOOK PUBLISHING                           5\n","HIFLD mfg: STEEL SLITTING                            4\n","HIFLD mfg: SCREW MACHINE PRODUCTS                    4\n","HIFLD mfg: PLASTIC INJECTION MOLDING                 4\n","HIFLD mfg: INSTANT PRINTING                          4\n","HIFLD mfg: METAL FABRICATION                         4\n","HIFLD mfg: CORRUGATED BOXES                          4\n","HIFLD mfg: MACHINING JOB SHOP                        3\n","HIFLD mfg: COMMERCIAL OFFSET PRINTING                3\n","HIFLD mfg: HAIR CARE PRODUCTS                        3\n","HIFLD mfg: DIGITAL PRINTING                          3\n","HIFLD mfg: OFFSET PRINTING                           3\n","HIFLD mfg: STEEL FABRICATION                         3\n","HIFLD mfg: TRADE MAGAZINE PUBLISHING                 3\n","HIFLD mfg: SHEET METAL FABRICATION                   3\n","HIFLD mfg: READY-MIXED CONCRETE                      3\n","HIFLD mfg: BAKERY PRODUCTS                           3\n","HIFLD mfg: LIGHTING FIXTURES                         3\n","HIFLD mfg: CONTRACT PACKAGING                        3\n","HIFLD mfg: PRECIOUS METAL JEWELRY                    3\n","HIFLD mfg: SCRAP METAL PROCESSING                    3\n","HIFLD mfg: PERIODICAL PUBLISHING                     3\n","HIFLD mfg: WOODEN PALLETS & SKIDS                    2\n","HIFLD mfg: ELECTROPLATING                            2\n","HIFLD mfg: ALUMINUM ANODIZING                        2\n","HIFLD mfg: MEAT PACKING                              2\n","HIFLD mfg: ICE                                       2\n","HIFLD mfg: CONTRACT ASSEMBLY & PACKAGING             2\n","HIFLD mfg: COMMERCIAL PRINTING & TYPESETTING         2\n","HIFLD mfg: METAL PERFORATING                         2\n","HIFLD mfg: METAL STAMPINGS & TOOL & DIE JOB SHOP     2\n","HIFLD mfg: MEAT & SAUSAGE PROCESSING & PACKING       2\n","HIFLD mfg: WEEKLY NEWSPAPER PUBLISHING               2\n","HIFLD mfg: WOODEN PALLETS                            2\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["mfg['Category'].value_counts()[41:80]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x3xuMDcHKV51","executionInfo":{"status":"ok","timestamp":1718640991963,"user_tz":300,"elapsed":195,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"b34e34df-6d1f-47e3-cbef-80391b7b80b8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Category\n","HIFLD mfg: ARCHITECTURAL WOODWORK                                                                                               2\n","HIFLD mfg: HIGH-VOLTAGE CAPACITORS                                                                                              2\n","HIFLD mfg: FRATERNAL MAGAZINE PUBLISHING                                                                                        2\n","HIFLD mfg: FINE JEWELRY                                                                                                         2\n","HIFLD mfg: SCREEN PRINTING & EMBROIDERY                                                                                         2\n","HIFLD mfg: SCREEN PRINTING                                                                                                      2\n","HIFLD mfg: PRECISION MACHINING JOB SHOP                                                                                         2\n","HIFLD mfg: SPANISH-LANGUAGE NEWSPAPER PUBLISHING                                                                                2\n","HIFLD mfg: PRESSURE SENSITIVE LABELS & TAPES                                                                                    2\n","HIFLD mfg: METAL SPINNING                                                                                                       2\n","HIFLD mfg: MEAT PACKING & PROCESSING                                                                                            2\n","HIFLD mfg: CHICKEN PROCESSING                                                                                                   2\n","HIFLD mfg: STEEL DRUMS                                                                                                          2\n","HIFLD mfg: WELDING JOB SHOP                                                                                                     2\n","HIFLD mfg: AIR & HYDRAULIC CYLINDERS                                                                                            2\n","HIFLD mfg: MEAT & SAUSAGE PROCESSING                                                                                            2\n","HIFLD mfg: BAKERY PRODUCTS, INCLUDING CAKES                                                                                     2\n","HIFLD mfg: MAGAZINE & NEWSLETTER PUBLISHING                                                                                     2\n","HIFLD mfg: COLOR SEPARATIONS                                                                                                    2\n","HIFLD mfg: FOLDING PAPER CARTONS                                                                                                2\n","HIFLD mfg: LITHOGRAPHIC PRINTING                                                                                                2\n","HIFLD mfg: SHEET METAL, WIRE DISPLAY STANDS & TUBULAR PRODUCT FABRICATION                                                       1\n","HIFLD mfg: CUSTOM SALON DESIGN & SALON EQUIPMENT FOR BEAUTY SHOPS, BARBER SHOPS, SPAS & EDUCATIONAL FACILITIES                  1\n","HIFLD mfg: INK, ADHESIVES, SOAPS & DETERGENT CLEANING COMPOUNDS                                                                 1\n","HIFLD mfg: INDUSTRIAL WATER TREAMENT CHEMICALS                                                                                  1\n","HIFLD mfg: OFFSET & DIGITAL PRINTING                                                                                            1\n","HIFLD mfg: DIVISIONAL HEADQUARTERS & OFFSET, DIGITAL & LITHOGRAPHIC PRINTING FOR THE ARCHITECTURAL ENGINEERING, CONSTRUCTION    1\n","HIFLD mfg: ZINC & ALUMINUM ALLOYS, INCLUDING CADMIUM, NICKEL & ZINC ANODES                                                      1\n","HIFLD mfg: PORK PROCESSING & PACKAGING                                                                                          1\n","HIFLD mfg: ABRASIVE COMPOUNDS                                                                                                   1\n","HIFLD mfg: WELDED WIRE ASSEMBLIES, CNC WIRE FORMS, MESH WELDING, OEM PARTS, POINT-OF-PURCHASE DISPLAYS, WIRE STRAIGHTENING      1\n","HIFLD mfg: TRACK & ROLLER PARTITION SYSTEMS                                                                                     1\n","HIFLD mfg: STAINLESS STEEL WINE DRUMS & HAZARDOUS WASTE CONTAINERS                                                              1\n","HIFLD mfg: TEXTILE GOODS                                                                                                        1\n","HIFLD mfg: SAMPLE BOOKS & CARDS                                                                                                 1\n","HIFLD mfg: LOUVERS & DAMPERS                                                                                                    1\n","HIFLD mfg: DOUBLE DISC GRINDING & BLANCHARD GRINDING                                                                            1\n","HIFLD mfg: SCIENTIFIC & LABORATORY TESTING EQUIPMENT & SUPPLIES                                                                 1\n","HIFLD mfg: COMPANY HEADQUARTERS; INSTANT PRINTING                                                                               1\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["mfg['Category'].value_counts()[81:120]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SVR1IlnUKcNv","executionInfo":{"status":"ok","timestamp":1718640995619,"user_tz":300,"elapsed":192,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"25cc59c1-4b7f-4770-dc16-8190620ac3e3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Category\n","HIFLD mfg: TEXTILE SCREEN PRINTING                                                                                         1\n","HIFLD mfg: FORTUNE COOKIES                                                                                                 1\n","HIFLD mfg: CORRUGATED BOXES & CARTONS                                                                                      1\n","HIFLD mfg: DANCING SHOES, CLOTHING & COSTUMES                                                                              1\n","HIFLD mfg: WIPING RAGS, NONWOVEN WIPERS & WASHROOM SUPPLIES                                                                1\n","HIFLD mfg: POINT-OF-PURCHASE DISPLAY RACKS, WIRE & TUBE FABRICATION                                                        1\n","HIFLD mfg: SHEET METAL & MUSEUM STORAGE CABINETS & ENCLOSURES, INCLUDING PRECISION METAL FABRICATION FOR THE OEM MARKET    1\n","HIFLD mfg: POINT-OF-PURCHASE & MERCHANDISE DISPLAYS                                                                        1\n","HIFLD mfg: CANDY BARS                                                                                                      1\n","HIFLD mfg: AIRPORT LIGHTING EQUIPMENT & WIRING DEVICES, INCLUDING REGULATORS & CONTROL PANELS                              1\n","HIFLD mfg: BUSINESS TRADE JOURNALS PUBLISHING                                                                              1\n","HIFLD mfg: CORPORATE HEADQUARTERS; PAPER-BASED PACKAGING & CONTAINERS, SOLID BLEACHED SULFATE & PAPER RECYCLING            1\n","HIFLD mfg: ORNAMENTAL IRONWORK STAIRS & STAIR RAILINGS                                                                     1\n","HIFLD mfg: CALIPER ASSEMBLY                                                                                                1\n","HIFLD mfg: SALT PROCESSING                                                                                                 1\n","HIFLD mfg: ACRYLIC & DENTAL RESINS, SOLDERING MACHINES & ACCESSORIES                                                       1\n","HIFLD mfg: FLEXOGRAPHIC & ROTOGRAVURE INKS                                                                                 1\n","HIFLD mfg: DIVISIONAL HEADQUARTERS; ZERO CALORIE SWEETENERS                                                                1\n","HIFLD mfg: FAUCETS & KITCHEN & BATH ACCESSORIES                                                                            1\n","HIFLD mfg: CANVAS PRODUCTS & REINFORCED PLASTICS, LINERS & GEOMEMBRANES                                                    1\n","HIFLD mfg: METAL SPRINGS, WIRE FORMS, STAMPINGS, STEEL CONNECTING RODS, TUBING & RINGS                                     1\n","HIFLD mfg: COLD HEADING WIRE                                                                                               1\n","HIFLD mfg: FOOD SERVICE & INDUSTRIAL WAXED PAPER PRODUCTS                                                                  1\n","HIFLD mfg: PAPER & SCRAP METAL RECYCLING                                                                                   1\n","HIFLD mfg: PRECISION SHEET METAL FABRICATION OF STORE DISPLAYS & LAMP PARTS                                                1\n","HIFLD mfg: PAPER RECYCLING                                                                                                 1\n","HIFLD mfg: FRUIT JUICES & CONCENTRATES                                                                                     1\n","HIFLD mfg: COMMERCIAL OFFSET SHEET-FED PRINTING                                                                            1\n","HIFLD mfg: PLASTIC PROCESSING & RECYCLING                                                                                  1\n","HIFLD mfg: BATTERY OPERATED FANS, RECHARGEABLE FANS & PORTABLE HYDRATION PRODUCTS                                          1\n","HIFLD mfg: TROPICAL FRUIT SPREADS & SYRUPS                                                                                 1\n","HIFLD mfg: LIQUORS & CORDIALS                                                                                              1\n","HIFLD mfg: CHOCOLATE CANDIES, FUDGE, ICE CREAM & TOPPINGS                                                                  1\n","HIFLD mfg: MAYONNAISE & DRESSINGS                                                                                          1\n","HIFLD mfg: STAINLESS STEEL SHEET POLISHING                                                                                 1\n","HIFLD mfg: LIQUID & POWDER DETERGENTS & RUNWAY DE-ICERS                                                                    1\n","HIFLD mfg: COMMERCIAL OFFSET PRINTING, ELECTRONIC PREPRESS & BINDERY                                                       1\n","HIFLD mfg: GLASS CARVING, ETCHING, PAINTING & SANDBLASTING & CLAY SCULPTING                                                1\n","HIFLD mfg: PLASTIC & STEEL PAILS, TIN CANS, CARDBOARD CARTONS, PLASTIC DRUMS, BOTTLES & JARS                               1\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["mfg['Category'].value_counts().tail(40)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JmgA-QCgKQIQ","executionInfo":{"status":"ok","timestamp":1718641000152,"user_tz":300,"elapsed":193,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"24b225b6-7328-4de0-afde-423a3b43ef3f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Category\n","HIFLD mfg: ALUMINUM, BRONZE & BRASS SAND CASTINGS, INCLUDING FOUNDRY, HEAT TREATING, MACHINING, PATTERN TOOLING & DESIGN     1\n","HIFLD mfg: PICTURE FRAMES & MIRRORS                                                                                          1\n","HIFLD mfg: KOSHER FROZEN FOODS                                                                                               1\n","HIFLD mfg: APPAREL SCREEN PRINTING                                                                                           1\n","HIFLD mfg: CORPORATE HEADQUARTERS & SPRING, STRIP, BAR, SHEET & STAINLESS STEEL TUBING & SLITTING                            1\n","HIFLD mfg: BOILERS & METAL TANKS, KETTLES & SMOKE STACKS                                                                     1\n","HIFLD mfg: CORPORATE HEADQUARTERS & ICE                                                                                      1\n","HIFLD mfg: CONCENTRATED JUICE                                                                                                1\n","HIFLD mfg: RECYCLED WOODEN PALLETS                                                                                           1\n","HIFLD mfg: SMOKED MEATS & POULTRY                                                                                            1\n","HIFLD mfg: BAKERY TOPPINGS                                                                                                   1\n","HIFLD mfg: BUSINESS MAGAZINE PUBLISHING                                                                                      1\n","HIFLD mfg: BOOKBINDING                                                                                                       1\n","HIFLD mfg: GLASS STORE FRONT ENTRANCES                                                                                       1\n","HIFLD mfg: SHEET METAL FABRICATION & ROOFING                                                                                 1\n","HIFLD mfg: VINYL WINDOWS                                                                                                     1\n","HIFLD mfg: CHROME PLATED AGRICULTURAL KNIFE SECTIONS                                                                         1\n","HIFLD mfg: PHOSPHATES                                                                                                        1\n","HIFLD mfg: PRECIOUS & SEMIPRECIOUS JEWELRY                                                                                   1\n","HIFLD mfg: PRECISION SHEET METAL CUTTING                                                                                     1\n","HIFLD mfg: PRECISION CENTERLESS BAR GRINDING JOB SHOP                                                                        1\n","HIFLD mfg: BOX PARTITIONS, PADS, INSERTS & SEPARATORS                                                                        1\n","HIFLD mfg: STEEL SHEETS                                                                                                      1\n","HIFLD mfg: HARPS                                                                                                             1\n","HIFLD mfg: COMMERCIAL PRINTING & DIGITAL PREPRESS                                                                            1\n","HIFLD mfg: COFFEE ROASTING, BLENDING & PACKAGING                                                                             1\n","HIFLD mfg: CORPORATE HEADQUARTERS & UPHOLSTERED FURNITURE & CASE GOODS                                                       1\n","HIFLD mfg: CORPORATE HEADQUARTERS & NATURAL SAUSAGE CASINGS                                                                  1\n","HIFLD mfg: MEDICAL EQUIPMENT                                                                                                 1\n","HIFLD mfg: BRASS, ALUMINUM & COPPER TUBES, RODS, STRIPS & SHEETS FOR HOBBY, HARDWARE, CRAFT & DO-IT-YOURSELF APPLICATIONS    1\n","HIFLD mfg: PRESSURE-SENSITIVE LABELS                                                                                         1\n","HIFLD mfg: AUTOMOTIVE RUBBER PRODUCTS                                                                                        1\n","HIFLD mfg: DRAFT BEER DISPENSING EQUIPMENT                                                                                   1\n","HIFLD mfg: MAGNETIC SHEET STEEL & SLIT COIL, TRANSFORMER & MOTOR LAMINATIONS                                                 1\n","HIFLD mfg: VINYL ADVERTISING SPECIALTIES & HOUSEWARE ITEMS & SOFT PLASTIC CONVERTING                                         1\n","HIFLD mfg: LAMPSHADES                                                                                                        1\n","HIFLD mfg: HEALTH & BEAUTY AID CONTRACT PACKAGING                                                                            1\n","HIFLD mfg: LOCOMOTIVE ENGINES                                                                                                1\n","HIFLD mfg: CORPORATE HEADQUARTERS & MARBLE & GRANITE PRODUCTS                                                                1\n","HIFLD mfg: SILK SCREENING & EMBROIDERY                                                                                       1\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["frames.append('mfg')\n","frames"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w-rceV_b7iFp","executionInfo":{"status":"ok","timestamp":1718641003310,"user_tz":300,"elapsed":203,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"edac9e17-28aa-4aef-b9cb-c05882379e26"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['asb', 'env', 'lic', 'haz', 'land', 'rsei', 'superNot', 'wwater', 'mfg']"]},"metadata":{},"execution_count":45}]},{"cell_type":"markdown","source":["## Power plants"],"metadata":{"id":"qOuCaLlfofr1"}},{"cell_type":"code","source":["power = pd.read_csv(dir + 'Homeland infrastructure/HIFLD EPA FRS power plants/Chicago_power_line.csv')\n","\n","\n","columns_to_convert = ['LOCATION_A', 'CITY_NAME', 'STATE_CODE', 'POSTAL_COD']\n","power[columns_to_convert] = power[columns_to_convert].astype(str)\n","\n","power['Zip'] = power['POSTAL_COD'].str[:5]\n","\n","power['Address1'] = power['LOCATION_A'] + ' ' + power['CITY_NAME'] + ', ' + power['STATE_CODE'] + ' ' + power['Zip']\n","\n","power['date'] = np.nan\n","power['year'] = np.nan\n","power['month'] = np.nan\n","\n","power['Category'] = 'HIFLD power plants: ' +  power['ENERGY_SRC']\n","\n","# Extracting longitude and latitude\n","power[['LONGITUDE', 'LATITUDE']] = power['geometry'].str.extract(r'POINT \\(([^ ]+) ([^ ]+)\\)')\n","\n","power = power.rename(columns={'PRIMARY_NA': 'Name', 'Address1': 'Address'})\n","\n","power = power[['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea', 'date', 'year', 'month']]\n","\n","power.head()"],"metadata":{"id":"VqFBotmMog5r","executionInfo":{"status":"ok","timestamp":1718641006256,"user_tz":300,"elapsed":808,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"colab":{"base_uri":"https://localhost:8080/","height":591},"outputId":"a7400811-7476-4b2b-ad38-23ec2e78f583"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                            Category                                   Name  \\\n","0  HIFLD power plants: Disillate Fuel Oil (all Di...                FISK GENERATING STATION   \n","1                    HIFLD power plants: Natural Gas           CALUMET ENERGY POWER STATION   \n","2                    HIFLD power plants: Natural Gas                             M & M/MARS   \n","3                    HIFLD power plants: Natural Gas    ST MARY OF NAZARETH HOSPITAL CENTER   \n","4                    HIFLD power plants: Natural Gas  UNIVERSITY OF ILLINOIS COGEN FACILITY   \n","\n","                                   Address   LATITUDE   LONGITUDE      GEOID10  commarea  date  \\\n","0     1111 W. CERMAK RD. CHICAGO, IL 60608    41.8508  -87.653297  17031843200        31   NaN   \n","1   11601 S TORRENCE AVE CHICAGO, IL 60617  41.683701  -87.556602  17031838800        51   NaN   \n","2    2019 N OAK PARK AVE CHICAGO, IL 60707  41.917301  -87.793503  17031250500        25   NaN   \n","3  2233 WEST DIVISION ST CHICAGO, IL 60622  41.901699  -87.683899  17031242400        24   NaN   \n","4         1140 S. MORGAN CHICAGO, IL 60607  41.867802    -87.6511  17031833300        28   NaN   \n","\n","   year  month  \n","0   NaN    NaN  \n","1   NaN    NaN  \n","2   NaN    NaN  \n","3   NaN    NaN  \n","4   NaN    NaN  "],"text/html":["\n","  <div id=\"df-9c5bf9d7-2f31-4e2e-be97-b126d907f86c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Name</th>\n","      <th>Address</th>\n","      <th>LATITUDE</th>\n","      <th>LONGITUDE</th>\n","      <th>GEOID10</th>\n","      <th>commarea</th>\n","      <th>date</th>\n","      <th>year</th>\n","      <th>month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>HIFLD power plants: Disillate Fuel Oil (all Di...</td>\n","      <td>FISK GENERATING STATION</td>\n","      <td>1111 W. CERMAK RD. CHICAGO, IL 60608</td>\n","      <td>41.8508</td>\n","      <td>-87.653297</td>\n","      <td>17031843200</td>\n","      <td>31</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>HIFLD power plants: Natural Gas</td>\n","      <td>CALUMET ENERGY POWER STATION</td>\n","      <td>11601 S TORRENCE AVE CHICAGO, IL 60617</td>\n","      <td>41.683701</td>\n","      <td>-87.556602</td>\n","      <td>17031838800</td>\n","      <td>51</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>HIFLD power plants: Natural Gas</td>\n","      <td>M &amp; M/MARS</td>\n","      <td>2019 N OAK PARK AVE CHICAGO, IL 60707</td>\n","      <td>41.917301</td>\n","      <td>-87.793503</td>\n","      <td>17031250500</td>\n","      <td>25</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>HIFLD power plants: Natural Gas</td>\n","      <td>ST MARY OF NAZARETH HOSPITAL CENTER</td>\n","      <td>2233 WEST DIVISION ST CHICAGO, IL 60622</td>\n","      <td>41.901699</td>\n","      <td>-87.683899</td>\n","      <td>17031242400</td>\n","      <td>24</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>HIFLD power plants: Natural Gas</td>\n","      <td>UNIVERSITY OF ILLINOIS COGEN FACILITY</td>\n","      <td>1140 S. MORGAN CHICAGO, IL 60607</td>\n","      <td>41.867802</td>\n","      <td>-87.6511</td>\n","      <td>17031833300</td>\n","      <td>28</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9c5bf9d7-2f31-4e2e-be97-b126d907f86c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9c5bf9d7-2f31-4e2e-be97-b126d907f86c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9c5bf9d7-2f31-4e2e-be97-b126d907f86c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-090849e1-4690-4b89-a835-79e531b60bad\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-090849e1-4690-4b89-a835-79e531b60bad')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-090849e1-4690-4b89-a835-79e531b60bad button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"power","summary":"{\n  \"name\": \"power\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"HIFLD power plants: Disillate Fuel Oil (all Diesel, and No. 1, No. 2, and No. 4 Fuel Oils)\",\n          \"HIFLD power plants: Natural Gas\",\n          \"HIFLD power plants: Solar (Photovoltaic, Thermal)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"CALUMET ENERGY POWER STATION\",\n          \"IIT COGENERATION PLANT\",\n          \"FISK GENERATING STATION\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Address\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"11601 S TORRENCE AVE CHICAGO, IL 60617\",\n          \"3430 S FEDERAL CHICAGO, IL 60616\",\n          \"1111 W. CERMAK RD. CHICAGO, IL 60608\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LATITUDE\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"41.683701\",\n          \"41.833599\",\n          \"41.8508\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LONGITUDE\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"-87.556602\",\n          \"-87.628304\",\n          \"-87.653297\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GEOID10\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 264869,\n        \"min\": 17031242400,\n        \"max\": 17031843200,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          17031838800,\n          17031842000,\n          17031843200\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"commarea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 24,\n        \"max\": 53,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          31,\n          51,\n          35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["frames.append('power')\n","frames"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bMp1HM2v7oAD","executionInfo":{"status":"ok","timestamp":1718641010325,"user_tz":300,"elapsed":222,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"dc5daf03-d4ea-4ead-92a5-5eb64c680281"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['asb',\n"," 'env',\n"," 'lic',\n"," 'haz',\n"," 'land',\n"," 'rsei',\n"," 'superNot',\n"," 'wwater',\n"," 'mfg',\n"," 'power']"]},"metadata":{},"execution_count":47}]},{"cell_type":"markdown","source":["## Wastewater plants"],"metadata":{"id":"QThHaMiporQ5"}},{"cell_type":"code","source":["watertreat = pd.read_csv(dir + 'Homeland infrastructure/HIFLD EPA Wastewater treatment plants/Wastewater_Treatment_Plants_Chicago_line.csv')\n","watertreat['date'] = pd.to_datetime(watertreat['CWP_EFFECTIVE_DATE'])\n","watertreat.info(verbose=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CADS6G1cCx6_","executionInfo":{"status":"ok","timestamp":1718641013310,"user_tz":300,"elapsed":800,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"949d3e62-6334-495b-c967-0ae1ff8e62ab"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 5 entries, 0 to 4\n","Data columns (total 72 columns):\n"," #   Column                         Non-Null Count  Dtype              \n","---  ------                         --------------  -----              \n"," 0   Unnamed: 0                     5 non-null      int64              \n"," 1   X                              5 non-null      float64            \n"," 2   Y                              5 non-null      float64            \n"," 3   OBJECTID_1                     5 non-null      int64              \n"," 4   NPDES_ID                       5 non-null      object             \n"," 5   REGISTRY_ID                    5 non-null      int64              \n"," 6   CWP_NAME                       5 non-null      object             \n"," 7   CWP_STREET                     5 non-null      object             \n"," 8   CWP_CITY                       5 non-null      object             \n"," 9   CWP_STATE                      5 non-null      object             \n"," 10  CWP_ZIP                        5 non-null      int64              \n"," 11  CWP_COUNTY                     5 non-null      object             \n"," 12  CWP_EPA_REGION                 5 non-null      int64              \n"," 13  CWP_INDIAN_CNTRY_FLG           5 non-null      object             \n"," 14  CWP_TRIBAL_LAND_CODE           0 non-null      float64            \n"," 15  CWP_VERSION_NUMBER             5 non-null      int64              \n"," 16  CWP_PERMIT_STATUS_TYPE         0 non-null      float64            \n"," 17  CWP_PERMIT_STATUS_TYPE_DESC    0 non-null      float64            \n"," 18  CWP_EXPIRATION_DATE            5 non-null      object             \n"," 19  CWP_FACILITY_TYPE_INDICATOR    5 non-null      object             \n"," 20  MASTER_EXTERNAL_PERMIT_NUMBER  0 non-null      float64            \n"," 21  ISSUING_AGENCY                 5 non-null      object             \n"," 22  CWP_ISSUE_DATE                 5 non-null      object             \n"," 23  CWP_EFFECTIVE_DATE             5 non-null      object             \n"," 24  CWP_TERMINATION_DATE           0 non-null      float64            \n"," 25  CWP_PERMIT_STATUS_CODE         5 non-null      object             \n"," 26  CWP_PERMIT_STATUS_DESC         5 non-null      object             \n"," 27  CWP_PERMIT_TYPE_CODE           5 non-null      object             \n"," 28  CWP_PERMIT_TYPE_DESC           5 non-null      object             \n"," 29  SIC_CODES                      5 non-null      int64              \n"," 30  NAICS_CODES                    0 non-null      float64            \n"," 31  OBJECTID                       5 non-null      int64              \n"," 32  FAC_DERIVED_FIPS               5 non-null      int64              \n"," 33  FAC_DERIVED_HUC                5 non-null      int64              \n"," 34  FAC_US_MEXICO_BORDER_FLG       0 non-null      float64            \n"," 35  CWP_CURRENT_SNC_STATUS         0 non-null      float64            \n"," 36  CWP_CURRENT_VIOL               5 non-null      object             \n"," 37  CWP_LAST_INSPECTION            5 non-null      object             \n"," 38  CWP_LAST_INFORMAL_EA           4 non-null      object             \n"," 39  CWP_MAJOR_MINOR_TYPE_FLAG      5 non-null      object             \n"," 40  STATE_WATER_BODY_NAME          5 non-null      object             \n"," 41  SOURCE_ID                      5 non-null      object             \n"," 42  FAC_MAP_FLG                    5 non-null      object             \n"," 43  CWP_13QTRS_COMPL_STATUS        1 non-null      float64            \n"," 44  FAC_TRI_REPORTER               0 non-null      float64            \n"," 45  FAC_MAP_ICON                   5 non-null      object             \n"," 46  CWP_IMP_WATER_FLG              5 non-null      object             \n"," 47  FAC_FEDERAL_AGENCY_CODE        0 non-null      float64            \n"," 48  CWP_DATE_LAST_INST_ST          5 non-null      object             \n"," 49  CWP_DATE_LAST_INST_EPA         4 non-null      object             \n"," 50  CASE_IDS                       4 non-null      object             \n"," 51  CWP_DATE_LAST_PENALTY          3 non-null      object             \n"," 52  CWP_COMPLIANCE_TRACKING        5 non-null      object             \n"," 53  CWP_SNC_FLAG                   5 non-null      object             \n"," 54  CWP_DATE_LAST_IKEA_ST          5 non-null      object             \n"," 55  CWP_DATE_LAST_FEAT_EPA         2 non-null      object             \n"," 56  CWP_DATE_LAST_FEAT_ST          3 non-null      object             \n"," 57  CWP_DATE_LAST_FEAT             3 non-null      object             \n"," 58  STATE_WATER_BODY               1 non-null      float64            \n"," 59  CWP_CURRENT_VIOL13             0 non-null      float64            \n"," 60  CWP_SNC_EVENT_DESC             0 non-null      float64            \n"," 61  CWP_CURRENT_SNC_STATUS_DATE    5 non-null      int64              \n"," 62  FEDERAL_AGENCY_NAME            0 non-null      float64            \n"," 63  FEDERAL_LAND_IND               0 non-null      float64            \n"," 64  oneline                        5 non-null      object             \n"," 65  lat                            5 non-null      float64            \n"," 66  long                           5 non-null      float64            \n"," 67  Location                       5 non-null      object             \n"," 68  geometry                       5 non-null      object             \n"," 69  GEOID10                        2 non-null      float64            \n"," 70  commarea                       2 non-null      float64            \n"," 71  date                           5 non-null      datetime64[ns, UTC]\n","dtypes: datetime64[ns, UTC](1), float64(22), int64(11), object(38)\n","memory usage: 2.9+ KB\n"]}]},{"cell_type":"code","source":["watertreat = pd.read_csv(dir + 'Homeland infrastructure/HIFLD EPA Wastewater treatment plants/Wastewater_Treatment_Plants_Chicago_line.csv')\n","\n","columns_to_convert = ['GEOID10', 'commarea', 'CWP_EFFECTIVE_DATE']\n","watertreat[columns_to_convert] = watertreat[columns_to_convert].astype(str)\n","\n","watertreat['GEOID10'] = watertreat['GEOID10'].str[:-3]\n","watertreat['commarea'] = watertreat['commarea'].str[:-3]\n","\n","watertreat['date'] = watertreat['CWP_EFFECTIVE_DATE'].str.split(' ').str[0]\n","watertreat['date'] = pd.to_datetime(watertreat['date'])\n","watertreat['year'] = watertreat['date'].dt.year\n","watertreat['month'] = watertreat['date'].dt.month\n","\n","watertreat['Category'] = 'HIFLD/EPA water treatment: ' +  watertreat['STATE_WATER_BODY_NAME']\n","\n","# Extracting longitude and latitude\n","watertreat[['LONGITUDE', 'LATITUDE']] = watertreat['geometry'].str.extract(r'POINT \\(([^ ]+) ([^ ]+)\\)')\n","\n","watertreat = watertreat.rename(columns={'CWP_NAME': 'Name', 'oneline': 'Address'})\n","\n","watertreat = watertreat[['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea', 'date', 'year', 'month']]\n","\n","watertreat.head()"],"metadata":{"id":"J7tNrsYYosb-","executionInfo":{"status":"ok","timestamp":1718641017654,"user_tz":300,"elapsed":175,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"colab":{"base_uri":"https://localhost:8080/","height":660},"outputId":"0ade6364-0519-48c0-8ac3-8c70b5f83515"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                            Category                     Name  \\\n","0    HIFLD/EPA water treatment: LITTLE CALUMET RIVER       MWRDGC CALUMET WRP   \n","1  HIFLD/EPA water treatment: CHICAGO SANITARY AN...      MWRDGC STICKNEY WRP   \n","2  HIFLD/EPA water treatment: CHICAGO SANITARY & ...        MWRDGC LEMONT WRP   \n","3           HIFLD/EPA water treatment: CHICAGO RIVER       DUS MANAGEMENT INC   \n","4              HIFLD/EPA water treatment: SALT CREEK  MWRDGC-JOHN E. EGAN WRP   \n","\n","                                         Address    LATITUDE    LONGITUDE     GEOID10 commarea  \\\n","0         400 EAST 130TH STREET CHICAGO IL 60628  41.6592971  -87.6073334  1703154010        5   \n","1       6001 WEST PERSHING ROAD CHICAGO IL 60804  41.8203319  -87.7724029                        \n","2             13 STEPHEN STREET CHICAGO IL 60439  41.6771925  -87.9999619                        \n","3  35 E WACKER DRIVE  SUITE 600 CHICAGO IL 60601  41.8865744  -87.6267937  1703132010        3   \n","4        550 SOUTH MEACHAM ROAD CHICAGO IL 60193  42.0198641  -88.0377008                        \n","\n","        date  year  month  \n","0 2017-08-01  2017      8  \n","1 2014-01-01  2014      1  \n","2 2008-02-01  2008      2  \n","3 2017-12-01  2017     12  \n","4 2007-09-01  2007      9  "],"text/html":["\n","  <div id=\"df-fc743a91-30bf-4627-9fb0-0d64a06b0179\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Name</th>\n","      <th>Address</th>\n","      <th>LATITUDE</th>\n","      <th>LONGITUDE</th>\n","      <th>GEOID10</th>\n","      <th>commarea</th>\n","      <th>date</th>\n","      <th>year</th>\n","      <th>month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>HIFLD/EPA water treatment: LITTLE CALUMET RIVER</td>\n","      <td>MWRDGC CALUMET WRP</td>\n","      <td>400 EAST 130TH STREET CHICAGO IL 60628</td>\n","      <td>41.6592971</td>\n","      <td>-87.6073334</td>\n","      <td>1703154010</td>\n","      <td>5</td>\n","      <td>2017-08-01</td>\n","      <td>2017</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>HIFLD/EPA water treatment: CHICAGO SANITARY AN...</td>\n","      <td>MWRDGC STICKNEY WRP</td>\n","      <td>6001 WEST PERSHING ROAD CHICAGO IL 60804</td>\n","      <td>41.8203319</td>\n","      <td>-87.7724029</td>\n","      <td></td>\n","      <td></td>\n","      <td>2014-01-01</td>\n","      <td>2014</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>HIFLD/EPA water treatment: CHICAGO SANITARY &amp; ...</td>\n","      <td>MWRDGC LEMONT WRP</td>\n","      <td>13 STEPHEN STREET CHICAGO IL 60439</td>\n","      <td>41.6771925</td>\n","      <td>-87.9999619</td>\n","      <td></td>\n","      <td></td>\n","      <td>2008-02-01</td>\n","      <td>2008</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>HIFLD/EPA water treatment: CHICAGO RIVER</td>\n","      <td>DUS MANAGEMENT INC</td>\n","      <td>35 E WACKER DRIVE  SUITE 600 CHICAGO IL 60601</td>\n","      <td>41.8865744</td>\n","      <td>-87.6267937</td>\n","      <td>1703132010</td>\n","      <td>3</td>\n","      <td>2017-12-01</td>\n","      <td>2017</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>HIFLD/EPA water treatment: SALT CREEK</td>\n","      <td>MWRDGC-JOHN E. EGAN WRP</td>\n","      <td>550 SOUTH MEACHAM ROAD CHICAGO IL 60193</td>\n","      <td>42.0198641</td>\n","      <td>-88.0377008</td>\n","      <td></td>\n","      <td></td>\n","      <td>2007-09-01</td>\n","      <td>2007</td>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc743a91-30bf-4627-9fb0-0d64a06b0179')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fc743a91-30bf-4627-9fb0-0d64a06b0179 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fc743a91-30bf-4627-9fb0-0d64a06b0179');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-065437c0-ce0c-4239-95ce-9850b724ae64\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-065437c0-ce0c-4239-95ce-9850b724ae64')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-065437c0-ce0c-4239-95ce-9850b724ae64 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"watertreat","summary":"{\n  \"name\": \"watertreat\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"HIFLD/EPA water treatment: CHICAGO SANITARY AND SHIP CANAL\",\n          \"HIFLD/EPA water treatment: SALT CREEK\",\n          \"HIFLD/EPA water treatment: CHICAGO SANITARY & SHIP CANAL\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"MWRDGC STICKNEY WRP\",\n          \"MWRDGC-JOHN E. EGAN WRP\",\n          \"MWRDGC LEMONT WRP\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Address\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"6001 WEST PERSHING ROAD CHICAGO IL 60804\",\n          \"550 SOUTH MEACHAM ROAD CHICAGO IL 60193\",\n          \"13 STEPHEN STREET CHICAGO IL 60439\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LATITUDE\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"41.8203319\",\n          \"42.0198641\",\n          \"41.6771925\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LONGITUDE\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"-87.7724029\",\n          \"-88.0377008\",\n          \"-87.9999619\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GEOID10\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"1703154010\",\n          \"\",\n          \"1703132010\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"commarea\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"5\",\n          \"\",\n          \"3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2007-09-01 00:00:00\",\n        \"max\": \"2017-12-01 00:00:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2014-01-01 00:00:00\",\n          \"2007-09-01 00:00:00\",\n          \"2008-02-01 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2014,\n          2007,\n          2017\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          9,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["frames.append('watertreat')\n","print(frames)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nFLz7QBw7qnx","executionInfo":{"status":"ok","timestamp":1718641021636,"user_tz":300,"elapsed":212,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"68404fa7-a981-436c-c138-6a359c0461a9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['asb', 'env', 'lic', 'haz', 'land', 'rsei', 'superNot', 'wwater', 'mfg', 'power', 'watertreat']\n"]}]},{"cell_type":"markdown","source":["# *Manually searched*"],"metadata":{"id":"Ix1woeRNo-LA"}},{"cell_type":"markdown","source":["## Industrial sites, categorized"],"metadata":{"id":"hX9rAPdXpBlw"}},{"cell_type":"code","source":["manual = pd.read_csv('/content/gdrive/My Drive/Sociome_Folder/Data Commons/Industrial sites - Data.csv')\n","\n","columns_to_convert = ['Address', 'City', 'State', 'Zip']\n","manual[columns_to_convert] = manual[columns_to_convert].astype(str)\n","\n","manual['oneline'] = manual['Address'] + ' ' + manual['City'] + ', ' + manual['State'] + ' ' + manual['Zip']\n","\n","manual.head()"],"metadata":{"id":"6SMzyHARpD2m","executionInfo":{"status":"ok","timestamp":1718641029823,"user_tz":300,"elapsed":1296,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"colab":{"base_uri":"https://localhost:8080/","height":591},"outputId":"fbf78ba3-792f-4903-e71d-0f1e2e877f5c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                             Name                         Address     City State    Zip  \\\n","0  Ardagh Metal Bevarage USA, Inc                1101 W 43rd St 1  Chicago    IL  60609   \n","1              Popular Iron Works            7800 S Claremont Ave  Chicago    IL  60620   \n","2        Chromium Industries, LLC         2625-4653 W Chicago Ave  Chicago    IL  60651   \n","3                    Siegal Steel           4747 S Kedzie Ave 1st  Chicago    IL  60632   \n","4              The Azek Group LLC  1330 W Fulton St 3rd Suite 350  Chicago    IL  60607   \n","\n","                                            Category Notes  \\\n","0                                     Metal Supplier   NaN   \n","1                                     Metal Supplier   NaN   \n","2                     Drug, Chemiecal, Paint Factory   NaN   \n","3                                     Metal Supplier   NaN   \n","4  Manufacturing of Plastics, Foams, Construction...   NaN   \n","\n","                                            oneline  \n","0                1101 W 43rd St 1 Chicago, IL 60609  \n","1            7800 S Claremont Ave Chicago, IL 60620  \n","2         2625-4653 W Chicago Ave Chicago, IL 60651  \n","3           4747 S Kedzie Ave 1st Chicago, IL 60632  \n","4  1330 W Fulton St 3rd Suite 350 Chicago, IL 60607  "],"text/html":["\n","  <div id=\"df-964b3298-bf73-47fc-9134-727c1ec5a3d4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Address</th>\n","      <th>City</th>\n","      <th>State</th>\n","      <th>Zip</th>\n","      <th>Category</th>\n","      <th>Notes</th>\n","      <th>oneline</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Ardagh Metal Bevarage USA, Inc</td>\n","      <td>1101 W 43rd St 1</td>\n","      <td>Chicago</td>\n","      <td>IL</td>\n","      <td>60609</td>\n","      <td>Metal Supplier</td>\n","      <td>NaN</td>\n","      <td>1101 W 43rd St 1 Chicago, IL 60609</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Popular Iron Works</td>\n","      <td>7800 S Claremont Ave</td>\n","      <td>Chicago</td>\n","      <td>IL</td>\n","      <td>60620</td>\n","      <td>Metal Supplier</td>\n","      <td>NaN</td>\n","      <td>7800 S Claremont Ave Chicago, IL 60620</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Chromium Industries, LLC</td>\n","      <td>2625-4653 W Chicago Ave</td>\n","      <td>Chicago</td>\n","      <td>IL</td>\n","      <td>60651</td>\n","      <td>Drug, Chemiecal, Paint Factory</td>\n","      <td>NaN</td>\n","      <td>2625-4653 W Chicago Ave Chicago, IL 60651</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Siegal Steel</td>\n","      <td>4747 S Kedzie Ave 1st</td>\n","      <td>Chicago</td>\n","      <td>IL</td>\n","      <td>60632</td>\n","      <td>Metal Supplier</td>\n","      <td>NaN</td>\n","      <td>4747 S Kedzie Ave 1st Chicago, IL 60632</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>The Azek Group LLC</td>\n","      <td>1330 W Fulton St 3rd Suite 350</td>\n","      <td>Chicago</td>\n","      <td>IL</td>\n","      <td>60607</td>\n","      <td>Manufacturing of Plastics, Foams, Construction...</td>\n","      <td>NaN</td>\n","      <td>1330 W Fulton St 3rd Suite 350 Chicago, IL 60607</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-964b3298-bf73-47fc-9134-727c1ec5a3d4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-964b3298-bf73-47fc-9134-727c1ec5a3d4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-964b3298-bf73-47fc-9134-727c1ec5a3d4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bb8bf9f2-c759-42d4-a5b7-d1ad68edc5ce\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bb8bf9f2-c759-42d4-a5b7-d1ad68edc5ce')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bb8bf9f2-c759-42d4-a5b7-d1ad68edc5ce button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"manual","summary":"{\n  \"name\": \"manual\",\n  \"rows\": 237,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 210,\n        \"samples\": [\n          \"TRETO PRODUCTS INC.\",\n          \"Fitzmar Landfill\",\n          \"ACCU-LABS, INC.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Address\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 223,\n        \"samples\": [\n          \"945 W 38th St 1St\",\n          \"1355 E 93RD ST 1\",\n          \"1445 Oakton St\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"Maywood\",\n          \"Palos Hills\",\n          \"Rosemont\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"IL \",\n          \"il\",\n          \"IL\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Zip\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 79,\n        \"samples\": [\n          \"60103\",\n          \"60609\",\n          \"60707\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"Metal Supplier\",\n          \"Drug, Chemiecal, Paint Factory\",\n          \"Administrative Commericial Office for manufacturing of plastics \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Notes\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"Active\",\n          \"https://www.americangrinding.com/\",\n          \"https://www.alliedapc.com/our-locations/west-chicago/\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"oneline\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 226,\n        \"samples\": [\n          \"945 W 38th St 1St Chicago, IL 60609\",\n          \"103rd and Doty Ave Chicago, IL 60628\",\n          \"321 Center Street Hillside, IL 60162\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":51}]},{"cell_type":"markdown","source":["### GIS"],"metadata":{"id":"AnvIc8VdpFLE"}},{"cell_type":"code","source":["# def AddLatLongTract(infile):\n","\n","manual2 = AddLatLongTract(manual)"],"metadata":{"id":"gqPCpoF9pGdF","executionInfo":{"status":"ok","timestamp":1718641067492,"user_tz":300,"elapsed":19826,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"edf77339-ffd4-4896-9535-91b817c663cf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/pyproj/crs/crs.py:141: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6\n","  in_crs_string = _prepare_from_proj_string(in_crs_string)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/interactiveshell.py:3553: FutureWarning: The `op` parameter is deprecated and will be removed in a future release. Please use the `predicate` parameter instead.\n","  exec(code_obj, self.user_global_ns, self.user_ns)\n"]}]},{"cell_type":"code","source":["# # manual2.to_csv(curated + 'Industrial sites - Data_geocoded.csv', index = False)\n","\n","# # Reload\n","manual2 = pd.read_csv(curated + 'Industrial sites - Data_geocoded.csv')\n","\n","manual2.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":660},"id":"cnJwFe2sEqvh","executionInfo":{"status":"ok","timestamp":1718641085427,"user_tz":300,"elapsed":1032,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"0aa95d97-01b2-4cbb-dff6-8000a9cac372"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                             Name                         Address     City State    Zip  \\\n","0  Ardagh Metal Bevarage USA, Inc                1101 W 43rd St 1  Chicago    IL  60609   \n","1              Popular Iron Works            7800 S Claremont Ave  Chicago    IL  60620   \n","2        Chromium Industries, LLC         2625-4653 W Chicago Ave  Chicago    IL  60651   \n","3                    Siegal Steel           4747 S Kedzie Ave 1st  Chicago    IL  60632   \n","4              The Azek Group LLC  1330 W Fulton St 3rd Suite 350  Chicago    IL  60607   \n","\n","                                            Category Notes  \\\n","0                                     Metal Supplier   NaN   \n","1                                     Metal Supplier   NaN   \n","2                     Drug, Chemiecal, Paint Factory   NaN   \n","3                                     Metal Supplier   NaN   \n","4  Manufacturing of Plastics, Foams, Construction...   NaN   \n","\n","                                            oneline   lat   long  \\\n","0                1101 W 43rd St 1 Chicago, IL 60609 41.82 -87.65   \n","1            7800 S Claremont Ave Chicago, IL 60620 41.75 -87.68   \n","2         2625-4653 W Chicago Ave Chicago, IL 60651 41.90 -87.69   \n","3           4747 S Kedzie Ave 1st Chicago, IL 60632 41.81 -87.70   \n","4  1330 W Fulton St 3rd Suite 350 Chicago, IL 60607 41.89 -87.66   \n","\n","                                           Location                               geometry  \\\n","0         1101 W 43rd St #1, Chicago, IL 60609, USA         POINT (-87.6535784 41.8157338)   \n","1      7800 S Claremont Ave, Chicago, IL 60620, USA         POINT (-87.6818991 41.7517738)   \n","2        2625 W Chicago Ave, Chicago, IL 60622, USA  POINT (-87.69286489999999 41.8955613)   \n","3    4747 S Kedzie Ave #1st, Chicago, IL 60632, USA  POINT (-87.70332859999999 41.8068439)   \n","4  1330 W Fulton St 3rd 350, Chicago, IL 60607, USA         POINT (-87.6599246 41.8867989)   \n","\n","         GEOID10  commarea  commarea_n  \n","0 17031842600.00     61.00       61.00  \n","1 17031700100.00     70.00       70.00  \n","2 17031242800.00     24.00       24.00  \n","3 17031842800.00     58.00       58.00  \n","4 17031833000.00     28.00       28.00  "],"text/html":["\n","  <div id=\"df-8fd1c781-d773-4a60-b25f-b81d1f9f0dc4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Address</th>\n","      <th>City</th>\n","      <th>State</th>\n","      <th>Zip</th>\n","      <th>Category</th>\n","      <th>Notes</th>\n","      <th>oneline</th>\n","      <th>lat</th>\n","      <th>long</th>\n","      <th>Location</th>\n","      <th>geometry</th>\n","      <th>GEOID10</th>\n","      <th>commarea</th>\n","      <th>commarea_n</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Ardagh Metal Bevarage USA, Inc</td>\n","      <td>1101 W 43rd St 1</td>\n","      <td>Chicago</td>\n","      <td>IL</td>\n","      <td>60609</td>\n","      <td>Metal Supplier</td>\n","      <td>NaN</td>\n","      <td>1101 W 43rd St 1 Chicago, IL 60609</td>\n","      <td>41.82</td>\n","      <td>-87.65</td>\n","      <td>1101 W 43rd St #1, Chicago, IL 60609, USA</td>\n","      <td>POINT (-87.6535784 41.8157338)</td>\n","      <td>17031842600.00</td>\n","      <td>61.00</td>\n","      <td>61.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Popular Iron Works</td>\n","      <td>7800 S Claremont Ave</td>\n","      <td>Chicago</td>\n","      <td>IL</td>\n","      <td>60620</td>\n","      <td>Metal Supplier</td>\n","      <td>NaN</td>\n","      <td>7800 S Claremont Ave Chicago, IL 60620</td>\n","      <td>41.75</td>\n","      <td>-87.68</td>\n","      <td>7800 S Claremont Ave, Chicago, IL 60620, USA</td>\n","      <td>POINT (-87.6818991 41.7517738)</td>\n","      <td>17031700100.00</td>\n","      <td>70.00</td>\n","      <td>70.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Chromium Industries, LLC</td>\n","      <td>2625-4653 W Chicago Ave</td>\n","      <td>Chicago</td>\n","      <td>IL</td>\n","      <td>60651</td>\n","      <td>Drug, Chemiecal, Paint Factory</td>\n","      <td>NaN</td>\n","      <td>2625-4653 W Chicago Ave Chicago, IL 60651</td>\n","      <td>41.90</td>\n","      <td>-87.69</td>\n","      <td>2625 W Chicago Ave, Chicago, IL 60622, USA</td>\n","      <td>POINT (-87.69286489999999 41.8955613)</td>\n","      <td>17031242800.00</td>\n","      <td>24.00</td>\n","      <td>24.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Siegal Steel</td>\n","      <td>4747 S Kedzie Ave 1st</td>\n","      <td>Chicago</td>\n","      <td>IL</td>\n","      <td>60632</td>\n","      <td>Metal Supplier</td>\n","      <td>NaN</td>\n","      <td>4747 S Kedzie Ave 1st Chicago, IL 60632</td>\n","      <td>41.81</td>\n","      <td>-87.70</td>\n","      <td>4747 S Kedzie Ave #1st, Chicago, IL 60632, USA</td>\n","      <td>POINT (-87.70332859999999 41.8068439)</td>\n","      <td>17031842800.00</td>\n","      <td>58.00</td>\n","      <td>58.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>The Azek Group LLC</td>\n","      <td>1330 W Fulton St 3rd Suite 350</td>\n","      <td>Chicago</td>\n","      <td>IL</td>\n","      <td>60607</td>\n","      <td>Manufacturing of Plastics, Foams, Construction...</td>\n","      <td>NaN</td>\n","      <td>1330 W Fulton St 3rd Suite 350 Chicago, IL 60607</td>\n","      <td>41.89</td>\n","      <td>-87.66</td>\n","      <td>1330 W Fulton St 3rd 350, Chicago, IL 60607, USA</td>\n","      <td>POINT (-87.6599246 41.8867989)</td>\n","      <td>17031833000.00</td>\n","      <td>28.00</td>\n","      <td>28.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8fd1c781-d773-4a60-b25f-b81d1f9f0dc4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8fd1c781-d773-4a60-b25f-b81d1f9f0dc4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8fd1c781-d773-4a60-b25f-b81d1f9f0dc4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d7034484-937d-41fa-bc4d-ab9bef00fe30\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d7034484-937d-41fa-bc4d-ab9bef00fe30')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d7034484-937d-41fa-bc4d-ab9bef00fe30 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"manual2","summary":"{\n  \"name\": \"manual2\",\n  \"rows\": 237,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 210,\n        \"samples\": [\n          \"TRETO PRODUCTS INC.\",\n          \"Fitzmar Landfill\",\n          \"ACCU-LABS, INC.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Address\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 222,\n        \"samples\": [\n          \"1600 S Kostner Ave\",\n          \"Grand Ave & County Line\",\n          \"835 N KILPATRICK AVE 1ST\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"Maywood\",\n          \"Palos Hills\",\n          \"Rosemont\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"IL \",\n          \"il\",\n          \"IL\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Zip\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3542,\n        \"min\": 6069,\n        \"max\": 60804,\n        \"num_unique_values\": 79,\n        \"samples\": [\n          60103,\n          60609,\n          60707\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"Metal Supplier\",\n          \"Drug, Chemiecal, Paint Factory\",\n          \"Administrative Commericial Office for manufacturing of plastics \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Notes\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"Active\",\n          \"https://www.americangrinding.com/\",\n          \"https://www.alliedapc.com/our-locations/west-chicago/\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"oneline\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 226,\n        \"samples\": [\n          \"945 W 38th St 1St Chicago, IL 60609\",\n          \"103rd and Doty Ave Chicago, IL 60628\",\n          \"321 Center Street Hillside, IL 60162\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lat\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1740522258584853,\n        \"min\": 40.6331249,\n        \"max\": 42.482817,\n        \"num_unique_values\": 219,\n        \"samples\": [\n          41.7237093,\n          41.8108011,\n          42.0326219\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"long\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.20798327221833166,\n        \"min\": -89.3985283,\n        \"max\": -87.5211642,\n        \"num_unique_values\": 219,\n        \"samples\": [\n          -87.648793,\n          -87.7308903,\n          -87.8810133\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Location\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 220,\n        \"samples\": [\n          \"1313 W 74th St, Chicago, IL 60636, USA\",\n          \"281 Beinoris Dr, Wood Dale, IL 60191, USA\",\n          \"2300 N Kilbourn Ave, Chicago, IL 60639, USA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"geometry\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 219,\n        \"samples\": [\n          \"POINT (-87.648793 41.7237093)\",\n          \"POINT (-87.7308903 41.8108011)\",\n          \"POINT (-87.8810133 42.0326219)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GEOID10\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 256328.3847937007,\n        \"min\": 17031060900.0,\n        \"max\": 17031980100.0,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          17031550100.0,\n          17031250200.0,\n          17031671800.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"commarea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.474805611760925,\n        \"min\": 5.0,\n        \"max\": 73.0,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          65.0,\n          66.0,\n          41.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"commarea_n\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.474805611760925,\n        \"min\": 5.0,\n        \"max\": 73.0,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          65.0,\n          66.0,\n          41.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["manual2['date'] = np.nan\n","manual2['year'] = np.nan\n","manual2['month'] = np.nan\n","\n","\n","manual2['Category2'] = 'Manual search: ' +  manual2['Category']\n","\n","manual2['geometry'] = manual2['geometry'].astype(str)\n","# Extracting longitude and latitude\n","manual2[['LONGITUDE', 'LATITUDE']] = manual2['geometry'].str.extract(r'POINT \\(([^ ]+) ([^ ]+)\\)')\n","\n","manual2.drop(columns=['Address', 'Category'], inplace=True)\n","\n","manual2 = manual2.rename(columns={'oneline': 'Address', 'Category2': 'Category'})\n","\n","manual2 = manual2[['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea', 'date', 'year', 'month']]\n","\n","manual2.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":591},"id":"anDuUrnLEfua","executionInfo":{"status":"ok","timestamp":1718641088870,"user_tz":300,"elapsed":181,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"7f0a5cdc-20d8-4d32-daf7-a299135a09cd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                            Category                            Name  \\\n","0                      Manual search: Metal Supplier  Ardagh Metal Bevarage USA, Inc   \n","1                      Manual search: Metal Supplier              Popular Iron Works   \n","2      Manual search: Drug, Chemiecal, Paint Factory        Chromium Industries, LLC   \n","3                      Manual search: Metal Supplier                    Siegal Steel   \n","4  Manual search: Manufacturing of Plastics, Foam...              The Azek Group LLC   \n","\n","                                            Address    LATITUDE           LONGITUDE  \\\n","0                1101 W 43rd St 1 Chicago, IL 60609  41.8157338         -87.6535784   \n","1            7800 S Claremont Ave Chicago, IL 60620  41.7517738         -87.6818991   \n","2         2625-4653 W Chicago Ave Chicago, IL 60651  41.8955613  -87.69286489999999   \n","3           4747 S Kedzie Ave 1st Chicago, IL 60632  41.8068439  -87.70332859999999   \n","4  1330 W Fulton St 3rd Suite 350 Chicago, IL 60607  41.8867989         -87.6599246   \n","\n","         GEOID10  commarea  date  year  month  \n","0 17031842600.00     61.00   NaN   NaN    NaN  \n","1 17031700100.00     70.00   NaN   NaN    NaN  \n","2 17031242800.00     24.00   NaN   NaN    NaN  \n","3 17031842800.00     58.00   NaN   NaN    NaN  \n","4 17031833000.00     28.00   NaN   NaN    NaN  "],"text/html":["\n","  <div id=\"df-77b98853-acdf-4b08-ac09-30bb88cbe510\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Name</th>\n","      <th>Address</th>\n","      <th>LATITUDE</th>\n","      <th>LONGITUDE</th>\n","      <th>GEOID10</th>\n","      <th>commarea</th>\n","      <th>date</th>\n","      <th>year</th>\n","      <th>month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Manual search: Metal Supplier</td>\n","      <td>Ardagh Metal Bevarage USA, Inc</td>\n","      <td>1101 W 43rd St 1 Chicago, IL 60609</td>\n","      <td>41.8157338</td>\n","      <td>-87.6535784</td>\n","      <td>17031842600.00</td>\n","      <td>61.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Manual search: Metal Supplier</td>\n","      <td>Popular Iron Works</td>\n","      <td>7800 S Claremont Ave Chicago, IL 60620</td>\n","      <td>41.7517738</td>\n","      <td>-87.6818991</td>\n","      <td>17031700100.00</td>\n","      <td>70.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Manual search: Drug, Chemiecal, Paint Factory</td>\n","      <td>Chromium Industries, LLC</td>\n","      <td>2625-4653 W Chicago Ave Chicago, IL 60651</td>\n","      <td>41.8955613</td>\n","      <td>-87.69286489999999</td>\n","      <td>17031242800.00</td>\n","      <td>24.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Manual search: Metal Supplier</td>\n","      <td>Siegal Steel</td>\n","      <td>4747 S Kedzie Ave 1st Chicago, IL 60632</td>\n","      <td>41.8068439</td>\n","      <td>-87.70332859999999</td>\n","      <td>17031842800.00</td>\n","      <td>58.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Manual search: Manufacturing of Plastics, Foam...</td>\n","      <td>The Azek Group LLC</td>\n","      <td>1330 W Fulton St 3rd Suite 350 Chicago, IL 60607</td>\n","      <td>41.8867989</td>\n","      <td>-87.6599246</td>\n","      <td>17031833000.00</td>\n","      <td>28.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-77b98853-acdf-4b08-ac09-30bb88cbe510')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-77b98853-acdf-4b08-ac09-30bb88cbe510 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-77b98853-acdf-4b08-ac09-30bb88cbe510');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b7581798-acb2-4685-a0fb-05f43018b0b5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b7581798-acb2-4685-a0fb-05f43018b0b5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b7581798-acb2-4685-a0fb-05f43018b0b5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"manual2","summary":"{\n  \"name\": \"manual2\",\n  \"rows\": 237,\n  \"fields\": [\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"Manual search: Metal Supplier\",\n          \"Manual search: Drug, Chemiecal, Paint Factory\",\n          \"Manual search: Administrative Commericial Office for manufacturing of plastics \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 210,\n        \"samples\": [\n          \"TRETO PRODUCTS INC.\",\n          \"Fitzmar Landfill\",\n          \"ACCU-LABS, INC.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Address\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 226,\n        \"samples\": [\n          \"945 W 38th St 1St Chicago, IL 60609\",\n          \"103rd and Doty Ave Chicago, IL 60628\",\n          \"321 Center Street Hillside, IL 60162\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LATITUDE\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 219,\n        \"samples\": [\n          \"41.7237093\",\n          \"41.8108011\",\n          \"42.0326219\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LONGITUDE\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 219,\n        \"samples\": [\n          \"-87.648793\",\n          \"-87.7308903\",\n          \"-87.8810133\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GEOID10\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 256328.3847937007,\n        \"min\": 17031060900.0,\n        \"max\": 17031980100.0,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          17031550100.0,\n          17031250200.0,\n          17031671800.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"commarea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.474805611760925,\n        \"min\": 5.0,\n        \"max\": 73.0,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          65.0,\n          66.0,\n          41.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["frames.append('manual2')\n","print(frames)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hz86xgLZ7tvv","executionInfo":{"status":"ok","timestamp":1718641096193,"user_tz":300,"elapsed":185,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"a7744733-9715-4bbb-9269-9be5945519ef"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['asb', 'env', 'lic', 'haz', 'land', 'rsei', 'superNot', 'wwater', 'mfg', 'power', 'watertreat', 'manual2']\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"aWmw4ZqS8Rhi"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Merge (and dedup)"],"metadata":{"id":"mM3VyS-FplBf"}},{"cell_type":"code","source":["# frames.remove('tractsdf')\n","print(frames)\n","\n","frames = [asb, env, lic, haz, land, rsei, superNot, wwater, mfg, power, watertreat, manual2]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":271},"id":"W69Y0AYc326E","executionInfo":{"status":"error","timestamp":1718641098389,"user_tz":300,"elapsed":3,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"206003b0-6fc8-4dc8-a396-fdfaf9cb9711"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['asb', 'env', 'lic', 'haz', 'land', 'rsei', 'superNot', 'wwater', 'mfg', 'power', 'watertreat', 'manual2']\n"]},{"output_type":"error","ename":"NameError","evalue":"name 'haz' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-56-7a9f33ec7b55>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mframes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mframes\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0masb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0menv\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlic\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhaz\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mland\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrsei\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msuperNot\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwwater\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmfg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpower\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwatertreat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmanual2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'haz' is not defined"]}]},{"cell_type":"code","source":["asb = asb.reset_index(drop=True)\n","env = env.reset_index(drop=True)\n","lic = lic.reset_index(drop=True)\n","haz = haz.reset_index(drop=True)\n","land = land.reset_index(drop=True)\n","rsei = rsei.reset_index(drop=True)\n","superNot = superNot.reset_index(drop=True)\n","wwater = wwater.reset_index(drop=True)\n","mfg = mfg.reset_index(drop=True)\n","power = power.reset_index(drop=True)\n","watertreat = watertreat.reset_index(drop=True)\n","manual2 = manual2.reset_index(drop=True)"],"metadata":{"id":"9pLBlOVnABuk","colab":{"base_uri":"https://localhost:8080/","height":251},"executionInfo":{"status":"error","timestamp":1718641119554,"user_tz":300,"elapsed":418,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"7551e945-5fdb-4b49-9b7b-b698d303f654"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'haz' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-57-c21da69f4cef>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0menv\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0menv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mlic\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlic\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mhaz\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhaz\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0mland\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mland\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mrsei\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrsei\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'haz' is not defined"]}]},{"cell_type":"code","source":["print(\"asb\")\n","print(asb.columns.to_list())\n","print(\"env\")\n","print(env.columns.to_list())\n","print(\"lic\")\n","print(lic.columns.to_list())\n","print(\"haz\")\n","print(haz.columns.to_list())\n","print(\"land\")\n","print(land.columns.to_list())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":396},"id":"Y227X4iXAlxn","executionInfo":{"status":"error","timestamp":1718641144147,"user_tz":300,"elapsed":203,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"0dea157e-537b-4e83-de09-b12907ae30bf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["asb\n","['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea', 'date', 'year', 'month']\n","env\n","['Category', 'Name', 'Address', 'GEOID10', 'commarea', 'date', 'year', 'month']\n","lic\n","['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea', 'date', 'year', 'month']\n","haz\n"]},{"output_type":"error","ename":"NameError","evalue":"name 'haz' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-58-56dd212d024a>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlic\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_list\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"haz\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhaz\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_list\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"land\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mland\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_list\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'haz' is not defined"]}]},{"cell_type":"markdown","source":["'rsei', 'superNot', 'wwater', 'mfg', 'power', 'watertreat', 'manual2'"],"metadata":{"id":"xW6OkJVHBmTd"}},{"cell_type":"code","source":["print(\"rsei\")\n","print(rsei.columns.to_list())\n","print(\"superNot\")\n","print(superNot.columns.to_list())\n","print(\"wwater\")\n","print(wwater.columns.to_list())\n","print(\"mfg\")\n","print(mfg.columns.to_list())\n","print(\"power\")\n","print(power.columns.to_list())\n","print(\"watertreat\")\n","print(watertreat.columns.to_list())\n","print(\"manual2\")\n","print(manual2.columns.to_list())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e_dcw1gYBfrP","executionInfo":{"status":"ok","timestamp":1718641155741,"user_tz":300,"elapsed":195,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"1c3ef3eb-56e0-4978-85b7-d0d11a565e26"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["rsei\n","['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea', 'date', 'year', 'month']\n","superNot\n","['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea', 'date', 'year', 'month']\n","wwater\n","['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea', 'date', 'year', 'month']\n","mfg\n","['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea', 'date', 'year', 'month']\n","power\n","['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea', 'date', 'year', 'month']\n","watertreat\n","['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea', 'date', 'year', 'month']\n","manual2\n","['Category', 'Name', 'Address', 'LATITUDE', 'LONGITUDE', 'GEOID10', 'commarea', 'date', 'year', 'month']\n"]}]},{"cell_type":"code","source":["['asb', 'env', 'lic', 'haz', 'land', 'rsei', 'superNot', 'wwater', 'mfg', 'power', 'watertreat', 'manual2']\n","\n","list1 = [asb, env]\n","stacked1 = pd.concat(list1, ignore_index=True)\n","\n","list2 = [stacked1, lic, haz, land]\n","stacked2 = pd.concat(list2, ignore_index=True)\n","\n","list3 = [stacked2, rsei, superNot, wwater, mfg]\n","stacked3 = pd.concat(list3, ignore_index=True)\n","\n","list4 = [stacked3, power, watertreat, manual2]\n","stacked4 = pd.concat(list4, ignore_index=True)\n","\n","print(stacked4.shape)\n","\n","stacked5 = stacked4.drop_duplicates()\n","print(stacked5.shape)\n","\n","stacked6 = stacked5.drop_duplicates(subset=['Name', 'Address'])\n","print(stacked6.shape)\n","\n","stacked7 = stacked6.dropna(subset=['LATITUDE', 'LONGITUDE'])\n","print(stacked7.shape)\n","\n","stacked8 = stacked7.dropna(subset=['Address'])\n","print(stacked8.shape)\n","\n","stacked9 = stacked8.dropna(subset=['GEOID10'])\n","print(stacked9.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":251},"id":"j061hh3y-5Kp","executionInfo":{"status":"error","timestamp":1718641271782,"user_tz":300,"elapsed":303,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"e1e91600-19e2-42f4-e605-8a0dd1fce093"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'stacked2' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-61-8ba1c5c5ba09>\u001b[0m in \u001b[0;36m<cell line: 9>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# stacked2 = pd.concat(list2, ignore_index=True)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 9\u001b[0;31m \u001b[0mlist3\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mstacked2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrsei\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msuperNot\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwwater\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmfg\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     10\u001b[0m \u001b[0mstacked3\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconcat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlist3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mignore_index\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'stacked2' is not defined"]}]},{"cell_type":"code","source":["stacked9['Category'].value_counts().head(30)"],"metadata":{"id":"BlCNm6nzJY5x","colab":{"base_uri":"https://localhost:8080/","height":180},"executionInfo":{"status":"error","timestamp":1718641289442,"user_tz":300,"elapsed":406,"user":{"displayName":"Evan Hart","userId":"09923212880057092266"}},"outputId":"59870501-e80a-4508-a17f-f1460cf590a9"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'stacked9' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-62-1934e8c79260>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mstacked9\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Category'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalue_counts\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m30\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'stacked9' is not defined"]}]},{"cell_type":"markdown","source":["# Export and reload"],"metadata":{"id":"HV0OoMXqJZDZ"}},{"cell_type":"code","source":["with open(curated +  '00034_Pollution_industrial_sites_Chicago_lat_long.csv', 'w') as f:\n","  stacked9.to_csv(f)"],"metadata":{"id":"34GKdTSrJaXJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Reload\n","c62_Poll_sites = pd.read_csv(curated + '00034_Pollution_industrial_sites_Chicago_lat_long.csv')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZL4cqF_FJO0k","executionInfo":{"status":"ok","timestamp":1702923576736,"user_tz":360,"elapsed":2077,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"b38e7bfd-6712-48c0-a9be-9cc73b0da3cb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-134-f862f56677a0>:2: DtypeWarning: Columns (9,10) have mixed types. Specify dtype option on import or set low_memory=False.\n","  c62_Poll_sites = pd.read_csv(curated + 'colab62_pollution_sites_latlong.csv')\n"]}]},{"cell_type":"code","source":["print(c62_Poll_sites.info())\n","c62_Poll_sites.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":806},"id":"xvV8PrMnJ4Fw","executionInfo":{"status":"ok","timestamp":1702923596904,"user_tz":360,"elapsed":483,"user":{"displayName":"Sandra Tilmon","userId":"02128196715661756059"}},"outputId":"b178932e-c929-44aa-8b18-be41044f7a05"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 354901 entries, 0 to 354900\n","Data columns (total 11 columns):\n"," #   Column      Non-Null Count   Dtype  \n","---  ------      --------------   -----  \n"," 0   Unnamed: 0  354901 non-null  int64  \n"," 1   Category    354901 non-null  object \n"," 2   Name        354316 non-null  object \n"," 3   Address     354901 non-null  object \n"," 4   LATITUDE    354901 non-null  float64\n"," 5   LONGITUDE   354901 non-null  float64\n"," 6   GEOID10     354901 non-null  float64\n"," 7   commarea    301750 non-null  float64\n"," 8   date        346200 non-null  object \n"," 9   year        346201 non-null  object \n"," 10  month       346201 non-null  object \n","dtypes: float64(4), int64(1), object(6)\n","memory usage: 29.8+ MB\n","None\n"]},{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0  Category                         Name                             Address  \\\n","0           1  Asbestos                 WIRTZ REALTY      115 S WOLCOTT AVE, Chicago, IL   \n","1           2  Asbestos                 WIRTZ REALTY      117 S WOLCOTT AVE, Chicago, IL   \n","2           3  Asbestos  LAKE SHORE RECYCLING SYSTEM    1240 W EXCHANGE AVE, Chicago, IL   \n","3           4  Asbestos              CITY OF CHICAGO  1245 S CALIFORNIA AVE, Chicago, IL   \n","4           5  Asbestos              CITY OF CHICAGO         1256 W 47TH PL, Chicago, IL   \n","\n","   LATITUDE  LONGITUDE        GEOID10  commarea        date  year month  \n","0     41.87     -87.67 17031838100.00     28.00  1993-02-19  1993     2  \n","1     41.87     -87.67 17031838100.00     28.00  1993-02-19  1993     2  \n","2     41.82     -87.65 17031842600.00     61.00  2014-02-27  2014     2  \n","3     41.87     -87.70 17031843300.00     29.00  2004-10-07  2004    10  \n","4     41.81     -87.66 17031611100.00     61.00  1999-07-08  1999     7  "],"text/html":["\n","  <div id=\"df-ca66e39c-4af9-4ab1-9a41-39ab724f0e32\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Category</th>\n","      <th>Name</th>\n","      <th>Address</th>\n","      <th>LATITUDE</th>\n","      <th>LONGITUDE</th>\n","      <th>GEOID10</th>\n","      <th>commarea</th>\n","      <th>date</th>\n","      <th>year</th>\n","      <th>month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Asbestos</td>\n","      <td>WIRTZ REALTY</td>\n","      <td>115 S WOLCOTT AVE, Chicago, IL</td>\n","      <td>41.87</td>\n","      <td>-87.67</td>\n","      <td>17031838100.00</td>\n","      <td>28.00</td>\n","      <td>1993-02-19</td>\n","      <td>1993</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Asbestos</td>\n","      <td>WIRTZ REALTY</td>\n","      <td>117 S WOLCOTT AVE, Chicago, IL</td>\n","      <td>41.87</td>\n","      <td>-87.67</td>\n","      <td>17031838100.00</td>\n","      <td>28.00</td>\n","      <td>1993-02-19</td>\n","      <td>1993</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Asbestos</td>\n","      <td>LAKE SHORE RECYCLING SYSTEM</td>\n","      <td>1240 W EXCHANGE AVE, Chicago, IL</td>\n","      <td>41.82</td>\n","      <td>-87.65</td>\n","      <td>17031842600.00</td>\n","      <td>61.00</td>\n","      <td>2014-02-27</td>\n","      <td>2014</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Asbestos</td>\n","      <td>CITY OF CHICAGO</td>\n","      <td>1245 S CALIFORNIA AVE, Chicago, IL</td>\n","      <td>41.87</td>\n","      <td>-87.70</td>\n","      <td>17031843300.00</td>\n","      <td>29.00</td>\n","      <td>2004-10-07</td>\n","      <td>2004</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Asbestos</td>\n","      <td>CITY OF CHICAGO</td>\n","      <td>1256 W 47TH PL, Chicago, IL</td>\n","      <td>41.81</td>\n","      <td>-87.66</td>\n","      <td>17031611100.00</td>\n","      <td>61.00</td>\n","      <td>1999-07-08</td>\n","      <td>1999</td>\n","      <td>7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ca66e39c-4af9-4ab1-9a41-39ab724f0e32')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ca66e39c-4af9-4ab1-9a41-39ab724f0e32 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ca66e39c-4af9-4ab1-9a41-39ab724f0e32');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-df060ecc-890d-43ce-86c3-27280ed1b7f6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-df060ecc-890d-43ce-86c3-27280ed1b7f6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-df060ecc-890d-43ce-86c3-27280ed1b7f6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":135}]}]}